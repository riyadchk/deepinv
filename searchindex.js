Search.setIndex({"docnames": ["auto_examples/basics/demo_custom_prior", "auto_examples/basics/demo_dataset", "auto_examples/basics/demo_dip", "auto_examples/basics/demo_lidar", "auto_examples/basics/demo_loading", "auto_examples/basics/demo_pansharpening", "auto_examples/basics/demo_physics", "auto_examples/basics/demo_physics_tour", "auto_examples/basics/demo_train_inpainting", "auto_examples/basics/sg_execution_times", "auto_examples/index", "auto_examples/plug-and-play/demo_PnP_DPIR_deblur", "auto_examples/plug-and-play/demo_PnP_custom_optim", "auto_examples/plug-and-play/demo_RED_GSPnP_SR", "auto_examples/plug-and-play/demo_vanilla_PnP", "auto_examples/plug-and-play/sg_execution_times", "auto_examples/sampling/demo_custom_kernel", "auto_examples/sampling/demo_ddrm", "auto_examples/sampling/demo_diffpir", "auto_examples/sampling/demo_dps", "auto_examples/sampling/demo_sampling", "auto_examples/sampling/sg_execution_times", "auto_examples/self-supervised-learning/demo_equivariant_imaging", "auto_examples/self-supervised-learning/demo_multioperator_imaging", "auto_examples/self-supervised-learning/demo_n2n_denoising", "auto_examples/self-supervised-learning/demo_sure_denoising", "auto_examples/self-supervised-learning/sg_execution_times", "auto_examples/sg_execution_times", "auto_examples/unfolded/demo_DEQ", "auto_examples/unfolded/demo_LISTA", "auto_examples/unfolded/demo_custom_prior_unfolded", "auto_examples/unfolded/demo_learned_primal_dual", "auto_examples/unfolded/demo_unfolded_constrained_LISTA", "auto_examples/unfolded/demo_vanilla_unfolded", "auto_examples/unfolded/sg_execution_times", "deepinv.contributing", "deepinv.datasets", "deepinv.loss", "deepinv.models", "deepinv.multigpu", "deepinv.notation", "deepinv.optim", "deepinv.physics", "deepinv.pnp", "deepinv.sampling", "deepinv.unfolded", "deepinv.utils", "index", "sg_execution_times", "stubs/deepinv.Trainer", "stubs/deepinv.datasets.HDF5Dataset", "stubs/deepinv.datasets.generate_dataset", "stubs/deepinv.loss.CharbonnierLoss", "stubs/deepinv.loss.EILoss", "stubs/deepinv.loss.FNEJacobianSpectralNorm", "stubs/deepinv.loss.JacobianSpectralNorm", "stubs/deepinv.loss.LpNorm", "stubs/deepinv.loss.MCLoss", "stubs/deepinv.loss.MOILoss", "stubs/deepinv.loss.Neighbor2Neighbor", "stubs/deepinv.loss.SplittingLoss", "stubs/deepinv.loss.SupLoss", "stubs/deepinv.loss.SureGaussianLoss", "stubs/deepinv.loss.SurePGLoss", "stubs/deepinv.loss.SurePoissonLoss", "stubs/deepinv.loss.TVLoss", "stubs/deepinv.models.ArtifactRemoval", "stubs/deepinv.models.AutoEncoder", "stubs/deepinv.models.BM3D", "stubs/deepinv.models.ConvDecoder", "stubs/deepinv.models.DRUNet", "stubs/deepinv.models.DeepImagePrior", "stubs/deepinv.models.DiffUNet", "stubs/deepinv.models.DnCNN", "stubs/deepinv.models.EquivariantDenoiser", "stubs/deepinv.models.GSDRUNet", "stubs/deepinv.models.MedianFilter", "stubs/deepinv.models.PDNet_DualBlock", "stubs/deepinv.models.PDNet_PrimalBlock", "stubs/deepinv.models.SCUNet", "stubs/deepinv.models.SwinIR", "stubs/deepinv.models.TGV", "stubs/deepinv.models.TV", "stubs/deepinv.models.UNet", "stubs/deepinv.models.WaveletDict", "stubs/deepinv.models.WaveletPrior", "stubs/deepinv.optim.BaseOptim", "stubs/deepinv.optim.DataFidelity", "stubs/deepinv.optim.FixedPoint", "stubs/deepinv.optim.IndicatorL2", "stubs/deepinv.optim.L1", "stubs/deepinv.optim.L1Prior", "stubs/deepinv.optim.L2", "stubs/deepinv.optim.OptimIterator", "stubs/deepinv.optim.PnP", "stubs/deepinv.optim.PoissonLikelihood", "stubs/deepinv.optim.Prior", "stubs/deepinv.optim.RED", "stubs/deepinv.optim.ScorePrior", "stubs/deepinv.optim.Tikhonov", "stubs/deepinv.optim.optim_builder", "stubs/deepinv.optim.optim_iterators.ADMMIteration", "stubs/deepinv.optim.optim_iterators.CPIteration", "stubs/deepinv.optim.optim_iterators.DRSIteration", "stubs/deepinv.optim.optim_iterators.GDIteration", "stubs/deepinv.optim.optim_iterators.HQSIteration", "stubs/deepinv.optim.optim_iterators.PGDIteration", "stubs/deepinv.physics.BlindBlur", "stubs/deepinv.physics.Blur", "stubs/deepinv.physics.BlurFFT", "stubs/deepinv.physics.CompressedSensing", "stubs/deepinv.physics.Decolorize", "stubs/deepinv.physics.DecomposablePhysics", "stubs/deepinv.physics.Denoising", "stubs/deepinv.physics.Downsampling", "stubs/deepinv.physics.GaussianNoise", "stubs/deepinv.physics.Haze", "stubs/deepinv.physics.Inpainting", "stubs/deepinv.physics.LinearPhysics", "stubs/deepinv.physics.MRI", "stubs/deepinv.physics.Pansharpen", "stubs/deepinv.physics.Physics", "stubs/deepinv.physics.PoissonGaussianNoise", "stubs/deepinv.physics.PoissonNoise", "stubs/deepinv.physics.SinglePhotonLidar", "stubs/deepinv.physics.SinglePixelCamera", "stubs/deepinv.physics.Tomography", "stubs/deepinv.physics.UniformGaussianNoise", "stubs/deepinv.physics.UniformNoise", "stubs/deepinv.physics.blur.gaussian_blur", "stubs/deepinv.sampling.DDRM", "stubs/deepinv.sampling.DPS", "stubs/deepinv.sampling.DiffPIR", "stubs/deepinv.sampling.DiffusionSampler", "stubs/deepinv.sampling.MonteCarlo", "stubs/deepinv.sampling.SKRock", "stubs/deepinv.sampling.ULA", "stubs/deepinv.test", "stubs/deepinv.train", "stubs/deepinv.transform.Rotate", "stubs/deepinv.transform.Scale", "stubs/deepinv.transform.Shift", "stubs/deepinv.unfolded.BaseDEQ", "stubs/deepinv.unfolded.BaseUnfold", "stubs/deepinv.unfolded.DEQ_builder", "stubs/deepinv.unfolded.unfolded_builder", "stubs/deepinv.utils.TensorList", "stubs/deepinv.utils.cal_psnr", "stubs/deepinv.utils.get_freer_gpu", "stubs/deepinv.utils.load_url_image", "stubs/deepinv.utils.ones_like", "stubs/deepinv.utils.plot", "stubs/deepinv.utils.plot_curves", "stubs/deepinv.utils.plot_parameters", "stubs/deepinv.utils.rand_like", "stubs/deepinv.utils.randn_like", "stubs/deepinv.utils.zeros_like"], "filenames": ["auto_examples/basics/demo_custom_prior.rst", "auto_examples/basics/demo_dataset.rst", "auto_examples/basics/demo_dip.rst", "auto_examples/basics/demo_lidar.rst", "auto_examples/basics/demo_loading.rst", "auto_examples/basics/demo_pansharpening.rst", "auto_examples/basics/demo_physics.rst", "auto_examples/basics/demo_physics_tour.rst", "auto_examples/basics/demo_train_inpainting.rst", "auto_examples/basics/sg_execution_times.rst", "auto_examples/index.rst", "auto_examples/plug-and-play/demo_PnP_DPIR_deblur.rst", "auto_examples/plug-and-play/demo_PnP_custom_optim.rst", "auto_examples/plug-and-play/demo_RED_GSPnP_SR.rst", "auto_examples/plug-and-play/demo_vanilla_PnP.rst", "auto_examples/plug-and-play/sg_execution_times.rst", "auto_examples/sampling/demo_custom_kernel.rst", "auto_examples/sampling/demo_ddrm.rst", "auto_examples/sampling/demo_diffpir.rst", "auto_examples/sampling/demo_dps.rst", "auto_examples/sampling/demo_sampling.rst", "auto_examples/sampling/sg_execution_times.rst", "auto_examples/self-supervised-learning/demo_equivariant_imaging.rst", "auto_examples/self-supervised-learning/demo_multioperator_imaging.rst", "auto_examples/self-supervised-learning/demo_n2n_denoising.rst", "auto_examples/self-supervised-learning/demo_sure_denoising.rst", "auto_examples/self-supervised-learning/sg_execution_times.rst", "auto_examples/sg_execution_times.rst", "auto_examples/unfolded/demo_DEQ.rst", "auto_examples/unfolded/demo_LISTA.rst", "auto_examples/unfolded/demo_custom_prior_unfolded.rst", "auto_examples/unfolded/demo_learned_primal_dual.rst", "auto_examples/unfolded/demo_unfolded_constrained_LISTA.rst", "auto_examples/unfolded/demo_vanilla_unfolded.rst", "auto_examples/unfolded/sg_execution_times.rst", "deepinv.contributing.rst", "deepinv.datasets.rst", "deepinv.loss.rst", "deepinv.models.rst", "deepinv.multigpu.rst", "deepinv.notation.rst", "deepinv.optim.rst", "deepinv.physics.rst", "deepinv.pnp.rst", "deepinv.sampling.rst", "deepinv.unfolded.rst", "deepinv.utils.rst", "index.rst", "sg_execution_times.rst", "stubs/deepinv.Trainer.rst", "stubs/deepinv.datasets.HDF5Dataset.rst", "stubs/deepinv.datasets.generate_dataset.rst", "stubs/deepinv.loss.CharbonnierLoss.rst", "stubs/deepinv.loss.EILoss.rst", "stubs/deepinv.loss.FNEJacobianSpectralNorm.rst", "stubs/deepinv.loss.JacobianSpectralNorm.rst", "stubs/deepinv.loss.LpNorm.rst", "stubs/deepinv.loss.MCLoss.rst", "stubs/deepinv.loss.MOILoss.rst", "stubs/deepinv.loss.Neighbor2Neighbor.rst", "stubs/deepinv.loss.SplittingLoss.rst", "stubs/deepinv.loss.SupLoss.rst", "stubs/deepinv.loss.SureGaussianLoss.rst", "stubs/deepinv.loss.SurePGLoss.rst", "stubs/deepinv.loss.SurePoissonLoss.rst", "stubs/deepinv.loss.TVLoss.rst", "stubs/deepinv.models.ArtifactRemoval.rst", "stubs/deepinv.models.AutoEncoder.rst", "stubs/deepinv.models.BM3D.rst", "stubs/deepinv.models.ConvDecoder.rst", "stubs/deepinv.models.DRUNet.rst", "stubs/deepinv.models.DeepImagePrior.rst", "stubs/deepinv.models.DiffUNet.rst", "stubs/deepinv.models.DnCNN.rst", "stubs/deepinv.models.EquivariantDenoiser.rst", "stubs/deepinv.models.GSDRUNet.rst", "stubs/deepinv.models.MedianFilter.rst", "stubs/deepinv.models.PDNet_DualBlock.rst", "stubs/deepinv.models.PDNet_PrimalBlock.rst", "stubs/deepinv.models.SCUNet.rst", "stubs/deepinv.models.SwinIR.rst", "stubs/deepinv.models.TGV.rst", "stubs/deepinv.models.TV.rst", "stubs/deepinv.models.UNet.rst", "stubs/deepinv.models.WaveletDict.rst", "stubs/deepinv.models.WaveletPrior.rst", "stubs/deepinv.optim.BaseOptim.rst", "stubs/deepinv.optim.DataFidelity.rst", "stubs/deepinv.optim.FixedPoint.rst", "stubs/deepinv.optim.IndicatorL2.rst", "stubs/deepinv.optim.L1.rst", "stubs/deepinv.optim.L1Prior.rst", "stubs/deepinv.optim.L2.rst", "stubs/deepinv.optim.OptimIterator.rst", "stubs/deepinv.optim.PnP.rst", "stubs/deepinv.optim.PoissonLikelihood.rst", "stubs/deepinv.optim.Prior.rst", "stubs/deepinv.optim.RED.rst", "stubs/deepinv.optim.ScorePrior.rst", "stubs/deepinv.optim.Tikhonov.rst", "stubs/deepinv.optim.optim_builder.rst", "stubs/deepinv.optim.optim_iterators.ADMMIteration.rst", "stubs/deepinv.optim.optim_iterators.CPIteration.rst", "stubs/deepinv.optim.optim_iterators.DRSIteration.rst", "stubs/deepinv.optim.optim_iterators.GDIteration.rst", "stubs/deepinv.optim.optim_iterators.HQSIteration.rst", "stubs/deepinv.optim.optim_iterators.PGDIteration.rst", "stubs/deepinv.physics.BlindBlur.rst", "stubs/deepinv.physics.Blur.rst", "stubs/deepinv.physics.BlurFFT.rst", "stubs/deepinv.physics.CompressedSensing.rst", "stubs/deepinv.physics.Decolorize.rst", "stubs/deepinv.physics.DecomposablePhysics.rst", "stubs/deepinv.physics.Denoising.rst", "stubs/deepinv.physics.Downsampling.rst", "stubs/deepinv.physics.GaussianNoise.rst", "stubs/deepinv.physics.Haze.rst", "stubs/deepinv.physics.Inpainting.rst", "stubs/deepinv.physics.LinearPhysics.rst", "stubs/deepinv.physics.MRI.rst", "stubs/deepinv.physics.Pansharpen.rst", "stubs/deepinv.physics.Physics.rst", "stubs/deepinv.physics.PoissonGaussianNoise.rst", "stubs/deepinv.physics.PoissonNoise.rst", "stubs/deepinv.physics.SinglePhotonLidar.rst", "stubs/deepinv.physics.SinglePixelCamera.rst", "stubs/deepinv.physics.Tomography.rst", "stubs/deepinv.physics.UniformGaussianNoise.rst", "stubs/deepinv.physics.UniformNoise.rst", "stubs/deepinv.physics.blur.gaussian_blur.rst", "stubs/deepinv.sampling.DDRM.rst", "stubs/deepinv.sampling.DPS.rst", "stubs/deepinv.sampling.DiffPIR.rst", "stubs/deepinv.sampling.DiffusionSampler.rst", "stubs/deepinv.sampling.MonteCarlo.rst", "stubs/deepinv.sampling.SKRock.rst", "stubs/deepinv.sampling.ULA.rst", "stubs/deepinv.test.rst", "stubs/deepinv.train.rst", "stubs/deepinv.transform.Rotate.rst", "stubs/deepinv.transform.Scale.rst", "stubs/deepinv.transform.Shift.rst", "stubs/deepinv.unfolded.BaseDEQ.rst", "stubs/deepinv.unfolded.BaseUnfold.rst", "stubs/deepinv.unfolded.DEQ_builder.rst", "stubs/deepinv.unfolded.unfolded_builder.rst", "stubs/deepinv.utils.TensorList.rst", "stubs/deepinv.utils.cal_psnr.rst", "stubs/deepinv.utils.get_freer_gpu.rst", "stubs/deepinv.utils.load_url_image.rst", "stubs/deepinv.utils.ones_like.rst", "stubs/deepinv.utils.plot.rst", "stubs/deepinv.utils.plot_curves.rst", "stubs/deepinv.utils.plot_parameters.rst", "stubs/deepinv.utils.rand_like.rst", "stubs/deepinv.utils.randn_like.rst", "stubs/deepinv.utils.zeros_like.rst"], "titles": ["Image deblurring with custom deep explicit prior.", "Creating your own dataset", "Reconstructing an image using the deep image prior.", "Single photon lidar operator for depth ranging.", "Saving and loading models", "Stacking and concatenating forward operators.", "Creating a forward operator.", "A tour of forward sensing operators", "Training a reconstruction network.", "Computation times", "Examples", "DPIR method for PnP image deblurring.", "PnP with custom optimization algorithm (Condat-Vu Primal-Dual)", "Regularization by Denoising (RED) for Super-Resolution.", "Vanilla PnP for computed tomography (CT).", "Computation times", "Building your custom sampling algorithm.", "Image reconstruction with a diffusion model", "Implementing DiffPIR", "Implementing DPS", "Uncertainty quantification with PnP-ULA.", "Computation times", "Self-supervised learning with Equivariant Imaging for MRI.", "Self-supervised learning from incomplete measurements of multiple operators.", "Self-supervised denoising with the Neighbor2Neighbor loss.", "Self-supervised denoising with the SURE loss.", "Computation times", "Computation times", "Deep Equilibrium (DEQ) algorithms for image deblurring", "Learned Iterative Soft-Thresholding Algorithm (LISTA) for compressed sensing", "Learned iterative custom prior", "Learned Primal-Dual algorithm for CT scan.", "Unfolded Chambolle-Pock for constrained image inpainting", "Vanilla Unfolded algorithm for super-resolution", "Computation times", "How to Contribute", "Datasets", "Loss", "Models", "Using multiple GPUs", "Math Notation", "Optim", "Physics", "PnP and RED algorithms", "Diffusion algorithms", "Unfolded algorithms", "Utils", "DeepInverse: a Pytorch library for imaging with deep learning", "Computation times", "Trainer", "HDF5Dataset", "generate_dataset", "CharbonnierLoss", "EILoss", "FNEJacobianSpectralNorm", "JacobianSpectralNorm", "LpNorm", "MCLoss", "MOILoss", "Neighbor2Neighbor", "SplittingLoss", "SupLoss", "SureGaussianLoss", "SurePGLoss", "SurePoissonLoss", "TVLoss", "ArtifactRemoval", "AutoEncoder", "BM3D", "ConvDecoder", "DRUNet", "DeepImagePrior", "DiffUNet", "DnCNN", "EquivariantDenoiser", "GSDRUNet", "MedianFilter", "PDNet_DualBlock", "PDNet_PrimalBlock", "SCUNet", "SwinIR", "TGV", "TV", "UNet", "WaveletDict", "WaveletPrior", "BaseOptim", "DataFidelity", "FixedPoint", "IndicatorL2", "L1", "L1Prior", "L2", "OptimIterator", "PnP", "PoissonLikelihood", "Prior", "RED", "ScorePrior", "Tikhonov", "optim_builder", "ADMMIteration", "CPIteration", "DRSIteration", "GDIteration", "HQSIteration", "PGDIteration", "BlindBlur", "Blur", "BlurFFT", "CompressedSensing", "Decolorize", "DecomposablePhysics", "Denoising", "Downsampling", "GaussianNoise", "Haze", "Inpainting", "LinearPhysics", "MRI", "Pansharpen", "Physics", "PoissonGaussianNoise", "PoissonNoise", "SinglePhotonLidar", "SinglePixelCamera", "Tomography", "UniformGaussianNoise", "UniformNoise", "gaussian_blur", "DDRM", "DPS", "DiffPIR", "DiffusionSampler", "MonteCarlo", "SKRock", "ULA", "test", "train", "Rotate", "Scale", "Shift", "BaseDEQ", "BaseUnfold", "DEQ_builder", "unfolded_builder", "TensorList", "cal_psnr", "get_freer_gpu", "load_url_image", "ones_like", "plot", "plot_curves", "plot_parameters", "rand_like", "randn_like", "zeros_like"], "terms": {"go": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33], "end": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 41, 43, 45, 49, 86, 89, 101, 102, 103, 104, 105, 106, 118, 121, 131, 132, 142, 143], "download": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 36, 38, 70, 72, 73, 75, 79, 80, 130, 132], "full": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 47, 53, 58], "exampl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 42, 47, 48, 55, 88, 127, 128], "code": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 35, 39, 59, 72, 80, 81, 82], "In": [0, 3, 4, 5, 7, 8, 11, 12, 13, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 38, 39, 43, 45, 51, 72, 90, 102, 118, 125], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 49, 51, 52, 54, 55, 56, 57, 58, 62, 63, 64, 67, 68, 69, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 95, 96, 98, 101, 105, 107, 108, 110, 116, 117, 118, 119, 121, 123, 124, 125, 126, 130, 131, 132, 134, 137, 138, 142, 143, 153], "we": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 43, 44, 46, 54, 71, 72, 88, 89, 90, 93], "show": [0, 1, 2, 3, 4, 5, 6, 8, 11, 12, 14, 16, 17, 18, 20, 22, 23, 24, 25, 28, 29, 30, 33, 86, 88, 151, 152, 153], "how": [0, 1, 2, 3, 4, 5, 6, 8, 11, 12, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 33, 43, 86, 88, 137], "us": [0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 49, 60, 67, 68, 79, 80, 88, 90, 107, 135, 140], "an": [0, 1, 4, 6, 7, 8, 9, 10, 12, 13, 16, 17, 19, 20, 22, 23, 25, 29, 30, 32, 35, 41, 42, 43, 45, 46, 47, 48, 49, 54, 62, 63, 64, 69, 70, 71, 72, 73, 74, 75, 79, 81, 82, 84, 85, 86, 92, 93, 95, 96, 100, 102, 107, 110, 112, 115, 117, 118, 121, 125, 131, 132, 134, 135, 136, 137, 140, 142, 143, 144, 145, 147, 148, 149, 151], "here": [0, 1, 2, 4, 5, 7, 10, 12, 16, 17, 18, 19, 20, 22, 23, 28, 29, 32, 33, 36, 84], "simpl": [0, 1, 4, 6, 7, 8, 12, 16, 17, 20, 23, 24, 25, 31, 33, 42, 67, 119, 137], "l2": [0, 11, 12, 13, 14, 16, 18, 19, 20, 22, 28, 29, 30, 33, 86, 87, 88, 95, 96, 132, 144], "penal": [0, 41, 86], "squar": [0, 8, 18, 32, 57, 58, 59, 60, 61, 62, 63, 64, 126], "norm": [0, 5, 6, 16, 19, 32, 49, 54, 55, 65, 81, 83, 84, 85, 86, 90, 92, 110, 118, 147], "admm": [0, 41, 47, 88, 100, 101, 144, 145], "import": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 36, 39, 42, 55, 113, 115, 118, 122, 123, 127, 128, 130, 132, 151], "deepinv": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156], "dinv": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 36, 39, 42, 86, 87, 88, 92, 130, 132], "from": [0, 1, 4, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 41, 43, 44, 45, 47, 48, 49, 50, 51, 53, 55, 57, 58, 59, 66, 68, 70, 71, 72, 73, 75, 79, 80, 81, 82, 83, 93, 110, 112, 113, 115, 117, 118, 121, 122, 123, 125, 127, 128, 130, 131, 132, 136, 137, 138, 142, 148, 149, 151], "pathlib": [0, 1, 4, 8, 11, 12, 13, 14, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 49], "torch": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 36, 38, 39, 42, 46, 49, 51, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 73, 74, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 146, 147, 149, 150, 151, 153, 154, 155, 156], "util": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 36, 49, 107, 116, 118, 120, 121, 130, 132, 137, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156], "dataload": [0, 8, 11, 12, 13, 14, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 36, 49, 137], "data_fidel": [0, 4, 11, 12, 13, 14, 16, 18, 19, 20, 22, 28, 29, 30, 31, 32, 33, 86, 87, 88, 92, 93, 100, 101, 102, 103, 104, 131, 132, 134, 135, 136, 144, 145], "optim_build": [0, 11, 12, 13, 14, 41, 86], "training_util": [0, 8, 11, 13, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 138], "test": [0, 6, 11, 13, 35, 49, 50, 51, 70, 71, 73, 75, 79, 84, 118, 151], "torchvis": [0, 1, 8, 11, 13, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 36, 53], "transform": [0, 1, 7, 8, 11, 12, 13, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 36, 38, 53, 68, 74, 80, 84, 85, 110, 112, 119, 125, 126, 139, 140, 141], "demo": [0, 1, 4, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 32, 33], "load_dataset": [0, 1, 8, 11, 13, 22, 28, 32, 33], "checkpoint": [0, 4, 13, 14, 19, 20, 22, 23, 24, 25, 49, 80], "base_dir": [0, 1, 4, 8, 11, 12, 13, 14, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33], "original_data_dir": [0, 1, 4, 8, 11, 13, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33], "data_dir": [0, 1, 4, 8, 11, 13, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33], "measur": [0, 1, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 18, 19, 22, 24, 25, 26, 28, 31, 32, 33, 37, 40, 42, 44, 46, 48, 49, 50, 51, 53, 57, 58, 59, 60, 62, 63, 64, 66, 71, 83, 86, 87, 88, 89, 90, 92, 95, 107, 108, 110, 111, 112, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 134, 137, 138, 148], "results_dir": [0, 4, 8, 11, 12, 13, 14, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33], "deg_dir": [0, 4, 8, 11, 13, 22, 23, 24, 25, 32], "global": [0, 1, 2, 7, 8, 11, 12, 13, 14, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33], "random": [0, 1, 2, 5, 7, 8, 11, 12, 13, 14, 19, 20, 22, 23, 24, 25, 28, 29, 30, 32, 33, 38, 42, 43, 46, 53, 58, 60, 63, 64, 70, 71, 72, 73, 74, 75, 79, 80, 110, 111, 112, 113, 117, 118, 119, 120, 125, 126, 127, 130, 131, 132, 134, 139, 140, 141, 154], "seed": [0, 1, 2, 7, 8, 11, 12, 13, 14, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 110, 111, 112, 113, 117, 119, 120, 125, 126, 130, 131, 132, 134], "pytorch": [0, 1, 2, 4, 7, 8, 11, 12, 13, 14, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 36, 39, 70, 72, 73, 75, 76, 79, 80], "ensur": [0, 1, 2, 7, 8, 11, 12, 13, 14, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 38], "reproduc": [0, 1, 2, 7, 8, 11, 12, 13, 14, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 110, 111, 112, 113, 117, 119, 120, 125, 126, 130, 132], "manual_se": [0, 1, 2, 7, 8, 11, 12, 13, 14, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 110, 111, 112, 113, 117, 119, 120, 125, 126, 130, 132], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 41, 44, 48, 51, 53, 54, 55, 56, 58, 59, 60, 62, 63, 64, 65, 71, 72, 75, 76, 79, 80, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 98, 99, 100, 101, 102, 103, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 144, 145, 147, 151, 154], "devic": [0, 1, 2, 3, 4, 5, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 36, 39, 49, 51, 66, 70, 73, 75, 79, 84, 85, 108, 109, 110, 114, 117, 119, 120, 124, 125, 126, 130, 131, 132, 137, 143, 148, 149], "get_freer_gpu": [0, 1, 2, 3, 4, 5, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 130, 132], "cuda": [0, 1, 2, 3, 4, 5, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 39, 108, 109, 130, 132], "is_avail": [0, 1, 2, 3, 4, 5, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 130, 132], "els": [0, 1, 2, 3, 4, 5, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 86, 89, 130, 132, 142], "cpu": [0, 1, 2, 3, 4, 5, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 49, 51, 66, 70, 73, 75, 79, 84, 85, 108, 109, 110, 114, 117, 119, 120, 124, 125, 126, 130, 131, 132, 137, 143, 149], "cbsd68": [0, 8, 32], "paper": [0, 2, 3, 11, 17, 20, 70, 71, 73, 101, 132, 140], "zhang": [0, 11, 73], "et": [0, 2, 11, 13, 18, 19, 38, 68, 71, 72, 73, 83], "al": [0, 2, 11, 13, 18, 19, 38, 68, 71, 72, 73, 83], "2017": [0, 11], "motion": [0, 11, 13], "kernel": [0, 3, 7, 11, 13, 16, 18, 44, 76, 98, 107, 134], "levin": [0, 11, 13], "2009": [0, 11, 13], "variabl": [0, 1, 4, 11, 12, 13, 14, 20, 25, 31, 32, 41, 43, 63, 64, 81, 82, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 102], "fetch": [0, 1, 11, 12, 14], "method": [0, 2, 6, 8, 10, 12, 13, 14, 15, 16, 17, 20, 22, 23, 24, 28, 29, 30, 31, 32, 33, 38, 41, 42, 43, 44, 47, 48, 49, 50, 51, 54, 55, 70, 71, 73, 81, 82, 86, 87, 89, 92, 94, 96, 100, 101, 109, 110, 112, 115, 118, 121, 124, 126, 130, 133, 135, 137, 148], "l2_prior": 0, "dataset_nam": [0, 1, 11, 12, 13], "set3c": [0, 1, 8, 11, 12, 13, 28, 31, 32, 33], "img_siz": [0, 1, 2, 4, 5, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 28, 29, 30, 31, 32, 33, 80, 109, 114, 118, 120, 149], "256": [0, 1, 7, 8, 11, 13, 23, 38, 69, 70, 72, 75, 79, 151], "dataset_path": [0, 13], "val_transform": [0, 1, 11, 13], "compos": [0, 1, 8, 11, 13, 22, 23, 24, 25, 28, 29, 30, 32, 33, 36, 73, 84, 90, 118], "centercrop": [0, 1, 8, 11, 13, 28, 32, 33], "totensor": [0, 1, 8, 11, 13, 23, 24, 25, 28, 29, 30, 32, 33, 36], "blurfft": [0, 11, 16, 18, 28], "modul": [0, 6, 11, 14, 16, 17, 28, 29, 30, 31, 33, 38, 39, 42, 45, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 96, 110, 113, 115, 117, 118, 120, 121, 122, 123, 125, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 143, 153], "The": [0, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 35, 36, 38, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 73, 74, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 93, 95, 96, 104, 105, 106, 107, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 124, 125, 126, 130, 131, 132, 134, 135, 136, 142, 146, 151, 153], "class": [0, 1, 6, 7, 8, 11, 12, 14, 17, 18, 19, 20, 28, 29, 30, 31, 32, 33, 38, 41, 42, 43, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146], "perform": [0, 2, 8, 11, 14, 18, 19, 31, 32, 33, 38, 41, 43, 45, 49, 52, 56, 67, 69, 71, 72, 76, 77, 78, 79, 81, 82, 86, 88, 93, 96, 100, 107, 108, 109, 132, 140, 142, 143, 144, 145], "convolut": [0, 2, 3, 20, 44, 69, 70, 71, 73, 75, 80, 83, 98, 107, 108, 109], "via": [0, 12, 16, 18, 19, 20, 24, 25, 36, 39, 42, 44, 45, 47, 51, 58, 70, 72, 73, 79, 83, 98, 109, 110, 112, 117, 118, 121, 125, 126], "fourier": [0, 7, 119], "choos": [0, 4, 7, 8, 18, 19, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 39, 45, 59, 72, 86, 88], "gaussian": [0, 1, 2, 3, 5, 7, 11, 12, 13, 14, 16, 17, 18, 19, 20, 25, 28, 29, 30, 33, 40, 43, 44, 62, 63, 92, 98, 110, 113, 114, 115, 118, 120, 122, 124, 127, 129, 132, 136, 155], "standard": [0, 3, 5, 7, 11, 12, 14, 17, 18, 19, 20, 32, 36, 38, 40, 41, 43, 61, 62, 63, 72, 86, 92, 113, 115, 116, 120, 122, 124, 127, 129, 135, 136, 144, 145, 155], "deviat": [0, 3, 7, 11, 12, 13, 14, 17, 18, 19, 38, 40, 41, 43, 62, 63, 86, 92, 100, 113, 115, 120, 122, 124, 127, 129, 144, 145], "3": [0, 1, 3, 4, 5, 6, 8, 11, 12, 13, 14, 16, 17, 18, 19, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 38, 39, 55, 70, 72, 73, 75, 77, 78, 79, 80, 81, 83, 84, 85, 87, 92, 107, 110, 111, 112, 113, 117, 119, 120, 124, 125, 126, 130, 132, 151], "add": [0, 1, 11, 13, 80, 115, 118, 121, 122, 123, 127, 128, 146], "nois": [0, 1, 3, 7, 11, 12, 13, 14, 18, 19, 24, 25, 33, 38, 40, 41, 43, 44, 49, 53, 58, 62, 63, 64, 68, 70, 71, 72, 73, 74, 80, 83, 84, 92, 94, 98, 108, 110, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 132, 134, 135, 136, 147], "03": [0, 6, 11, 12, 13, 14, 15, 17, 18, 19, 22, 28, 29, 30, 32, 33, 48], "filter": [0, 2, 5, 7, 11, 13, 16, 18, 28, 68, 76, 107, 108, 109, 114, 118, 120, 124, 126, 129], "filter_torch": 0, "gaussian_blur": [0, 7, 28, 108, 109], "sigma": [0, 2, 3, 4, 6, 7, 11, 12, 13, 14, 16, 17, 18, 19, 20, 28, 31, 32, 33, 36, 40, 42, 43, 44, 62, 63, 67, 68, 70, 72, 73, 74, 76, 79, 80, 83, 92, 94, 97, 98, 102, 105, 113, 115, 122, 124, 127, 129, 130, 131, 132, 135, 136, 143], "noise_level_img": [0, 11, 12, 13, 14, 28, 31, 33], "n_channel": [0, 1, 4, 8, 11, 12, 13, 14, 22, 28, 29, 30, 31, 32, 33], "color": [0, 1, 5, 6, 7, 8, 11, 12, 13, 14, 28, 31, 32, 33, 38], "1": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 36, 41, 42, 43, 44, 45, 49, 53, 55, 58, 60, 62, 63, 64, 65, 69, 70, 72, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 147, 151, 154], "grai": [0, 1, 7, 8, 11, 12, 13, 14, 28, 31, 32, 33, 130, 132], "scale": [0, 1, 8, 11, 12, 13, 14, 23, 24, 25, 28, 31, 32, 33, 80, 83, 89], "instanc": [0, 12, 18, 30, 31, 39, 41, 43, 52, 56, 67, 69, 76, 77, 78, 79, 81, 82, 86, 88, 93, 96, 100, 101, 102, 103, 104, 138, 144, 145], "enabl": [0, 19, 42, 142, 143], "comput": [0, 1, 2, 5, 6, 8, 10, 11, 12, 13, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 41, 42, 43, 44, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 69, 73, 76, 77, 78, 79, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 108, 110, 112, 114, 115, 117, 118, 120, 121, 125, 126, 131, 132, 133, 134, 135, 136, 137, 142, 143, 147, 148, 149, 151, 152], "effic": 0, "backward": [0, 28, 45, 47, 49, 89, 90, 126, 142], "p": [0, 3, 11, 13, 16, 19, 20, 40, 44, 56, 63, 64, 86, 98, 122, 123, 124, 131, 136], "noise_model": [0, 2, 6, 7, 11, 12, 13, 14, 16, 17, 18, 20, 28, 31, 33, 36, 42, 113, 115, 118, 121, 122, 123, 127, 128, 130, 132], "gaussiannois": [0, 1, 2, 6, 7, 11, 12, 13, 14, 16, 17, 18, 20, 28, 31, 33, 36, 42, 113, 120, 130, 132], "parallel": [0, 1, 8, 11, 12, 13, 14, 22, 23, 24, 25, 28, 29, 30, 32, 33, 39, 68], "gpu": [0, 1, 8, 11, 12, 13, 14, 22, 23, 24, 25, 28, 29, 30, 32, 33, 49, 51, 66, 70, 73, 75, 79, 84, 85, 117, 119, 124, 126, 137, 148, 149], "fasten": [0, 1, 8, 11, 12, 13, 14, 22, 24, 25, 28, 29, 30, 32, 33], "train": [0, 1, 4, 9, 10, 11, 12, 13, 14, 18, 19, 36, 37, 38, 39, 44, 45, 47, 48, 49, 50, 51, 61, 66, 69, 70, 72, 73, 75, 79, 83, 98, 112, 117, 118, 121, 134, 135, 136, 137, 143, 148, 153], "otherwis": [0, 1, 8, 11, 12, 13, 14, 22, 23, 24, 25, 28, 29, 30, 32, 33, 53, 54, 55, 56, 58, 60, 72, 74, 86, 88, 107, 108, 110, 114, 118, 120, 125, 126], "all": [0, 1, 2, 8, 10, 11, 12, 13, 14, 19, 22, 23, 24, 25, 28, 29, 30, 32, 33, 35, 38, 39, 41, 42, 48, 49, 52, 56, 67, 69, 70, 71, 74, 76, 77, 78, 79, 81, 82, 86, 87, 93, 100, 117, 144, 145], "ar": [0, 1, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 49, 57, 58, 71, 73, 83, 84, 85, 86, 88, 93, 95, 101, 102, 103, 105, 107, 108, 110, 111, 112, 114, 116, 118, 120, 121, 126, 131, 134, 135, 136, 139, 143, 147, 149, 151, 153], "synchron": [0, 1, 8, 11, 12, 13, 14, 22, 23, 24, 25, 28, 29, 30, 32, 33], "num_work": [0, 1, 8, 11, 12, 13, 14, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 51], "4": [0, 1, 3, 7, 8, 11, 12, 13, 14, 15, 17, 18, 19, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 36, 38, 51, 69, 70, 74, 76, 79, 80, 83, 86, 87, 88, 92, 108, 109, 118, 119, 120, 126, 142, 151], "n_images_max": [0, 8, 11, 13, 22, 23, 24, 25, 28, 29, 30, 32, 33], "maxim": [0, 8, 11, 13, 28, 29, 30, 32, 33, 38, 87, 95, 96], "number": [0, 2, 4, 6, 8, 11, 13, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 39, 47, 49, 51, 63, 64, 67, 69, 70, 71, 73, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 110, 118, 121, 124, 125, 130, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 151, 154, 155], "restor": [0, 11, 13, 22, 28, 29, 30, 33, 38, 47, 70, 80, 130, 132], "input": [0, 2, 3, 7, 11, 12, 13, 14, 18, 19, 31, 33, 38, 41, 43, 49, 54, 55, 67, 69, 70, 71, 72, 73, 74, 75, 79, 80, 83, 88, 93, 98, 100, 101, 102, 103, 104, 107, 109, 110, 112, 114, 116, 117, 120, 123, 124, 126, 139, 140, 141, 142, 144, 145], "measurement_dir": [0, 1, 8, 11, 13, 22, 23, 24, 25, 28, 29, 30, 32, 33], "deepinv_dataset_path": 0, "generate_dataset": [0, 1, 8, 11, 13, 22, 23, 24, 25, 28, 29, 30, 32, 33, 36], "train_dataset": [0, 1, 8, 11, 13, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 36, 51], "test_dataset": [0, 1, 8, 11, 13, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 36, 51], "none": [0, 1, 11, 12, 13, 22, 23, 24, 25, 28, 33, 39, 49, 51, 66, 67, 70, 72, 73, 75, 76, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 93, 96, 100, 114, 119, 120, 121, 127, 130, 131, 132, 134, 135, 136, 140, 142, 144, 145, 149, 151, 152, 153], "save_dir": [0, 1, 8, 11, 12, 13, 14, 22, 23, 24, 25, 28, 29, 30, 32, 33, 36, 51, 151, 152, 153], "train_datapoint": [0, 8, 11, 13, 22, 23, 24, 25, 28, 29, 30, 32, 33, 51], "vector": [0, 1, 8, 11, 13, 16, 22, 23, 24, 25, 28, 29, 30, 32, 33, 40, 49, 55, 62, 63, 64, 69, 71, 81, 86, 112, 136], "2": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 38, 39, 41, 44, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 70, 71, 72, 74, 75, 76, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 98, 99, 102, 103, 106, 108, 109, 110, 112, 114, 115, 116, 117, 118, 119, 122, 123, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136], "00": [0, 1, 2, 4, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 48], "": [0, 1, 2, 4, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 36, 44, 49, 70, 72, 73, 75, 79, 80, 81, 82, 98, 107, 110, 112, 114, 119, 134, 137], "100": [0, 1, 2, 3, 4, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 86, 89, 90, 110, 118, 130, 132, 133], "34": [0, 19, 22, 29], "45it": [0, 8, 22, 23, 28, 31], "ha": [0, 1, 2, 3, 5, 6, 8, 11, 13, 17, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 59, 70, 86, 87, 88, 95, 96, 107, 108, 109, 110, 114, 117, 119, 120, 125, 126, 130, 131, 151], "been": [0, 1, 2, 8, 11, 13, 14, 22, 23, 24, 25, 28, 29, 30, 32, 33, 59, 88], "save": [0, 1, 8, 9, 10, 11, 13, 14, 22, 23, 24, 25, 28, 29, 30, 31, 33, 36, 46, 48, 49, 51, 80, 85, 87, 89, 94, 96, 110, 112, 117, 118, 121, 125, 133, 137, 143, 145, 148, 151, 152, 153], "function": [0, 1, 2, 3, 6, 7, 8, 11, 12, 13, 18, 19, 23, 28, 29, 30, 31, 32, 33, 37, 40, 41, 42, 43, 45, 46, 49, 51, 52, 53, 54, 55, 56, 58, 59, 60, 67, 69, 71, 72, 73, 76, 77, 78, 79, 81, 82, 86, 87, 88, 89, 90, 92, 93, 95, 96, 100, 101, 102, 103, 108, 110, 112, 118, 121, 124, 126, 133, 134, 135, 136, 137, 138, 142, 144, 145], "instanti": [0, 11, 12, 13, 14, 86], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 134, 135, 136, 137, 140, 142, 143, 147, 149, 151], "proxim": [0, 6, 12, 13, 14, 18, 31, 41, 42, 43, 45, 81, 82, 87, 88, 89, 90, 91, 92, 94, 95, 96, 99, 100, 106, 112, 114, 117, 118, 135, 144, 145], "gradient": [0, 12, 13, 14, 19, 20, 24, 38, 41, 43, 45, 49, 53, 59, 75, 81, 82, 87, 88, 90, 92, 95, 96, 97, 99, 100, 104, 106, 110, 114, 118, 121, 126, 131, 142, 144, 145], "descent": [0, 14, 30, 43, 87, 95, 96, 100, 104, 106, 121, 144, 145], "follow": [0, 11, 12, 14, 16, 18, 19, 20, 29, 32, 35, 38, 40, 41, 43, 47, 62, 63, 64, 85, 86, 111, 131, 132, 136, 143], "min_": [0, 2, 71], "x": [0, 1, 2, 3, 5, 6, 7, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 28, 29, 30, 31, 32, 33, 37, 40, 41, 42, 43, 44, 45, 49, 51, 52, 53, 54, 55, 56, 58, 61, 62, 63, 64, 65, 67, 68, 69, 70, 72, 73, 74, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 146, 150, 154, 155, 156], "frac": [0, 16, 18, 19, 20, 25, 29, 30, 44, 45, 54, 55, 60, 62, 63, 64, 74, 81, 82, 86, 89, 90, 92, 98, 99, 110, 112, 118, 122, 123, 131, 132, 135, 136, 142, 147], "y": [0, 1, 2, 3, 4, 5, 6, 7, 8, 12, 14, 16, 17, 18, 19, 20, 23, 24, 25, 29, 30, 31, 32, 37, 40, 41, 42, 43, 44, 45, 49, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 71, 72, 77, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 101, 102, 103, 104, 107, 108, 109, 110, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 132, 134, 136, 137, 142, 143], "ax": [0, 20, 29, 30, 32, 41, 44, 86, 87, 88, 90, 92, 102, 110, 112, 118, 121, 126], "_2": [0, 19, 23, 25, 29, 30, 32, 41, 54, 55, 62, 63, 64, 65, 81, 82, 86, 88, 89, 90, 92, 99, 135, 136], "rho": [0, 18, 19], "where": [0, 2, 3, 7, 8, 11, 12, 16, 18, 19, 20, 23, 24, 25, 29, 30, 31, 32, 36, 41, 42, 43, 44, 45, 49, 51, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 71, 81, 82, 84, 85, 86, 87, 88, 89, 91, 93, 95, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 131, 132, 136, 142, 143, 147, 151, 153], "A": [0, 4, 6, 8, 9, 10, 12, 13, 16, 18, 19, 23, 27, 28, 29, 30, 31, 32, 37, 40, 41, 42, 43, 44, 45, 47, 48, 49, 55, 57, 62, 63, 64, 66, 70, 72, 81, 82, 85, 86, 87, 88, 89, 90, 92, 93, 102, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 135, 136, 137, 143, 148, 151], "forward": [0, 1, 9, 10, 19, 22, 28, 29, 30, 31, 36, 37, 38, 39, 41, 42, 44, 45, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 96, 98, 101, 102, 103, 104, 108, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 136, 137, 139, 140, 141, 142, 146, 148, 151], "regular": [0, 2, 4, 10, 12, 14, 15, 18, 20, 22, 24, 28, 29, 30, 32, 33, 40, 41, 43, 45, 47, 48, 50, 51, 59, 60, 73, 75, 86, 87, 88, 91, 92, 93, 96, 97, 98, 99, 100, 114, 115, 118, 121, 135, 136, 137, 142, 143, 144, 145, 148], "paramet": [0, 2, 4, 8, 11, 12, 13, 16, 18, 19, 20, 32, 43, 45, 49, 50, 51, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153], "creat": [0, 5, 9, 10, 12, 42, 46, 48, 50, 51, 55, 86, 87, 88, 92, 110, 112, 113, 115, 118, 119, 121, 130, 134, 138, 148, 151], "which": [0, 1, 4, 5, 7, 11, 13, 16, 17, 18, 19, 20, 22, 24, 25, 28, 29, 30, 32, 33, 37, 38, 39, 41, 42, 44, 45, 47, 49, 51, 54, 57, 58, 59, 60, 61, 62, 63, 64, 70, 73, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 109, 110, 114, 117, 118, 121, 125, 126, 130, 131, 134, 137, 143, 149], "inherit": [0, 6, 13, 16, 31, 39, 41, 42, 43, 119], "l2prior": 0, "def": [0, 4, 6, 12, 13, 16, 18, 19, 30, 31, 32, 88, 134], "__init__": [0, 6, 12, 13, 16, 31, 134], "self": [0, 3, 6, 12, 13, 16, 26, 31, 47, 48, 49, 50, 51, 53, 57, 58, 59, 60, 62, 63, 64, 66, 73, 83, 87, 89, 92, 94, 96, 110, 112, 113, 117, 118, 119, 121, 123, 125, 130, 134, 137, 138, 139, 140, 143, 145, 148], "arg": [0, 13, 30, 31, 32, 41, 43, 81, 82, 84, 85, 86, 87, 88, 91, 94, 96, 97, 98, 99, 118, 138, 142, 143], "kwarg": [0, 6, 12, 13, 31, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 80, 87, 88, 91, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 125, 126, 137, 138, 142, 143, 144, 145], "super": [0, 6, 10, 12, 15, 16, 31, 34, 48, 50, 51, 61, 73, 75, 86, 87, 92, 94, 96, 97, 100, 114, 115, 118, 121, 134, 137, 138, 140, 143, 145, 148, 153], "explicit_prior": [0, 13, 96], "true": [0, 1, 2, 4, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 36, 39, 49, 50, 51, 53, 54, 55, 58, 60, 66, 67, 71, 72, 73, 74, 76, 77, 78, 80, 83, 86, 88, 93, 95, 96, 101, 102, 103, 110, 114, 117, 118, 123, 125, 126, 130, 131, 132, 133, 134, 137, 142, 147, 151, 152, 153], "g": [0, 1, 3, 10, 12, 13, 16, 19, 23, 29, 30, 36, 37, 38, 41, 42, 45, 49, 51, 53, 57, 58, 59, 60, 61, 74, 86, 88, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 113, 117, 123, 126, 131, 133, 143, 144, 145, 147], "5": [0, 2, 4, 5, 6, 7, 8, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 63, 64, 72, 77, 78, 80, 81, 82, 83, 86, 87, 88, 92, 110, 113, 127, 130, 132, 136, 140, 142], "view": [0, 7, 19, 20, 140], "shape": [0, 2, 7, 17, 18, 19, 20, 30, 69, 70, 80, 89, 110, 120, 125, 146, 151], "dim": [0, 3, 6, 7, 17, 19, 20, 79, 80], "return": [0, 1, 4, 6, 12, 13, 14, 16, 17, 18, 19, 20, 23, 30, 31, 32, 38, 41, 49, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 72, 74, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 107, 108, 110, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 126, 127, 128, 134, 137, 138, 139, 140, 141, 142, 146, 148, 149, 150, 151, 154, 155, 156], "specifi": [0, 7, 11, 12, 13, 14, 32, 33, 73, 96], "select": [0, 4, 11, 12, 13, 14, 22, 28, 29, 30, 32, 33, 86], "fidel": [0, 4, 11, 12, 13, 14, 22, 28, 29, 30, 32, 33, 40, 43, 45, 86, 87, 88, 90, 92, 93, 95, 100, 102, 131, 132, 144, 145], "term": [0, 4, 11, 12, 13, 14, 18, 19, 22, 28, 29, 30, 32, 33, 40, 41, 43, 45, 81, 82, 86, 87, 88, 90, 91, 93, 96, 97, 99, 100, 102, 132, 144, 145], "specif": [0, 6, 11, 13, 38, 86, 88], "given": [0, 18, 44, 49, 54, 55, 86, 88, 98, 102, 103, 104, 105, 106, 117, 118, 124], "note": [0, 16, 18, 19, 28, 30, 33, 39, 49, 87, 89, 95, 102, 105, 137], "have": [0, 2, 3, 10, 14, 17, 18, 19, 23, 38, 42, 47, 55, 72, 87, 118, 119, 121, 124, 125, 130, 143, 147], "params_algo": [0, 4, 11, 12, 13, 14, 22, 28, 29, 30, 31, 32, 33, 41, 86, 100, 143, 144, 145, 153], "stepsiz": [0, 4, 11, 12, 13, 14, 22, 28, 29, 30, 32, 33, 41, 43, 86, 87, 88, 89, 90, 91, 92, 95, 96, 99, 100, 101, 103, 104, 106, 143, 144, 145], "lambda": [0, 4, 11, 12, 13, 14, 22, 23, 24, 25, 28, 29, 30, 32, 33, 40, 41, 43, 82, 84, 85, 86, 87, 88, 92, 93, 96, 100, 101, 102, 103, 104, 105, 106, 112, 118, 121, 132, 133, 134, 135, 136, 143, 144, 145], "log": [0, 14, 16, 19, 20, 28, 29, 30, 31, 33, 38, 44, 49, 92, 95, 98, 110, 125, 131, 134, 135, 136], "verbos": [0, 2, 8, 11, 12, 13, 14, 16, 17, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 49, 54, 55, 71, 81, 82, 86, 118, 130, 131, 132, 133, 134, 135, 136, 137], "plot_metr": [0, 11, 13, 14, 28, 31, 33, 49, 137], "converg": [0, 5, 6, 11, 12, 13, 14, 17, 31, 33, 41, 43, 54, 55, 81, 82, 86, 87, 88, 89, 90, 93, 95, 96, 105, 118, 133, 134, 135, 136], "metric": [0, 2, 8, 11, 12, 13, 14, 16, 17, 20, 28, 29, 30, 31, 32, 33, 49, 53, 56, 57, 58, 59, 60, 61, 86, 88, 137, 142, 152], "along": [0, 12, 14, 31, 33, 86, 88, 137, 139, 141], "curv": [0, 8, 11, 12, 13, 14, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33], "early_stop": [0, 11, 12, 13, 14, 86, 88], "stop": [0, 2, 11, 12, 13, 71, 86, 88], "when": [0, 7, 12, 13, 16, 19, 20, 24, 35, 39, 43, 58, 59, 71, 72, 83, 87, 88, 95, 96, 118, 123, 132], "criteria": [0, 11, 13, 134], "reach": [0, 12, 13, 86, 88], "crit_conv": [0, 13, 86, 89, 90, 134, 136], "cost": [0, 12, 13, 86, 88, 93, 100, 101, 102, 103, 104, 144, 145], "differ": [0, 2, 13, 19, 23, 24, 30, 37, 43, 46, 49, 58, 59, 65, 71, 80, 120, 130, 131, 146], "between": [0, 2, 5, 11, 13, 14, 18, 19, 40, 41, 49, 53, 54, 60, 67, 83, 86, 87, 93, 95, 96, 118, 126, 132, 134, 136, 137, 151], "consecut": [0, 13, 87, 95, 96], "iter": [0, 1, 2, 4, 5, 6, 10, 11, 12, 13, 14, 17, 18, 19, 20, 22, 28, 32, 33, 34, 45, 48, 49, 50, 51, 54, 55, 61, 71, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 110, 118, 121, 131, 132, 133, 134, 135, 136, 137, 138, 142, 143, 144, 145, 148, 153], "smaller": [0, 13, 41, 60, 72, 87, 95, 96, 107, 108, 114, 120, 135, 136], "than": [0, 1, 4, 13, 18, 29, 32, 41, 46, 87, 95, 96, 107, 108, 110, 114, 118, 120, 125, 126, 135, 136, 151], "thres_conv": [0, 13, 86, 133], "1e": [0, 2, 5, 6, 8, 13, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 52, 55, 81, 82, 86, 88, 89, 90, 142], "backtrack": [0, 13, 86], "fals": [0, 1, 4, 7, 8, 11, 12, 13, 14, 18, 19, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 36, 41, 49, 50, 51, 54, 55, 56, 60, 66, 70, 71, 72, 73, 74, 75, 79, 80, 81, 82, 83, 86, 88, 93, 100, 101, 102, 103, 110, 123, 125, 126, 130, 131, 132, 133, 134, 135, 136, 137, 142, 144, 145, 147, 149, 151], "backtrak": 0, "automat": [0, 13, 14, 19, 35, 38, 87, 95, 96, 97], "adjust": [0, 13, 112], "max_it": [0, 4, 11, 12, 13, 14, 16, 17, 20, 22, 28, 29, 30, 31, 32, 33, 54, 55, 84, 86, 88, 89, 90, 118, 121, 131, 132, 133, 134, 135, 136], "500": 0, "maximum": [0, 17, 18, 44, 54, 55, 81, 82, 86, 88, 89, 90, 98, 107, 118, 121, 127, 133, 141, 142, 147, 151], "ip": [0, 11, 12, 13, 14], "model": [0, 9, 10, 18, 21, 22, 23, 24, 25, 28, 29, 30, 33, 39, 40, 41, 43, 44, 45, 46, 48, 49, 53, 54, 58, 59, 60, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 96, 98, 101, 102, 103, 108, 110, 112, 114, 115, 116, 117, 118, 120, 121, 124, 126, 130, 131, 132, 133, 134, 135, 136, 137, 138, 143, 145, 147, 148, 149, 151, 153], "g_first": [0, 4, 13, 30, 32, 41, 93, 100, 101, 102, 103, 144, 145], "can": [0, 1, 4, 5, 6, 7, 8, 10, 11, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 49, 51, 53, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 70, 71, 72, 73, 74, 75, 79, 80, 83, 84, 85, 86, 88, 92, 98, 100, 108, 110, 112, 114, 117, 118, 120, 121, 125, 126, 130, 131, 134, 137, 142, 143, 144, 145, 153], "batch_siz": [0, 1, 8, 11, 13, 19, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 36, 51, 70], "wandb_vi": [0, 8, 11, 13, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 49, 137], "plot": [0, 1, 5, 6, 7, 8, 11, 13, 18, 19, 22, 23, 24, 25, 28, 31, 32, 49, 86, 137, 142, 152, 153], "weight": [0, 4, 8, 11, 13, 14, 19, 22, 23, 24, 25, 28, 29, 31, 32, 33, 49, 53, 58, 65, 70, 72, 73, 75, 79, 80, 137, 143], "bia": [0, 8, 11, 13, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 73, 77, 78, 80, 83], "plot_imag": [0, 8, 11, 13, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 49, 137], "hdf5dataset": [0, 1, 8, 11, 13, 22, 23, 24, 25, 28, 29, 30, 32, 33, 36], "shuffl": [0, 1, 8, 11, 13, 22, 23, 24, 25, 28, 29, 30, 32, 33, 36, 70, 75], "test_dataload": [0, 8, 11, 13, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 137], "save_fold": [0, 8, 11, 13, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 137], "process": [0, 8, 11, 13, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 37, 49, 51, 68, 89, 110, 118, 121, 132], "out": [0, 8, 11, 13, 19, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 47, 55, 110, 134, 135, 136], "45": [0, 6, 7, 19, 21, 22, 29, 31, 126], "current": [0, 12, 13, 16, 17, 18, 19, 31, 49, 86, 88, 93, 101, 102, 103, 104], "crit": [0, 13, 17, 81, 82], "82e": 0, "06": [0, 13, 18, 19, 22, 29, 30, 34, 48], "object": [0, 2, 5, 7, 13, 17, 20, 22, 28, 29, 30, 31, 32, 33, 41, 43, 49, 93, 104, 118, 121, 142, 146, 151], "00e": [0, 13, 17], "05": [0, 7, 8, 9, 13, 18, 19, 22, 23, 24, 25, 29, 30, 31, 32, 33, 36, 42, 48, 81, 82, 86, 89, 90, 132, 135, 136], "33": [0, 8, 13, 17, 18, 19, 22, 26, 29, 48], "09": [0, 19, 22, 23, 29, 30, 52], "52": [0, 19, 22, 25, 28, 29, 30, 33], "7": [0, 5, 8, 12, 17, 18, 19, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 69, 77, 108, 109, 114, 117, 132], "72e": 0, "67": [0, 8, 13, 17, 18, 19, 20, 22, 28], "02": [0, 8, 14, 16, 17, 18, 19, 22, 23, 26, 28, 29, 30, 31, 32, 34, 48, 72, 132], "60": [0, 17, 18, 19, 22, 23, 28, 29, 30, 31, 33], "9": [0, 5, 8, 9, 13, 17, 18, 19, 20, 22, 23, 24, 28, 29, 30, 31, 32, 33, 60, 76, 86], "67e": 0, "07": [0, 9, 15, 19, 22, 23, 24, 29, 30, 48], "36": [0, 8, 13, 19, 22, 25, 28, 29, 30], "psnr": [0, 2, 8, 11, 12, 13, 14, 16, 17, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 49, 86, 137, 142, 147], "No": [0, 8, 11, 13, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33], "learn": [0, 2, 8, 11, 13, 24, 25, 26, 28, 32, 33, 34, 35, 38, 43, 48, 49, 50, 51, 53, 57, 58, 61, 66, 70, 71, 73, 77, 78, 83, 84, 85, 87, 92, 93, 94, 96, 102, 106, 110, 112, 115, 117, 118, 119, 121, 126, 137, 138, 139, 140, 143, 145, 148, 153], "rec": [0, 5, 6, 8, 11, 13, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33], "16": [0, 5, 8, 11, 14, 16, 18, 19, 22, 23, 28, 29, 30, 31, 32, 33, 108, 109, 114, 125], "13": [0, 6, 8, 13, 15, 18, 19, 22, 23, 28, 29, 30, 31, 32, 33, 48], "31": [0, 8, 19, 21, 22, 48], "db": [0, 2, 8, 11, 12, 13, 14, 16, 17, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33], "17": [0, 1, 8, 13, 18, 19, 22, 23, 28, 30, 31, 32], "68": [0, 5, 19, 22, 29, 30, 33], "679091771443684": 0, "3090783392264167": 0, "130569140116375": 0, "3114573240802421": 0, "total": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 48, 49, 58, 65, 67, 81, 82, 85, 141], "run": [0, 1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 18, 19, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 35, 52, 56, 67, 68, 69, 70, 71, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 100, 130, 131, 132, 133, 134, 136, 144, 145], "time": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 41, 43, 49, 72, 86, 110, 112, 114, 117, 124, 133, 137], "script": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33], "minut": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33], "880": [0, 9, 48], "second": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 41, 43, 86, 93, 107, 117, 118, 119, 120, 124], "jupyt": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33], "notebook": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33], "demo_custom_prior": [0, 9, 48], "ipynb": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33], "python": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 35, 68], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 35, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156], "py": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 48], "galleri": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 48], "sphinx": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33], "deep": [1, 9, 10, 11, 34, 35, 48, 50, 51, 61, 66, 69, 70, 71, 73, 86, 87, 92, 94, 96, 100, 109, 112, 115, 117, 118, 121, 129, 137, 138, 142, 143, 144, 147, 148, 149, 151], "invers": [1, 2, 5, 6, 7, 8, 13, 16, 17, 20, 22, 23, 25, 35, 37, 40, 42, 43, 45, 46, 47, 53, 57, 58, 61, 62, 63, 64, 66, 107, 109, 116, 117, 119, 121, 126, 130, 137], "problem": [1, 2, 6, 8, 17, 22, 23, 28, 29, 32, 35, 37, 41, 43, 45, 46, 47, 71, 81, 82, 84, 85, 86, 88, 93, 108, 110, 112, 113, 114, 116, 118, 120, 126, 130, 132], "natur": [1, 24, 46, 72], "contain": [1, 3, 4, 12, 22, 28, 29, 30, 32, 33, 37, 41, 42, 43, 44, 45, 50, 51, 58, 74, 86, 88, 93, 100, 101, 102, 103, 104, 107, 108, 109, 124, 134, 135, 136, 139, 141, 144, 145, 149, 153], "set3": 1, "imagefold": 1, "you": [1, 6, 10, 17, 18, 19, 20, 22, 23, 24, 25, 28, 33, 35, 47], "ani": [1, 6, 35, 47, 49, 53, 57, 58, 59, 60, 61, 74, 102, 118, 119, 121, 137, 142, 143], "other": [1, 5, 18, 36, 39, 41, 43, 49, 53, 57, 58, 59, 60, 61, 68, 85, 118, 121, 137, 146], "long": [1, 19, 49], "set": [1, 2, 4, 7, 13, 16, 17, 18, 20, 28, 29, 30, 31, 33, 37, 38, 39, 42, 44, 49, 50, 51, 53, 54, 55, 57, 58, 59, 60, 61, 70, 71, 72, 73, 75, 79, 80, 85, 89, 92, 98, 101, 102, 103, 115, 117, 118, 121, 122, 123, 127, 128, 134, 136, 137], "up": [1, 4, 6, 28, 29, 31, 33, 42, 72], "oper": [1, 9, 10, 18, 19, 24, 25, 26, 36, 37, 38, 40, 41, 43, 44, 47, 48, 49, 50, 51, 53, 57, 58, 59, 60, 62, 63, 64, 65, 66, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 99, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 136, 137, 138, 146, 148, 151], "32": [1, 2, 4, 6, 8, 11, 13, 14, 16, 17, 19, 20, 22, 24, 25, 28, 29, 30, 31, 32, 33, 67, 77, 78, 110, 114, 118, 120, 125, 130, 132], "batch": [1, 11, 13, 22, 23, 29, 30, 49, 51, 68, 70, 71, 72, 73, 83, 86, 87, 89, 92, 124, 137, 151], "channel": [1, 2, 3, 5, 6, 7, 11, 13, 31, 38, 69, 70, 72, 73, 75, 79, 80, 83, 110, 111, 117, 119, 124, 125, 151], "dimens": [1, 11, 13, 67, 72, 80, 87, 89, 90, 95, 112, 139, 141], "displai": [1, 108, 109, 114, 120], "unsqueez": [1, 6, 7, 11, 13, 17, 20, 31, 87, 112], "zip": [1, 8, 10, 11, 19, 32, 33], "385k": [1, 11, 33], "ib": [1, 8, 11, 22, 32, 33], "1mib": [1, 22], "denois": [1, 2, 4, 10, 11, 12, 14, 15, 16, 20, 22, 26, 28, 29, 32, 33, 40, 41, 44, 45, 47, 48, 50, 51, 59, 62, 63, 64, 66, 68, 70, 72, 73, 74, 75, 79, 80, 83, 84, 85, 86, 87, 92, 94, 96, 97, 98, 100, 112, 114, 115, 118, 121, 122, 123, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 143, 144, 145, 148], "ignor": [1, 38, 52, 56, 67, 69, 76, 77, 78, 79, 81, 82], "attribut": [1, 18, 39, 101, 102, 103, 115, 122, 123, 127, 128, 153], "e": [1, 3, 6, 10, 12, 16, 17, 18, 22, 23, 24, 25, 36, 37, 38, 41, 42, 43, 44, 45, 49, 51, 53, 54, 55, 57, 58, 59, 60, 61, 70, 73, 74, 75, 84, 86, 87, 88, 89, 90, 92, 95, 98, 100, 108, 109, 110, 111, 113, 117, 118, 119, 123, 126, 130, 134, 135, 136, 142, 143, 144, 145, 147], "label": [1, 25, 29, 41, 43, 72, 86], "physic": [1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 36, 40, 41, 43, 44, 49, 51, 53, 57, 58, 59, 60, 62, 63, 64, 66, 71, 86, 87, 88, 89, 90, 92, 93, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 142], "dinv_dataset_path": [1, 11, 13], "136": [1, 19], "05it": [1, 22, 29, 32], "over": [1, 19, 74, 81, 82, 88, 126], "pair": [1, 8, 23, 32, 36, 37, 50, 51, 60, 137], "signal": [1, 6, 7, 37, 38, 40, 46, 50, 51, 53, 57, 58, 61, 66, 89, 98, 107, 108, 110, 111, 112, 114, 118, 120, 121, 124, 126, 147], "adapt": [1, 46, 59, 62, 63, 64, 72, 80, 81, 82, 86], "build": [1, 10, 12, 20, 21, 38, 39, 45, 47, 48, 76, 87, 92, 96, 98, 100, 109, 112, 115, 118, 121, 134, 136, 144, 145, 147, 148, 149, 151], "custom": [1, 4, 9, 10, 14, 15, 21, 32, 34, 46, 47, 48, 49, 50, 51, 61, 73, 76, 86, 87, 92, 93, 94, 96, 98, 100, 106, 109, 110, 112, 114, 115, 118, 120, 121, 125, 129, 134, 136, 137, 138, 143, 144, 145, 147, 148, 149, 151, 152, 153], "case": [1, 3, 12, 19, 36, 38, 39, 43, 51, 72, 89, 90, 93, 110, 118, 121, 125, 126, 131], "doesn": [1, 98], "t": [1, 3, 18, 19, 29, 30, 72, 76, 81, 88, 95, 98, 116, 124, 131, 132, 137, 142], "meet": [1, 20], "need": [1, 4, 16, 18, 32, 35, 39, 41, 49, 52, 56, 67, 69, 76, 77, 78, 79, 81, 82, 102, 123], "325": [1, 9, 14, 15, 48], "demo_dataset": [1, 9, 48], "noisi": [2, 16, 17, 18, 19, 20, 38, 42, 59, 62, 63, 64, 68, 70, 72, 73, 80, 83, 84, 85, 112, 115, 120, 121, 122, 123, 127, 128], "incomplet": [2, 10, 17, 20, 26, 48, 50, 51, 53, 57, 58, 66, 83, 110, 112, 117, 118, 121, 126, 137, 138, 148], "base": [2, 16, 19, 36, 41, 43, 44, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 146], "ulyanov": [2, 71], "2018": [2, 31, 71], "minim": [2, 23, 29, 32, 41, 43, 71, 81, 86, 93, 105, 131], "loss": [2, 8, 10, 20, 22, 23, 26, 28, 29, 30, 31, 32, 33, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 71, 83, 87, 92, 112, 113, 118, 121, 123, 137, 138, 148], "theta": [2, 8, 23, 32, 43, 71, 131, 132], "af_": [2, 71], "z": [2, 12, 31, 41, 43, 44, 62, 63, 64, 71, 88, 90, 93, 95, 98, 101, 103, 112, 114, 115, 118, 121, 122, 127, 136], "f_": [2, 8, 71], "decod": [2, 69, 70, 71], "network": [2, 9, 10, 18, 19, 20, 40, 43, 45, 48, 49, 50, 51, 54, 59, 60, 61, 62, 63, 64, 66, 67, 69, 70, 71, 72, 73, 75, 79, 80, 83, 108, 110, 112, 114, 117, 118, 120, 121, 126, 131, 132, 137, 138, 148], "should": [2, 3, 12, 22, 28, 41, 51, 52, 56, 60, 62, 63, 64, 67, 69, 71, 76, 77, 78, 79, 80, 81, 82, 96, 100, 102, 106, 108, 110, 112, 114, 116, 118, 119, 120, 125, 126, 130, 132, 134, 136, 137, 143, 144, 145, 151], "earli": [2, 13, 71], "avoid": [2, 16, 71, 134], "overfit": [2, 71], "adam": [2, 8, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 71], "optim": [2, 4, 8, 10, 11, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 43, 44, 45, 48, 49, 71, 73, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 112, 115, 118, 121, 125, 131, 132, 134, 135, 136, 142, 143, 144, 145, 147, 148, 149, 151, 152, 153], "load_url_imag": [2, 12, 14, 16, 17, 18, 19, 20], "lionel": [2, 16, 17, 20], "messi": [2, 16, 17, 20], "wikipedia": [2, 16, 17, 20, 110, 118, 126], "url": [2, 4, 7, 12, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 80, 149], "http": [2, 4, 7, 10, 13, 14, 16, 17, 19, 20, 22, 23, 24, 25, 29, 31, 47, 49, 53, 54, 55, 56, 58, 59, 60, 62, 63, 64, 66, 72, 73, 74, 80, 81, 82, 102, 110, 114, 116, 118, 124, 126, 130, 131, 132, 135, 136, 137], "upload": [2, 16, 17, 20], "wikimedia": [2, 16, 17, 20], "org": [2, 16, 17, 20, 53, 54, 55, 56, 58, 62, 63, 64, 66, 73, 74, 110, 114, 116, 118, 124, 126, 130, 131, 132, 135, 136], "common": [2, 16, 17, 20, 28, 33, 41], "b": [2, 3, 4, 13, 14, 16, 17, 19, 20, 22, 23, 24, 25, 30, 32, 62, 63, 64, 76, 80, 87, 89, 92, 119, 124, 134, 135, 136, 147, 151], "b4": [2, 16, 17, 20], "argentina": [2, 16, 17, 20], "2022": [2, 16, 17, 20], "fifa": [2, 16, 17, 20], "world": [2, 16, 17, 20], "cup_": [2, 16, 17, 20], "28crop": [2, 16, 17, 20], "29": [2, 8, 13, 15, 16, 17, 18, 19, 20, 22, 31, 32], "jpg": [2, 16, 17, 20], "_c": [2, 7, 20], "0x7f11e1ddadb0": [2, 7, 20], "inpaint": [2, 4, 8, 10, 17, 19, 20, 23, 34, 47, 48, 50, 51, 61, 85, 87, 89, 94, 96, 112, 118, 121, 130, 132, 137, 138, 143, 145, 148], "level": [2, 3, 4, 7, 12, 14, 16, 17, 18, 19, 20, 29, 32, 33, 38, 41, 44, 68, 70, 72, 73, 74, 80, 83, 84, 85, 92, 94, 95, 98, 124, 130, 131, 132, 135, 136], "mask": [2, 4, 6, 7, 8, 16, 17, 19, 20, 22, 23, 24, 32, 59, 60, 112, 117, 119, 125, 130, 132], "tensor_s": [2, 7, 17, 19, 20, 23, 112, 117, 130, 132], "appli": [2, 12, 16, 17, 18, 19, 20, 33, 41, 68, 72, 74, 83, 86, 98, 108, 109, 112, 114, 117, 118, 119, 120, 124, 125, 139, 140, 141], "onli": [2, 6, 8, 11, 12, 13, 16, 18, 19, 22, 23, 24, 25, 28, 31, 32, 41, 49, 51, 70, 71, 72, 73, 75, 79, 80, 84, 85, 87, 96, 117, 118, 129, 131, 134, 137, 142, 151], "work": [2, 3, 4, 8, 13, 17, 18, 19, 29, 32, 71], "certain": [2, 36, 71], "recommend": [2, 4, 5, 6, 8, 18, 24, 25, 29, 32, 39, 41, 47, 71, 110, 118, 125], "convdecod": [2, 71], "rate": [2, 49, 71, 79, 80], "manual": [2, 14], "obtain": [2, 5, 7, 16, 20, 44, 45, 74, 130, 131, 132, 134, 135, 140], "good": [2, 8, 32, 126], "howev": [2, 22, 39, 53, 57, 58, 59, 60, 61, 71, 120], "valu": [2, 5, 6, 7, 16, 17, 18, 22, 25, 28, 29, 30, 41, 42, 44, 46, 49, 62, 63, 64, 71, 72, 80, 81, 86, 88, 98, 100, 109, 112, 119, 123, 125, 126, 130, 132, 135, 136, 144, 145, 147, 151], "mai": [2, 3, 41, 43, 71, 83, 86, 93, 123], "experi": [2, 71], "small": [2, 25, 28, 33, 41, 63, 64, 81, 126], "reduc": [2, 18, 19, 22, 23, 24, 25], "runtim": 2, "could": 2, "improv": [2, 66], "more": [2, 4, 16, 32, 38, 41, 42, 43, 45, 49, 70, 72, 73, 74, 75, 79, 80, 84, 86, 91, 100, 110, 118, 121, 126, 135, 136, 137, 140, 142, 144, 145], "lr": [2, 8, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33], "64": [2, 5, 6, 7, 8, 12, 18, 19, 22, 23, 24, 25, 28, 29, 30, 33, 70, 73, 75, 79], "per": [2, 3, 17, 20, 22, 23, 38, 43, 44, 70, 72, 73, 79, 124, 125, 139, 141], "layer": [2, 22, 31, 33, 38, 45, 67, 69, 70, 72, 73, 79, 80, 83], "in_siz": [2, 69], "size": [2, 3, 7, 8, 11, 13, 16, 18, 19, 20, 22, 28, 29, 30, 31, 32, 33, 40, 41, 42, 45, 46, 51, 60, 62, 63, 64, 69, 71, 72, 76, 80, 86, 87, 88, 89, 90, 92, 102, 105, 107, 108, 109, 110, 112, 114, 117, 118, 119, 120, 121, 124, 125, 126, 135, 136, 142, 146, 147, 149, 151], "backbon": [2, 8, 29, 39, 45], "img_shap": [2, 7, 12, 29, 30, 36, 42, 69, 110, 125], "f": [2, 3, 5, 6, 12, 14, 16, 17, 18, 20, 36, 41, 43, 45, 54, 55, 63, 76, 81, 86, 87, 88, 90, 92, 93, 96, 100, 101, 102, 103, 104, 105, 106, 112, 118, 119, 132, 134, 144, 145], "deepimageprior": [2, 69], "learning_r": [2, 8, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 71], "input_s": [2, 71], "somewhat": 2, "surpris": 2, "sinc": [2, 16, 19, 20, 39, 52, 56, 67, 69, 76, 77, 78, 79, 81, 82, 88, 89, 90, 110, 125], "mani": [2, 45, 47, 114, 137], "potenti": [2, 13, 30], "data": [2, 36, 37, 39, 40, 43, 45, 49, 51, 53, 57, 58, 59, 60, 61, 62, 63, 64, 79, 86, 87, 88, 89, 90, 92, 93, 95, 100, 101, 102, 103, 104, 131, 132, 137, 144, 145], "architectur": [2, 4, 8, 18, 22, 24, 25, 28, 32, 33, 39, 45, 47, 66, 67, 69, 70, 73, 75, 79, 80, 83], "act": [2, 25, 41, 42, 86], "implicit": [2, 41, 43, 45, 96, 142], "provid": [2, 6, 7, 12, 13, 14, 16, 38, 44, 45, 46, 51, 120, 126, 137], "while": [2, 6, 22, 41, 43, 52, 56, 67, 69, 76, 77, 78, 79, 81, 82, 86], "phenomenon": 2, "yet": 2, "well": [2, 5, 6, 19, 47, 53, 57, 58, 59, 60, 61, 69, 88, 93, 108, 110, 112, 114, 118, 120, 126, 137, 143], "understood": 2, "some": [2, 6, 7, 16, 19, 38, 39, 42, 46, 108, 110, 112, 114, 118, 120, 121, 126], "effort": 2, "explain": [2, 47], "For": [2, 4, 8, 12, 14, 18, 19, 22, 28, 29, 30, 32, 33, 36, 39, 41, 43, 81, 86, 96, 124, 135, 136, 142], "see": [2, 3, 16, 19, 20, 25, 29, 30, 32, 40, 41, 42, 45, 49, 58, 59, 60, 63, 64, 69, 70, 72, 73, 75, 79, 80, 81, 82, 84, 86, 88, 100, 101, 110, 118, 121, 124, 125, 137, 140, 142, 143, 144, 145], "neural": [2, 8, 19, 20, 31, 43, 54, 69, 83], "tangent": 2, "link": [2, 10, 18, 40, 72, 134, 135, 136], "cnn": [2, 11, 70], "non": [2, 20, 108, 110, 112, 114, 116, 118, 120, 121, 126, 143], "local": [2, 24, 35], "linear": [2, 5, 7, 8, 12, 14, 16, 17, 18, 19, 20, 29, 30, 32, 41, 65, 66, 81, 82, 87, 88, 108, 110, 112, 113, 114, 116, 117, 118, 119, 120, 121, 125, 126, 137], "x_lin": [2, 12, 14, 16, 17, 20], "a_adjoint": [2, 4, 6, 7, 12, 14, 16, 17, 20, 31, 32, 42, 86, 87, 88, 92, 108, 110, 112, 114, 118, 120, 126], "print": [2, 4, 5, 6, 8, 12, 14, 16, 17, 20, 22, 23, 24, 25, 32, 54, 55, 71, 81, 82, 86, 87, 92, 118, 130, 131, 132, 133, 134, 135, 136], "cal_psnr": [2, 12, 14, 16, 17, 20, 118, 130, 132], "2f": [2, 5, 6, 12, 14, 16, 17, 20, 54], "titl": [2, 3, 5, 6, 7, 12, 14, 16, 17, 18, 19, 20, 151], "ground": [2, 8, 12, 14, 16, 17, 18, 19, 20, 29, 30, 32, 49, 61, 86, 88, 137, 142], "truth": [2, 8, 12, 14, 16, 17, 18, 19, 20, 29, 30, 32, 49, 61, 86, 88, 137, 142], "11": [2, 8, 13, 18, 19, 22, 28, 29, 30, 31, 32, 33], "106": [2, 19], "50it": [2, 8, 28, 29, 30], "23": [2, 8, 13, 18, 19, 22, 23, 24, 28, 30, 31, 32], "110": [2, 19], "36it": [2, 8, 22, 23, 29], "35": [2, 8, 19, 22, 24, 25, 28, 31, 32, 33], "111": [2, 19, 28, 29], "47it": [2, 8, 22, 23, 28], "47": [2, 8, 18, 19, 22, 23, 28, 32], "112": [2, 19], "01it": [2, 29, 30, 32], "59": [2, 8, 19, 22, 32], "71": [2, 13, 19, 22, 28, 32, 33], "97it": [2, 29], "83": [2, 13, 18, 19, 22, 24], "37it": [2, 8, 22, 29, 31, 33], "95": [2, 19, 22, 31], "57it": [2, 8, 24, 29, 31], "77it": [2, 8, 17, 18, 29, 31, 32], "8": [2, 8, 11, 13, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 38, 74, 80, 108, 109, 118], "58": [2, 19, 22, 28, 29, 30, 33, 34, 48], "19": [2, 8, 17, 18, 19, 22, 23, 24, 25, 28, 30, 31, 32, 33], "61": [2, 19, 22], "205": [2, 9, 33, 48], "demo_dip": [2, 9, 48], "singlephotonlidar": 3, "matplotlib": [3, 18, 29], "pyplot": [3, 18, 29], "plt": [3, 18, 29], "bin": [3, 124], "pixel": [3, 4, 8, 12, 17, 19, 20, 25, 29, 30, 32, 42, 67, 70, 75, 108, 109, 114, 117, 118, 120, 121, 124, 125, 126, 147], "impuls": [3, 124], "respons": [3, 124], "defin": [3, 5, 6, 18, 22, 23, 24, 25, 36, 41, 42, 43, 45, 52, 53, 56, 57, 58, 61, 67, 69, 76, 77, 78, 79, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 93, 98, 101, 102, 103, 104, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 125, 126, 130, 131, 132, 134], "y_": [3, 124], "j": [3, 19, 81, 82, 86, 110, 124], "mathcal": [3, 18, 19, 20, 23, 32, 37, 44, 62, 63, 64, 74, 89, 98, 110, 115, 122, 123, 124, 127, 128, 131, 132, 136], "h": [3, 30, 71, 80, 88, 108, 109, 110, 114, 117, 119, 124, 125, 147, 151], "d_": [3, 32, 124, 131, 132], "r_": [3, 16, 23, 124], "b_": [3, 124], "poisson": [3, 7, 24, 25, 44, 63, 64, 95, 122, 123, 124], "scene": [3, 116, 124], "intens": [3, 116, 124], "background": [3, 95, 124], "irf_sigma": 3, "peak": [3, 124, 147], "locat": 3, "around": [3, 46], "50th": 3, "ratio": [3, 7, 60, 80, 133, 147], "10": [3, 4, 5, 6, 8, 16, 17, 18, 19, 20, 22, 23, 25, 28, 29, 30, 31, 32, 33, 54, 55, 73, 84, 108, 109, 110, 114, 125, 126, 130, 134, 135, 147], "w": [3, 11, 19, 30, 31, 71, 80, 95, 107, 108, 109, 110, 117, 118, 119, 124, 125, 137, 147, 151], "first": [3, 5, 7, 11, 13, 18, 19, 30, 31, 41, 43, 65, 86, 87, 93, 107, 119, 120, 124, 125, 137, 139, 141, 151], "third": [3, 124], "associ": [3, 7, 18, 36, 38, 51, 53, 57, 58, 59, 60, 62, 63, 64, 86, 87, 88, 92, 134], "sbr": 3, "50": [3, 4, 8, 11, 13, 17, 18, 19, 22, 23, 24, 28, 29, 31, 32, 33, 38, 55, 80, 87, 88, 96, 118, 121, 124, 142], "bkg_level": 3, "d": [3, 16, 20, 32, 41, 44, 54, 56, 65, 72, 74, 81, 82, 87, 89, 90, 92, 94, 95, 97, 98, 110, 116, 124], "ones": [3, 4, 6, 7, 16, 18, 19, 29, 32, 43, 46, 108, 109, 118, 119, 126, 130, 132, 150], "r": [3, 6, 12, 13, 16, 18, 19, 24, 25, 31, 32, 41, 43, 54, 55, 59, 60, 62, 63, 64, 70, 75, 76, 81, 86, 89, 95, 110, 112, 117, 124, 137], "ones_lik": 3, "cat": [3, 6, 7, 19, 83], "shown": [3, 31, 43], "blue": 3, "red": [3, 10, 15, 48, 50, 51, 75, 86, 87, 92, 96, 98, 100, 114, 115, 118, 121, 137, 148], "xhat": [3, 17, 18, 19, 86, 130, 132], "a_dagg": [3, 5, 6, 7, 31, 42, 107, 110, 112, 116, 118, 121, 124, 126], "figur": [3, 18, 151], "subplot": [3, 18], "detach": [3, 4, 18, 19, 29, 32], "numpi": [3, 16, 17, 18, 19, 130], "stem": 3, "linefmt": 3, "markerfmt": 3, "tight_layout": [3, 18], "home": [3, 4, 13, 14, 18, 19, 20, 22, 23, 24, 25, 29, 32], "runner": [3, 4, 13, 14, 18, 19, 20, 22, 23, 24, 25, 29, 32], "77": [3, 18, 19, 22, 28], "userwarn": [3, 4, 18, 29, 32], "pad": [3, 8, 22, 23, 24, 25, 28, 31, 33, 76, 83, 107, 108, 109, 114, 120, 139, 140, 141], "same": [3, 4, 16, 22, 23, 24, 25, 32, 38, 41, 76, 86, 87, 89, 90, 95, 100, 107, 108, 110, 114, 120, 144, 145, 147, 150, 151, 154, 155, 156], "even": [3, 19], "length": [3, 4, 22, 29, 30, 31, 32, 33, 86, 151], "odd": 3, "dilat": [3, 8, 23, 24, 25, 140], "requir": [3, 6, 12, 16, 17, 22, 32, 39, 41, 43, 44, 86, 98, 102, 130, 132, 134, 135, 136], "zero": [3, 5, 6, 7, 16, 18, 19, 30, 46, 85, 108, 109, 114, 117, 118, 139, 156], "copi": [3, 4, 18, 28, 29, 30, 32, 33], "trigger": 3, "intern": [3, 13, 87, 95, 96], "aten": 3, "src": 3, "nativ": 3, "cpp": 3, "1040": 3, "nn": [3, 4, 7, 16, 29, 30, 32, 38, 39, 42, 49, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 66, 71, 80, 83, 108, 110, 113, 117, 120, 123, 125, 130, 131, 132, 133, 134, 135, 136, 137, 153], "conv1d": 3, "irf": 3, "333": [3, 9, 48], "demo_lidar": [3, 9, 48], "wai": [4, 22, 23, 24, 25, 35, 47], "purpos": 4, "unfold": [4, 22, 23, 28, 31, 34, 47, 48, 50, 51, 61, 73, 85, 87, 89, 92, 94, 96, 112, 114, 115, 117, 118, 121, 137, 138, 142, 143, 144, 145, 148, 153], "chambol": [4, 10, 31, 34, 48, 50, 51, 61, 81, 82, 85, 87, 89, 94, 96, 100, 102, 112, 117, 118, 121, 137, 138, 143, 144, 145, 148], "pock": [4, 10, 31, 34, 48, 50, 51, 61, 81, 82, 85, 87, 89, 94, 96, 100, 102, 112, 117, 118, 121, 137, 138, 143, 144, 145, 148], "algorithm": [4, 6, 10, 15, 21, 22, 32, 34, 41, 47, 48, 50, 51, 61, 73, 76, 77, 78, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 96, 98, 100, 101, 102, 103, 104, 105, 106, 109, 110, 112, 114, 115, 118, 121, 125, 126, 129, 131, 132, 133, 134, 135, 136, 137, 138, 142, 143, 144, 145, 147, 148, 149, 151, 152, 153], "its": [4, 6, 12, 18, 29, 30, 31, 32, 37, 42, 81, 82, 86, 112], "describ": [4, 11, 20, 23, 107, 117, 118, 121, 130, 131, 132], "constrain": [4, 10, 34, 48, 50, 51, 61, 85, 87, 89, 94, 96, 112, 117, 118, 121, 137, 138, 143, 145, 148], "indicatorl2": [4, 32], "prior": [4, 9, 10, 11, 12, 14, 22, 28, 29, 32, 33, 34, 40, 44, 45, 47, 48, 50, 51, 61, 69, 70, 71, 86, 87, 88, 91, 92, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 106, 109, 110, 112, 115, 117, 118, 121, 129, 134, 135, 136, 137, 138, 143, 144, 145, 147, 148, 149, 151, 153], "pnp": [4, 10, 15, 21, 22, 28, 29, 32, 38, 41, 47, 48, 49, 50, 51, 54, 70, 73, 86, 87, 92, 93, 96, 98, 100, 109, 112, 115, 117, 118, 121, 125, 126, 132, 134, 136, 137, 147, 148, 149, 151, 152], "unfolded_build": [4, 22, 29, 30, 31, 32, 33, 45], "get_weights_url": [4, 22, 23, 24, 25], "dataset": [4, 9, 10, 14, 19, 37, 38, 47, 48, 49, 50, 51, 112, 113, 115, 118, 121, 137, 148, 151], "degrad": [4, 14, 24, 25, 38], "ckpt_dir": [4, 8, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33], "ckpt": [4, 8, 13, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33], "miss": 4, "rather": [4, 18, 29, 32, 44, 46, 98], "complex": [4, 7, 110, 119, 125], "consist": [4, 7, 12, 18, 19, 22, 23, 32, 38, 40, 45, 57, 58, 59, 60, 61, 86, 120], "radiu": [4, 32, 89, 90], "trainabl": [4, 8, 22, 23, 24, 25, 28, 29, 30, 32, 33, 45, 59, 60, 62, 63, 64, 83, 143], "soft": [4, 10, 30, 32, 34, 48, 50, 51, 61, 84, 85, 87, 90, 92, 94, 96, 106, 110, 118, 121, 137, 138, 143, 145, 148, 153], "threshold": [4, 10, 30, 32, 34, 48, 50, 51, 61, 84, 85, 86, 87, 90, 91, 92, 94, 96, 106, 110, 118, 121, 133, 134, 136, 137, 138, 143, 145, 148, 153], "wavelet": [4, 29, 32, 84, 85], "basi": [4, 29, 32], "If": [4, 5, 6, 22, 23, 29, 30, 32, 35, 44, 47, 49, 51, 56, 60, 62, 63, 64, 66, 70, 71, 72, 73, 74, 75, 79, 80, 85, 86, 89, 93, 98, 100, 101, 102, 103, 107, 108, 110, 112, 114, 117, 118, 120, 121, 123, 125, 126, 127, 129, 134, 135, 136, 142, 144, 145, 147, 149, 151], "initi": [4, 13, 18, 19, 22, 28, 29, 30, 32, 33, 49, 70, 71, 72, 73, 75, 79, 80, 86, 88, 121, 131, 132, 153], "list": [4, 5, 7, 18, 19, 22, 23, 28, 29, 30, 31, 32, 33, 39, 41, 46, 47, 49, 51, 58, 70, 71, 75, 79, 84, 86, 100, 107, 108, 110, 112, 114, 116, 120, 121, 126, 130, 137, 140, 143, 144, 145, 146, 151], "distinct": [4, 22, 29, 30, 31, 32, 33, 41, 86, 100, 144, 145], "each": [4, 16, 18, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 41, 49, 59, 63, 64, 68, 71, 79, 80, 84, 85, 86, 88, 93, 100, 118, 121, 137, 143, 144, 145, 151], "cp": [4, 32, 41, 100, 144, 145], "fix": [4, 11, 22, 28, 29, 30, 32, 33, 41, 43, 45, 86, 88, 93, 118, 121, 142], "across": [4, 22, 29, 30, 32, 33, 49, 51, 86, 125, 142], "singl": [4, 9, 10, 12, 17, 22, 24, 28, 29, 30, 31, 32, 33, 38, 41, 44, 46, 48, 51, 59, 86, 93, 100, 101, 102, 103, 104, 105, 106, 108, 109, 118, 119, 121, 124, 125, 144, 145, 146, 148, 151], "30": [4, 8, 11, 14, 17, 18, 19, 22, 28, 29, 31, 32], "20": [4, 7, 8, 17, 18, 19, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 38, 48, 73, 147], "unrol": [4, 22, 28, 29, 30, 31, 32, 33, 38, 45, 49, 137, 142], "waveletprior": [4, 29, 32, 84], "wv": [4, 29, 32, 84, 85], "db8": [4, 29, 32, 84, 85], "rang": [4, 6, 9, 10, 18, 19, 22, 23, 29, 31, 32, 39, 48, 49, 55, 72, 80, 88, 121, 124, 132, 133, 139, 148], "lamb": [4, 11, 12, 13, 22, 28, 29, 30, 32, 33, 87, 96], "sigma_denois": [4, 11, 13, 20, 22, 28, 29, 32, 33, 94, 97], "01": [4, 8, 9, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 48, 62, 63, 64, 71], "g_param": [4, 11, 12, 13, 14, 16, 22, 28, 29, 30, 31, 32, 33, 41, 88, 143], "k": [4, 7, 11, 12, 16, 20, 29, 30, 31, 32, 41, 43, 45, 81, 84, 85, 86, 88, 93, 101, 102, 103, 104, 105, 106, 135, 136, 143], "k_adjoint": [4, 31, 32], "trainable_param": [4, 22, 28, 29, 30, 32, 33, 143], "becaus": [4, 32], "custom_init_cp": [4, 32], "x_init": [4, 32, 86, 88, 121, 131, 132, 134], "u_init": [4, 32], "est": [4, 12, 13, 31, 32, 86, 88, 93, 101, 102, 103, 104], "custom_init": [4, 31, 32, 86], "39": [4, 8, 19, 22, 28, 29, 32, 33, 34, 48], "To": [4, 18, 28, 29, 32, 33, 96], "construct": [4, 18, 29, 32, 42], "tensor": [4, 5, 6, 7, 12, 13, 18, 19, 29, 31, 32, 46, 49, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 72, 73, 74, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 134, 139, 140, 141, 142, 146, 147, 149, 150, 151, 154, 155, 156], "sourcetensor": [4, 18, 29, 32], "clone": [4, 18, 19, 29, 32], "requires_grad_": [4, 18, 19, 29, 32, 55], "el": [4, 29, 32], "param_valu": [4, 29, 32], "state_dict": [4, 22, 23, 24, 25, 32], "model_nontrain": 4, "pth": [4, 14, 20, 22, 23, 24, 25, 32, 110, 117, 125], "pgd": [4, 13, 14, 28, 29, 30, 32, 41, 43, 45, 86, 88, 93, 100, 106, 142, 144, 145], "prior_new": [4, 32], "params_algo_new": [4, 32], "model_new": [4, 32], "init": 4, "n": [4, 13, 18, 19, 20, 23, 27, 40, 42, 44, 54, 55, 62, 63, 72, 98, 110, 112, 115, 117, 118, 120, 121, 122, 125, 127, 131, 132, 136, 147], "file_nam": [4, 22, 23, 24, 25], "demo_unfolded_cp": 4, "model_nam": [4, 22, 23, 24, 25], "ckpt_state_dict": 4, "hub": [4, 13, 14, 19, 20, 22, 23, 24, 25], "load_state_dict_from_url": [4, 22, 23, 24, 25], "map_loc": [4, 22, 23, 24, 25], "storag": [4, 22, 23, 24, 25], "loc": [4, 22, 23, 24, 25], "load_state_dict": [4, 22, 23, 24, 25, 32, 110, 117, 125], "after": [4, 16, 35, 80, 88, 134, 153], "0100": 4, "requires_grad": [4, 55], "huggingfac": [4, 13, 14, 19, 20, 22, 23, 24, 25, 38], "co": [4, 13, 14, 19, 20, 22, 23, 24, 25], "resolv": [4, 13, 14, 19, 20, 22, 23, 24, 25], "main": [4, 6, 13, 14, 19, 20, 22, 23, 24, 25, 35], "cach": [4, 13, 14, 19, 20, 22, 23, 24, 25], "66": [4, 8, 16, 19, 22, 29, 32, 33], "8k": 4, "3mb": [4, 20], "0545": [4, 29], "0512": 4, "0481": [4, 29], "0484": 4, "0526": 4, "0535": [4, 29], "0427": [4, 29], "194": [4, 9, 19, 33, 48], "demo_load": [4, 9, 48], "gener": [4, 7, 10, 12, 13, 14, 19, 31, 36, 38, 43, 45, 49, 51, 53, 58, 71, 81, 89, 90, 93, 102, 110, 121, 130, 131, 132, 134, 137, 139, 141], "new": [5, 6, 16, 32, 119, 134], "particular": [5, 45, 102, 126], "pan": 5, "sharpen": 5, "downsampl": [5, 7, 13, 28, 33, 70, 75, 83, 118, 120], "grayscal": [5, 6, 7, 12, 14, 38, 42, 111, 120, 149], "exist": [5, 45, 110, 117, 118, 121, 125, 126], "mathemat": 5, "equival": [5, 19], "begin": [5, 12, 18, 19, 32, 41, 43, 45, 86, 89, 101, 102, 103, 104, 105, 106, 118, 121, 131, 132, 142, 143], "bmatrix": [5, 118, 121], "y_1": [5, 60], "y_2": [5, 60], "a_1": [5, 24, 59, 60, 118, 121], "a_2": [5, 24, 59, 60, 118, 121], "two": [5, 18, 19, 22, 23, 24, 41, 43, 59, 60, 87, 92, 93, 95, 96, 107, 118, 121, 126, 146], "one": [5, 19, 23, 39, 41, 43, 47, 50, 52, 54, 55, 56, 67, 69, 76, 77, 78, 79, 81, 82, 108, 109, 110, 112, 114, 116, 118, 120, 126, 134, 135, 136], "anoth": 5, "convert": [5, 6, 17, 44, 72, 111, 112, 149], "pansharpen": [5, 7], "factor": [5, 7, 13, 29, 30, 33, 49, 80, 89, 92, 114, 118, 119, 120, 133, 140], "physics1": [5, 118], "physics2": [5, 6, 118], "decolor": [5, 6], "physics_stack": 5, "tensorlist": [5, 118, 120, 121, 150, 154, 155, 156], "ad": [5, 10, 18, 40, 46, 115, 118, 122, 123, 127, 128], "multipli": [5, 33, 41, 46, 49, 101, 118, 146], "etc": [5, 6, 16, 41, 43, 44, 45, 46, 47, 51, 53, 88, 146], "It": [5, 22, 40, 43, 45, 46, 49, 51, 53, 65, 72, 73, 92, 109, 110, 114, 118, 120, 121, 125, 130, 146], "also": [5, 6, 7, 17, 19, 25, 29, 30, 35, 38, 41, 42, 43, 44, 46, 47, 51, 70, 72, 73, 75, 79, 80, 85, 90, 96, 98, 118], "possibl": [5, 28, 35, 39, 72, 73, 86, 120, 142, 147], "fill": [5, 150, 154, 155, 156], "line": [5, 10, 117, 119, 126], "similarli": [5, 32, 41, 96], "48": [5, 8, 19, 22, 28, 29, 30, 125], "xlin": [5, 6], "pseudo": [5, 6, 42, 66, 109, 117, 119, 126], "high": [5, 7, 120], "re": [5, 7, 71, 119], "low": [5, 7, 12, 44, 98, 114, 120], "transpos": [5, 6, 66, 70, 75, 86, 87, 88, 92, 108, 110, 112, 114, 118, 120, 126], "linearphys": [5, 6, 42, 86, 87, 88, 92, 108, 110, 112, 114, 120, 126, 131, 132], "adjointness_test": [5, 6, 118], "unit": [5, 6, 18, 110, 118], "compute_norm": [5, 6, 118, 136], "power": [5, 6, 18, 54, 55, 72, 118, 125], "21": [5, 8, 12, 18, 19, 22, 28, 29, 30, 31, 32], "physics_concat": 5, "802": [5, 9, 48], "demo_pansharpen": [5, 9, 48], "offer": 6, "larg": [6, 42, 47, 71, 72, 81, 110], "might": [6, 132], "want": [6, 13, 54, 55], "your": [6, 9, 10, 12, 21, 35, 47, 48, 50, 51, 76, 87, 92, 96, 98, 109, 112, 113, 115, 118, 121, 134, 136, 147, 148, 149, 151], "own": [6, 9, 10, 12, 31, 48, 50, 51, 70, 72, 73, 75, 79, 80, 112, 113, 115, 118, 121, 148, 151], "walk": 6, "through": [6, 19, 53, 54, 55], "creation": 6, "rgb": [6, 7, 111, 116, 120], "averag": [6, 17, 20, 38, 70, 74, 75, 108, 109, 118], "exploit": [6, 16, 24, 25], "singular": [6, 16, 17, 42, 109, 112, 119, 125, 130], "decomposit": [6, 16, 17, 42, 84, 85, 109, 112, 117, 119, 125, 130], "speed": [6, 51], "evalu": [6, 17, 19, 28, 29, 30, 38, 49, 55, 88], "remain": [6, 18], "structur": [6, 42, 70, 119], "onc": [6, 8, 19, 32, 86], "adjoint": [6, 14, 32, 40, 42, 118, 126], "must": [6, 7, 12, 14, 55, 70, 111, 130, 132, 146], "colour": [6, 111], "2989": 6, "5870": 6, "1140": 6, "96": [6, 8, 13, 19, 22, 23, 29, 30], "128": [6, 8, 19, 22, 23, 24, 25, 31, 32, 38, 70, 72, 75, 80], "mea": 6, "close": [6, 16, 17, 42, 84, 85, 89, 90, 110, 114, 118, 121, 126], "form": [6, 8, 17, 30, 35, 41, 42, 43, 45, 84, 85, 86, 88, 89, 90, 93, 109, 110, 118, 119, 121, 126, 143], "svd": [6, 112, 117], "implement": [6, 7, 10, 12, 21, 29, 30, 31, 41, 43, 46, 47, 48, 72, 73, 80, 87, 88, 92, 93, 95, 96, 102, 109, 112, 115, 117, 118, 121, 130, 131, 132, 148, 149, 151], "decomposablephys": [6, 16, 17, 42, 109, 111, 113, 117, 119, 125, 130], "so": [6, 19, 33, 119], "decolorizesvd": 6, "447": 6, "v_adjoint": [6, 16, 112], "6687": 6, "3132": 6, "2550": 6, "v": [6, 12, 16, 45, 86, 87, 88, 92, 93, 112, 142], "y2": [6, 42], "xlin2": 6, "solut": [6, 41, 43, 45, 82, 84, 85, 86, 88, 93, 110, 118, 126, 142], "moreov": [6, 19, 86], "sampl": [6, 13, 19, 21, 23, 29, 30, 38, 44, 47, 48, 49, 53, 58, 74, 76, 79, 87, 92, 96, 98, 109, 110, 112, 115, 117, 118, 119, 121, 126, 127, 130, 131, 132, 133, 134, 135, 136, 140, 147, 148, 149, 151], "ddrm": [6, 17], "start": [6, 22, 23, 24, 25, 49, 93], "xprox": 6, "prox_l2": [6, 42, 112, 114, 118], "elaps": [6, 16, 17, 20], "xprox2": 6, "2e": 6, "17e": 6, "312": [6, 9, 48], "demo_phys": [6, 9, 48], "deepinvers": [7, 35, 50], "restrict": [7, 43, 126, 131], "ourselv": 7, "2d": [7, 119, 125, 139, 140, 141], "found": [7, 17, 84], "request": [7, 35], "imageio": 7, "v2": 7, "imread": 7, "io": [7, 31, 81, 82], "bytesio": 7, "logo": 7, "cnr": 7, "www": 7, "iuem": 7, "univ": 7, "brest": 7, "fr": 7, "intranet": 7, "commun": [7, 35], "tutel": 7, "poster": 7, "png": [7, 14, 18, 19, 151], "get": [7, 18, 19, 22, 23, 24, 25, 35, 72, 86, 131, 132], "content": 7, "255": [7, 18, 19, 20, 38, 80], "dtype": [7, 18, 19, 30, 86, 88, 110, 118, 125, 126], "float": [7, 30, 41, 49, 53, 54, 55, 58, 59, 60, 62, 63, 64, 65, 68, 70, 71, 73, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 112, 115, 116, 117, 118, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 144, 145, 147], "permut": 7, "interpol": [7, 13, 19, 54, 126, 140], "ident": [7, 12, 54, 86, 88, 112, 113, 118, 121, 134, 135, 136], "poissonnois": [7, 24, 25], "result": [7, 18, 19, 45, 46, 49, 118, 121, 132, 133, 135, 136, 137], "unless": 7, "explicit": [7, 9, 10, 13, 30, 47, 48, 50, 51, 86, 87, 92, 96, 100, 109, 112, 115, 118, 121, 129, 135, 137, 148], "consid": [7, 19], "compressedsens": [7, 29, 30, 36, 42], "matrix": [7, 16, 29, 30, 55, 108, 110, 112, 114, 117, 118, 120, 125, 126], "take": [7, 16, 18, 19, 25, 37, 38, 41, 43, 49, 52, 56, 63, 64, 67, 69, 70, 72, 76, 77, 78, 79, 81, 82, 88, 93, 126], "2048": 7, "64x64": [7, 18, 19], "correspond": [7, 13, 18, 19, 29, 30, 38, 41, 86, 93, 102, 118, 119, 121], "m": [7, 12, 25, 29, 30, 35, 36, 40, 42, 60, 62, 63, 64, 110, 112, 117, 118, 121, 125, 135], "fast": [7, 29, 30, 67, 109, 110, 117, 119, 125, 141], "channelwis": [7, 110], "spars": [7, 68], "radon": [7, 126], "mix": [7, 25], "img_width": [7, 14, 31, 126], "angl": [7, 14, 31, 126, 129, 139], "poissongaussiannois": 7, "gain": [7, 25, 63, 64, 95, 122, 123], "min": [7, 19, 32, 41, 43, 81, 82, 84, 85, 86, 102, 118, 127, 151], "max": [7, 17, 19, 20, 56, 70, 75, 91, 127, 151], "sinogram": 7, "backproject": 7, "subsampl": [7, 110, 114, 119, 125], "indic": [7, 32, 51, 85, 88, 89, 134], "coeffici": [7, 84, 85], "cartesian": 7, "approxim": [7, 16, 20, 30, 38, 44, 62, 63, 64, 74, 98, 126, 131, 135], "real": [7, 22, 119], "part": [7, 22, 45, 70, 119], "imaginari": [7, 22, 119], "rand": [7, 42, 115, 122, 123, 127, 128, 151], "75": [7, 18, 19, 22, 29, 31, 33, 140], "int": [7, 8, 16, 18, 20, 22, 23, 24, 25, 28, 31, 32, 33, 49, 51, 54, 55, 67, 69, 70, 71, 72, 73, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 107, 110, 114, 118, 119, 120, 121, 124, 125, 126, 130, 131, 132, 133, 134, 135, 136, 137, 142, 149, 151], "x2": [7, 81, 82], "zeros_lik": [7, 30, 31, 118], "space": [7, 22, 31, 67, 126], "singlepixelcamera": [7, 12], "binari": [7, 23, 112, 117, 119, 125], "pattern": [7, 11, 125], "hadamard": [7, 12, 125], "degre": [7, 22, 38, 74, 126, 129, 139], "138": [7, 9, 19, 29, 48], "demo_physics_tour": [7, 9, 48], "32x32": [8, 32, 114, 118, 120, 125, 130, 132], "avail": [8, 32, 38, 70, 72, 73, 75, 79, 80, 84, 85, 89, 90], "128x128": [8, 22, 32], "train_dataset_nam": [8, 22, 24, 25, 28, 29, 30, 31, 32, 33], "test_dataset_nam": [8, 28, 32, 33], "test_transform": [8, 28, 32, 33], "train_transform": [8, 28, 32, 33], "randomcrop": [8, 28, 32, 33], "8m": [8, 13, 23, 32, 33], "28": [8, 18, 19, 22, 23, 28, 29, 30, 31, 33, 36, 42, 48], "54m": 8, "55": [8, 19, 22, 31], "4mib": [8, 22, 33], "1m": [8, 13, 22, 23, 33], "0mib": [8, 22], "69": [8, 19, 22, 28, 29, 33], "randomli": [8, 19, 32, 74, 139, 141], "probabl": [8, 25, 32, 63, 64, 110, 117, 125], "probability_mask": [8, 32], "1000": [8, 18, 19, 28, 29, 30, 31, 33, 67, 72, 81, 82, 131, 132, 134, 135, 136], "my_dataset_nam": [8, 22, 23, 24, 28, 29, 30, 32, 33], "demo_training_inpaint": [8, 32], "deepinv_datasets_path": [8, 22, 23, 24, 25, 32], "dataset_filenam": [8, 22, 23, 24, 25, 28, 29, 30, 32, 33, 51], "str": [8, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 49, 50, 51, 70, 72, 73, 74, 75, 79, 80, 83, 84, 85, 86, 100, 107, 108, 109, 110, 114, 120, 124, 125, 126, 131, 132, 137, 140, 144, 145, 149, 151, 152, 153], "train_batch_s": [8, 28, 29, 30, 31, 32, 33], "test_batch_s": [8, 28, 29, 30, 31, 32, 33], "train_dataload": [8, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 49], "61it": [8, 17, 23, 29, 30, 31], "60it": [8, 22], "135": [8, 19, 28, 29], "10it": [8, 29, 30, 32], "phi_": [8, 23], "top": [8, 10, 12, 16, 23, 25, 31, 32, 40, 45, 62, 63, 64, 66, 84, 85, 86, 95, 102, 108, 110, 112, 114, 118, 120, 126], "post": [8, 17, 20], "u": [8, 12, 16, 18, 19, 23, 24, 25, 31, 40, 45, 62, 63, 64, 70, 77, 83, 87, 89, 90, 92, 93, 95, 112, 118, 127, 128, 142], "net": [8, 18, 23, 24, 25, 70, 83], "unet": [8, 23, 24, 25, 72, 79], "in_channel": [8, 12, 14, 22, 23, 24, 25, 28, 39, 70, 72, 73, 75, 77, 78, 83], "out_channel": [8, 12, 14, 22, 23, 24, 25, 28, 39, 70, 72, 73, 75, 77, 78, 83], "batch_norm": [8, 83], "artifactremov": [8, 23, 24, 25, 39, 49, 108, 110, 112, 114, 118, 120, 126, 137], "supervis": [8, 26, 28, 29, 30, 31, 32, 33, 47, 48, 49, 50, 51, 53, 57, 58, 59, 60, 61, 62, 63, 64, 66, 73, 83, 87, 92, 94, 96, 112, 113, 117, 118, 119, 121, 123, 137, 138, 139, 140, 143, 145, 148], "mean": [8, 16, 17, 18, 19, 20, 32, 40, 41, 44, 57, 58, 59, 60, 61, 62, 63, 64, 133, 134, 135, 136], "error": [8, 17, 18, 20, 32, 53, 56, 57, 58, 59, 60, 61, 96, 126], "easili": [8, 18, 19, 32, 35, 36, 51], "done": [8, 17, 18, 19, 28, 29, 30, 31, 32, 33, 35, 36, 85, 120], "suploss": [8, 28, 29, 30, 31, 32, 33], "few": [8, 32], "epoch": [8, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 49], "keep": [8, 19, 28, 32, 85, 110, 117, 118, 121, 125, 134, 135, 136], "short": [8, 32], "qualiti": [8, 32], "least": [8, 32], "5e": [8, 22, 23, 24, 25, 28, 33], "inform": [8, 22, 23, 24, 25, 32, 37, 38, 49, 86, 118, 137], "mse": [8, 28, 29, 30, 31, 32, 33, 53, 57, 58, 59, 60, 61], "schedul": [8, 17, 18, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 49, 132], "weight_decai": [8, 22, 23, 24, 25, 28, 29, 30, 32, 33], "lr_schedul": [8, 22, 23, 24, 25, 28, 31, 32, 33, 49], "steplr": [8, 22, 23, 24, 25, 28, 31, 32, 33], "step_siz": [8, 16, 20, 22, 23, 24, 25, 28, 32, 33, 134, 135, 136], "eval_dataload": [8, 22, 23, 24, 25, 28, 29, 30, 31, 33, 49], "save_path": [8, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 49, 110, 117, 125], "2067779": 8, "eval_psnr": [8, 22, 23, 24, 25, 28, 29, 30, 31, 33], "6": [8, 13, 17, 18, 19, 22, 23, 28, 29, 30, 31, 32, 33, 34, 78, 80], "total_loss": [8, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33], "114": [8, 19, 28, 29], "train_psnr": [8, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33], "43": [8, 18, 19, 22], "0828": [8, 29, 30, 32], "0921": 8, "28it": [8, 19, 22, 29, 32], "0865": 8, "074": [8, 29], "0713": 8, "12": [8, 18, 19, 22, 28, 29, 30, 31, 32], "0625": 8, "14": [8, 16, 18, 19, 22, 28, 29, 30, 31, 32, 33], "24it": [8, 19, 29], "0856": [8, 120], "0786": [8, 30], "0747": [8, 30], "0698": [8, 29], "22": [8, 12, 13, 18, 19, 22, 24, 28, 29, 30, 31, 32, 48], "83it": [8, 22, 31], "0718": [8, 29], "0681": [8, 29], "0697": [8, 29], "0673": [8, 29], "15": [8, 11, 16, 18, 19, 22, 28, 29, 30, 31, 32, 33, 38, 80], "064": 8, "0643": 8, "0654": 8, "0632": 8, "38": [8, 13, 19, 22, 28, 29, 33], "03it": [8, 29, 31, 32], "0617": 8, "071": [8, 29], "0701": [8, 29], "0728": [8, 29], "46": [8, 19, 22, 26, 28, 29], "22it": [8, 19, 29, 30, 32, 33], "0724": [8, 24], "0725": 8, "0709": [8, 29], "0689": [8, 29], "54": [8, 13, 19, 22, 28, 29, 33], "27": [8, 17, 18, 19, 22, 28, 29, 31, 33], "0691": [8, 29], "0688": [8, 29], "0684": [8, 29], "0683": [8, 29], "62": [8, 16, 19, 22, 28, 29, 32], "0675": [8, 24, 29], "066": [8, 29], "0638": 8, "70": [8, 17, 18, 19, 22, 28, 29, 31, 32, 33, 117], "0639": 8, "0635": 8, "0644": 8, "0634": [8, 32], "78": [8, 19, 22, 28, 29, 30], "53it": [8, 20, 28, 29, 31, 32], "062": 8, "0613": 8, "063": 8, "0637": 8, "86": [8, 19, 22, 23, 29], "58it": [8, 25, 29, 31, 32], "0629": 8, "0646": 8, "94": [8, 19, 29, 32], "38it": [8, 22, 25, 29, 30, 33], "0112": [8, 23], "085": [8, 30], "0621": 8, "0555": [8, 29], "75it": [8, 18, 23, 25, 29, 30, 31, 32], "0461": [8, 29], "0446": 8, "0472": [8, 29], "0471": [8, 29], "64it": [8, 22, 31], "0449": [8, 29], "0409": 8, "0389": 8, "0429": [8, 29], "24": [8, 9, 18, 19, 22, 24, 25, 28, 29, 30, 31, 32, 34, 48], "68it": [8, 20, 29, 31], "0403": 8, "0383": 8, "0388": 8, "037": 8, "0366": 8, "0372": [8, 32], "0364": 8, "40": [8, 17, 18, 19, 22, 23, 28, 29, 30, 31, 33], "71it": [8, 18, 29, 30, 31], "0363": 8, "0351": [8, 119], "0339": 8, "0329": 8, "0318": 8, "0316": 8, "0307": 8, "0301": 8, "56": [8, 17, 19, 22, 24, 28, 29, 30], "0294": [8, 32], "0291": 8, "0282": 8, "028": 8, "0275": 8, "0272": 8, "0269": 8, "0264": [8, 32], "72": [8, 19, 22, 29, 30, 32, 33], "026": 8, "0254": 8, "025": 8, "0248": 8, "80": [8, 17, 18, 19, 22, 23, 25, 28, 29, 30, 31, 33], "54it": [8, 22, 29, 31], "0247": 8, "0245": 8, "0241": [8, 114], "0238": 8, "18": [8, 11, 13, 17, 18, 19, 22, 23, 28, 29, 30, 31, 32, 33], "88": [8, 11, 19, 22, 29, 30, 32], "44": [8, 13, 19, 20, 22, 28, 29, 30], "51it": [8, 28, 29, 31], "0234": 8, "0231": 8, "0228": 8, "0225": 8, "0223": 8, "0221": 8, "56it": 8, "00893": 8, "0115": [8, 23], "0104": [8, 32], "0159": [8, 32], "0164": [8, 32], "0157": [8, 23, 32], "0149": 8, "0148": [8, 23], "85it": [8, 29, 31, 32], "0147": 8, "0143": [8, 23], "0138": [8, 32], "0131": [8, 32], "35it": [8, 22, 29, 30], "0129": 8, "0125": 8, "013": [8, 23], "0128": [8, 23], "0123": 8, "012": [8, 23, 32], "0116": 8, "15it": [8, 29, 30, 32, 33], "0114": [8, 32], "011": [8, 23, 32], "0109": [8, 23], "27it": [8, 19, 23, 29, 33], "0108": [8, 32], "0106": [8, 23, 32], "0119": [8, 32], "0117": [8, 23, 32], "0113": [8, 23], "0118": [8, 23], "26it": [8, 19, 29, 30, 33], "0107": [8, 23], "70it": [8, 18, 29, 31], "0105": [8, 23, 32], "0103": [8, 23], "00656": 8, "00719": [8, 23], "00797": 8, "00977": 8, "0101": [8, 23], "00857": 8, "00851": 8, "00819": 8, "65it": [8, 17, 23, 25, 31], "00833": 8, "00822": 8, "00802": 8, "00752": 8, "69it": [8, 23, 29, 31], "00707": 8, "00696": 8, "00668": 8, "00662": 8, "0071": 8, "00683": 8, "00666": 8, "00717": 8, "00754": 8, "00741": [8, 23], "00723": 8, "25it": [8, 19, 22, 29], "00718": 8, "00735": 8, "00767": 8, "00761": 8, "29it": [8, 19, 22, 29, 30], "00757": 8, "0074": 8, "00727": 8, "00759": 8, "00746": 8, "39it": [8, 22, 28, 29], "00734": [8, 23], "00835": 8, "00823": 8, "0082": 8, "32it": [8, 22, 29], "00817": 8, "0081": 8, "00798": 8, "00786": 8, "40it": [8, 22, 28, 29, 31], "00775": 8, "00772": 8, "00766": 8, "00812": 8, "00815": 8, "backbone_net": [8, 23, 24, 25, 66], "maxpool": [8, 23, 24, 25, 70, 75], "maxpool2d": [8, 23, 24, 25], "kernel_s": [8, 22, 23, 24, 25, 28, 31, 33, 76, 107], "stride": [8, 22, 23, 24, 25, 28, 31, 33, 70, 75], "ceil_mod": [8, 23, 24, 25], "conv1": [8, 23, 24, 25], "sequenti": [8, 23, 24, 25, 68], "conv2d": [8, 22, 23, 24, 25, 28, 31, 33, 107, 108], "relu": [8, 22, 23, 24, 25, 28, 33, 70, 73, 75], "inplac": [8, 23, 24, 25], "conv2": [8, 23, 24, 25], "conv3": [8, 23], "up3": [8, 23], "upsampl": [8, 23, 24, 25, 70, 75, 80], "scale_factor": [8, 23, 24, 25], "mode": [8, 23, 24, 25, 33, 70, 73, 75, 79, 125, 140, 151], "nearest": [8, 23, 24, 25, 70, 72, 75, 80, 132], "up_conv3": [8, 23], "up2": [8, 23, 24, 25], "up_conv2": [8, 23, 24, 25], "conv_1x1": [8, 23, 24, 25], "now": [8, 17, 18, 19, 28, 29, 30, 32, 142], "test_psnr": [8, 32, 137], "artifact_remov": [8, 32], "test_std_psnr": [8, 32, 137], "init_psnr": [8, 32], "init_std_psnr": [8, 32], "79it": [8, 17, 31], "26": [8, 13, 17, 18, 19, 22, 25, 28, 29, 31, 32, 34, 48], "352": [8, 9, 48], "demo_train_inpaint": [8, 9, 48], "540": [9, 23], "execut": [9, 15, 21, 26, 27, 34, 48], "file": [9, 15, 21, 26, 27, 34, 41, 48, 50, 110, 117, 125, 149], "auto_exampl": [9, 15, 21, 26, 27, 34], "basic": [9, 46, 47, 48, 108, 109, 118], "mem": [9, 15, 21, 26, 27, 34, 48], "mb": [9, 15, 21, 26, 27, 34, 48, 72], "reconstruct": [9, 10, 12, 13, 14, 16, 18, 20, 21, 31, 36, 38, 39, 40, 44, 45, 48, 49, 50, 51, 53, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 80, 83, 108, 110, 112, 114, 115, 117, 118, 120, 121, 126, 130, 131, 132, 133, 134, 135, 136, 137, 138, 147, 148, 149, 151], "08": [9, 13, 19, 21, 22, 26, 30, 33, 48], "imag": [9, 10, 15, 18, 19, 21, 26, 34, 38, 40, 42, 43, 44, 48, 49, 50, 51, 53, 57, 58, 59, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 80, 81, 82, 83, 84, 85, 86, 87, 89, 92, 94, 96, 100, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 129, 130, 132, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 151, 152], "deblur": [9, 10, 15, 18, 34, 47, 48, 50, 51, 61, 70, 73, 86, 87, 92, 94, 96, 100, 109, 112, 115, 118, 121, 129, 137, 138, 140, 142, 144, 148], "tour": [9, 10, 48, 108, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 129, 148, 151], "sens": [9, 10, 19, 30, 34, 36, 48, 50, 51, 53, 58, 61, 84, 85, 87, 92, 94, 96, 106, 108, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 129, 137, 138, 143, 145, 148, 151, 153], "stack": [9, 10, 48, 111, 112, 114, 118, 120, 121, 146, 148, 151], "concaten": [9, 10, 46, 48, 80, 111, 112, 114, 118, 120, 121, 139, 141, 146, 148, 151], "photon": [9, 10, 48, 121, 124, 148], "lidar": [9, 10, 48, 121, 124, 148], "depth": [9, 10, 22, 28, 33, 48, 73, 77, 78, 79, 80, 116, 121, 124, 148], "load": [9, 10, 18, 36, 42, 48, 49, 51, 85, 87, 89, 94, 96, 110, 112, 117, 118, 121, 125, 143, 145, 148, 149], "googl": 10, "colab": 10, "them": [10, 28, 29, 30, 38, 52, 56, 67, 69, 76, 77, 78, 79, 81, 82, 118], "pip": [10, 47], "instal": [10, 35], "git": [10, 47], "github": [10, 31, 35, 47, 59, 72, 80, 81, 82], "com": [10, 25, 29, 47, 59, 72, 80], "egg": [10, 47], "vanilla": [10, 15, 34, 38, 48, 50, 51, 61, 73, 86, 87, 92, 94, 96, 100, 114, 115, 118, 121, 126, 137, 138, 143, 145, 147, 148, 149, 151, 152, 153], "tomographi": [10, 15, 31, 48, 73, 86, 87, 92, 94, 96, 100, 115, 118, 121, 147, 148, 149, 151, 152], "ct": [10, 15, 34, 47, 48, 61, 73, 77, 78, 86, 87, 92, 93, 94, 96, 100, 102, 115, 118, 121, 126, 137, 138, 143, 145, 147, 148, 149, 151, 152], "dpir": [10, 15, 38, 47, 48, 50, 51, 70, 86, 87, 92, 94, 96, 100, 109, 112, 115, 118, 121, 137, 148], "resolut": [10, 15, 34, 48, 50, 51, 61, 73, 75, 79, 86, 87, 92, 94, 96, 97, 100, 114, 115, 118, 120, 121, 137, 138, 140, 143, 145, 148, 153], "condat": [10, 15, 48, 73, 81, 82, 86, 87, 92, 93, 94, 96, 100, 112, 115, 118, 121, 125, 147, 148, 149, 151, 152], "vu": [10, 15, 48, 73, 86, 87, 92, 93, 94, 96, 100, 112, 115, 118, 121, 125, 147, 148, 149, 151, 152], "primal": [10, 15, 32, 34, 41, 48, 61, 73, 77, 78, 81, 82, 86, 87, 88, 92, 93, 94, 96, 100, 102, 112, 115, 118, 121, 125, 126, 137, 138, 143, 145, 147, 148, 149, 151, 152], "dual": [10, 15, 32, 34, 41, 48, 61, 73, 77, 78, 81, 82, 86, 87, 89, 90, 92, 93, 94, 96, 100, 102, 112, 115, 118, 121, 125, 126, 137, 138, 143, 145, 147, 148, 149, 151, 152], "uncertainti": [10, 17, 21, 47, 48, 54, 73, 87, 92, 96, 98, 112, 115, 117, 118, 121, 134, 136, 147, 148, 149, 151], "quantif": [10, 21, 47, 48, 54, 73, 87, 92, 96, 98, 112, 115, 117, 118, 121, 134, 136, 147, 148, 149, 151], "ula": [10, 21, 48, 54, 73, 87, 92, 96, 98, 112, 115, 117, 118, 121, 134, 147, 148, 149, 151], "diffus": [10, 18, 21, 47, 48, 70, 72, 112, 115, 117, 118, 121, 130, 131, 132, 133, 134, 147, 148, 149, 151], "dp": [10, 21, 48, 72, 87, 92, 112, 117, 118, 121, 148, 149, 151], "diffpir": [10, 19, 21, 47, 48, 72, 87, 92, 95, 109, 112, 115, 118, 121, 148, 149, 151], "sure": [10, 20, 26, 35, 48, 50, 51, 62, 63, 64, 66, 83, 112, 113, 118, 121, 123, 137, 138, 148], "neighbor2neighbor": [10, 26, 48, 50, 51, 66, 83, 112, 113, 118, 121, 123, 137, 138, 148], "multipl": [10, 11, 12, 17, 25, 26, 44, 48, 50, 51, 56, 57, 58, 63, 64, 66, 74, 83, 112, 116, 117, 118, 121, 133, 137, 138, 148], "equivari": [10, 26, 37, 48, 50, 51, 53, 57, 73, 74, 87, 92, 94, 96, 112, 118, 119, 121, 137, 138, 139, 143, 145, 148], "mri": [10, 26, 47, 48, 50, 51, 53, 57, 69, 73, 87, 92, 94, 96, 112, 118, 121, 137, 138, 139, 143, 145, 148], "lista": [10, 30, 32, 34, 48, 50, 51, 61, 84, 85, 87, 92, 94, 96, 106, 110, 118, 121, 137, 138, 143, 145, 148, 153], "compress": [10, 34, 36, 48, 50, 51, 61, 80, 84, 85, 87, 92, 94, 96, 106, 110, 118, 121, 137, 138, 143, 145, 148, 153], "equilibrium": [10, 34, 47, 48, 50, 51, 61, 73, 87, 92, 94, 96, 109, 112, 115, 118, 121, 129, 137, 138, 142, 144, 148], "deq": [10, 34, 45, 47, 48, 50, 51, 61, 73, 87, 92, 94, 96, 109, 112, 115, 118, 121, 129, 137, 138, 142, 144, 148], "scan": [10, 34, 48, 61, 77, 78, 87, 93, 96, 102, 115, 118, 121, 126, 137, 138, 143, 145, 148], "auto_examples_python": 10, "auto_examples_jupyt": 10, "zuo": 11, "gu": 11, "l": [11, 23, 37, 70, 75, 76, 81, 82, 135, 136], "proceed": 11, "ieee": [11, 31, 56, 62, 63, 64, 68, 116, 124], "confer": [11, 13], "vision": 11, "recognit": 11, "pp": [11, 81, 82], "3929": 11, "3938": 11, "drunet": [11, 17, 28, 33, 38, 39, 75, 130, 132], "get_dpir_param": 11, "load_degrad": [11, 13, 22], "kernel_index": [11, 13], "chose": 11, "among": [11, 39, 41], "levin09": 11, "mat": 11, "kernel_torch": [11, 13], "npy": [11, 13, 22], "index": [11, 13, 49], "7mib": [11, 22], "hdf5": [11, 13, 28, 29, 30, 36, 50], "folder": [11, 13, 28, 29, 30, 50, 51], "dir": [11, 13, 36], "dinv_dataset0": [11, 13], "h5": [11, 13, 36], "As": [11, 18, 19, 22, 23, 43], "133": [11, 19, 28, 33], "21it": [11, 19, 29, 30, 32], "half": [11, 22, 28, 100, 105, 132, 144, 145], "quadrat": [11, 22, 28, 100, 105, 132, 144, 145], "split": [11, 22, 28, 32, 33, 41, 43, 51, 57, 59, 60, 81, 82, 89, 93, 100, 102, 103, 105, 132, 144, 145], "hq": [11, 22, 28, 41, 100, 105, 132, 142, 144, 145], "altern": [11, 14, 18, 19, 93, 101], "step": [11, 12, 13, 14, 16, 20, 22, 38, 41, 43, 45, 75, 83, 86, 88, 89, 90, 93, 100, 102, 105, 126, 132, 135, 136, 137, 142, 143, 144, 145], "pretrain": [11, 12, 13, 14, 17, 18, 20, 22, 23, 24, 25, 28, 33, 39, 47, 49, 66, 70, 72, 73, 75, 79, 80, 130, 132], "do": [11, 38, 86, 96], "plot_only_first_batch": [11, 13, 137], "By": [11, 13, 53, 57, 58, 59, 60, 61, 86, 87, 93, 95, 96, 97, 118, 120, 121, 134, 135, 136, 140], "default": [11, 13, 38, 39, 49, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 66, 70, 72, 73, 75, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 93, 95, 96, 97, 100, 101, 102, 103, 118, 120, 121, 127, 131, 132, 133, 134, 135, 136, 137, 140, 142, 143, 144, 145, 153], "497402191162109": 11, "302061080932617": 11, "573": [11, 15, 48], "demo_pnp_dpir_deblur": [11, 15, 48], "camera": [12, 38, 125], "dncnn": [12, 14, 20, 22, 28, 33, 38], "get_image_url": [12, 14, 18, 19], "plot_curv": [12, 14], "optim_iter": [12, 29, 30, 31, 32, 86, 88, 100, 101, 102, 103, 104, 105, 106, 143, 144, 145], "optimiter": [12, 86, 100, 101, 102, 103, 104, 105, 106, 144, 145], "definit": [12, 19], "subclass": [12, 31, 52, 56, 67, 69, 76, 77, 78, 79, 81, 82], "align": [12, 18, 19, 32, 43, 45, 101, 102, 103, 104, 105, 106, 131, 132, 143], "v_k": 12, "x_k": [12, 20, 29, 30, 32, 41, 43, 45, 86, 88, 93, 101, 102, 104, 105, 106, 136, 143], "tau": [12, 25, 32, 62, 63, 64, 86, 91, 99, 102], "z_k": [12, 20, 32, 41, 43, 45, 86, 93, 101, 102, 103, 143], "x_": [12, 16, 20, 29, 30, 32, 41, 43, 45, 86, 88, 93, 101, 102, 103, 104, 105, 106, 118, 132, 136, 143], "operatornam": [12, 18, 30, 32, 41, 43, 45, 54, 74, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 105, 106, 132, 142, 143], "prox": [12, 18, 29, 30, 31, 32, 41, 42, 43, 87, 89, 90, 91, 92, 94, 95, 96, 99, 101, 102, 103, 105, 106, 109, 118, 119, 132], "_": [12, 18, 19, 23, 29, 30, 32, 41, 43, 58, 74, 81, 82, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 98, 101, 102, 103, 105, 106, 110, 112, 118, 126, 131, 132], "u_k": [12, 32, 43, 88, 102, 105, 106], "2x_": [12, 32], "z_": [12, 16, 32, 41, 43, 45, 86, 93, 101, 102, 103, 136, 143], "fenchel": [12, 102], "legendr": [12, 102], "conjug": [12, 87, 96, 102, 110, 114, 118, 126], "cviter": 12, "g_step": [12, 22, 28, 29, 30, 31, 32, 33], "gstepcv": 12, "f_step": [12, 22, 28, 29, 30, 31, 32, 33], "fstepcv": 12, "cur_data_fidel": [12, 31, 88, 93, 101, 102, 103, 104], "cur_prior": [12, 31, 88, 93, 101, 102, 103, 104], "cur_param": [12, 88, 93, 101, 102, 103, 104], "param": [12, 13, 16, 31, 88, 134], "dict": [12, 22, 49, 86, 88, 93, 100, 101, 102, 103, 104, 137, 142, 144, 145, 152, 153], "dictionari": [12, 22, 28, 29, 30, 33, 41, 49, 86, 88, 93, 100, 101, 102, 103, 104, 137, 143, 144, 145, 152, 153], "estim": [12, 18, 19, 25, 38, 62, 63, 64, 66, 72, 93, 95, 101, 102, 103, 104, 112, 116, 118, 132, 134, 136, 137, 147], "datafidel": [12, 31, 41, 44, 86, 88, 89, 90, 92, 93, 95, 96, 100, 101, 102, 103, 104, 131, 132, 134, 135, 136, 144, 145], "relat": [12, 29, 30], "interest": [12, 18, 86], "updat": [12, 13, 18, 19, 31, 32, 35, 41, 49, 86, 88, 93, 101, 102, 103, 104], "x_prev": [12, 86, 88], "z_prev": 12, "f_fn": [12, 86, 93, 100, 144, 145], "has_cost": [12, 86, 93], "reli": [12, 41, 96], "u_": [12, 32, 43, 88, 101, 102, 103, 105, 106], "moreau": [12, 44, 87, 96, 98, 105], "math": [12, 13, 18, 30, 31, 61, 87, 96, 98], "phyic": 12, "2ax_": 12, "kei": [12, 19, 41, 80, 86, 143], "prox_d_conjug": [12, 87], "gamma": [12, 18, 24, 25, 29, 30, 43, 59, 63, 64, 86, 87, 89, 90, 91, 92, 94, 95, 96, 99, 101, 103, 104, 105, 106, 112, 114, 118, 122, 123, 143], "barbara": 12, "jpeg": 12, "resize_mod": [12, 14, 149], "resiz": [12, 14, 22, 149], "single_pixel": 12, "frequenc": [12, 49], "our": [12, 16, 19, 29, 30, 32, 35, 47, 102], "condatvu": 12, "200": [12, 19, 28, 29, 30, 32], "output": [12, 13, 14, 18, 19, 29, 30, 49, 55, 67, 69, 70, 72, 73, 75, 83, 86, 87, 88, 89, 107, 108, 114, 120, 123, 124, 137, 140, 142], "x_gt": [12, 14, 86, 88, 142], "compute_metr": [12, 14, 86, 88, 142], "x_model": [12, 14], "img": [12, 14, 16, 17, 18, 19, 20, 151], "gt": [12, 14, 29, 30], "recon": [12, 14, 19, 29, 30], "87": [12, 13, 18, 19, 22, 28, 29, 33], "57": [12, 13, 18, 19, 22, 29, 33, 34], "844": [12, 15, 48], "demo_pnp_custom_optim": [12, 15, 48], "plug": [13, 15, 16, 19, 20, 33, 38, 43, 47, 48, 94, 132, 135, 136, 152], "gspnp": 13, "hurault": [13, 47], "leclair": 13, "papadaki": 13, "plai": [13, 15, 16, 20, 33, 38, 43, 47, 48, 94, 132, 135, 136, 152], "represent": 13, "get_gspnp_param": 13, "blur": [13, 16, 18, 28, 33, 107, 109, 114, 118, 120, 129], "kernels_12": 13, "down": 13, "standart": [13, 14, 100], "105": [13, 19, 28, 29], "99it": [13, 25, 33], "solv": [13, 18, 19, 28, 32, 43, 45, 47, 71, 81, 82, 86, 88, 102], "use_bicubic_init": 13, "bicub": [13, 114, 120, 140], "necessarili": [13, 93], "thu": [13, 31, 71, 84, 85, 119, 134, 135, 136], "write": [13, 18, 19, 31, 39, 131, 132], "denoiser_nam": 13, "gsdrunet": [13, 38], "intermedi": [13, 67, 83], "finish": [13, 16, 17, 20, 93], "custom_output": [13, 31], "get_output": [13, 31, 86], "gradientstep": 13, "195m": 13, "187mb": 13, "239mb": [13, 19], "0m": [13, 22, 33], "259mb": 13, "98": [13, 19, 22, 28, 29], "2m": [13, 19, 33], "269mb": 13, "65": [13, 19, 22, 28, 31, 32, 33], "126m": [13, 19], "278mb": 13, "81": [13, 17, 19, 22, 29, 33], "157m": [13, 22], "293mb": 13, "187m": 13, "300mb": 13, "281mb": 13, "16e": 13, "84e": 13, "04": [13, 15, 18, 19, 21, 22, 24, 25, 29, 30, 48], "26e": 13, "255968729654949": 13, "5749010239002867": 13, "0601496696472168": 13, "1836217893424801": 13, "922": [13, 15, 48], "demo_red_gspnp_sr": [13, 15, 48], "shepplogan": 14, "circl": [14, 31, 126], "chosen": [14, 18, 28, 33, 49, 51, 74, 80, 86, 118], "dncnn_sigma2_grai": 14, "55m": 14, "63": [14, 18, 19, 22, 28, 29, 33], "7mb": 14, "cumput": 14, "demo_vanilla_pnp": [14, 15, 48], "663": 15, "unadjust": [16, 20, 44, 135, 136], "langevin": [16, 20, 47, 135, 136], "preconula": 16, "advantag": 16, "acceler": [16, 22, 28, 69, 86, 88, 119, 135, 142], "np": [16, 17, 18, 19, 110, 130], "5x5": [16, 18], "box": [16, 134, 135, 136], "001": [16, 54, 55, 63, 64, 87, 96, 118, 121, 134, 135, 136], "25": [16, 18, 19, 22, 24, 25, 28, 29, 30, 31, 38, 80, 132], "order": [16, 17, 18, 19, 53, 65, 81, 118, 125, 130], "possibli": [16, 37, 58, 116, 134], "markov": [16, 134, 135, 136], "depend": [16, 40, 41, 45, 72, 86, 132, 134], "previou": [16, 18, 39, 86, 88, 101, 102, 103, 134], "next": [16, 18, 38, 88], "likelihood": [16, 19, 40, 44, 92, 95, 134, 135, 136], "account": [16, 35, 37, 70], "usv": 16, "modifi": [16, 39], "eta": [16, 19, 20, 86, 118, 121, 130, 131, 135, 136], "ax_": 16, "alpha": [16, 18, 19, 20, 72, 75, 131, 132, 134, 135, 136], "nabla": [16, 20, 30, 41, 43, 44, 96, 97, 98, 104, 106, 136], "sqrt": [16, 17, 18, 19, 20, 30, 110, 125, 131, 132, 136, 147], "eta_0": 16, "vrv": 16, "diagon": [16, 55, 117], "entri": [16, 41, 62, 63, 64, 110, 117, 118, 121, 125, 136], "s_": 16, "epsilon": [16, 19, 63, 115, 122, 127, 128], "numer": [16, 54, 55, 118, 126, 134, 135, 136], "issu": [16, 35, 47], "algebra": 16, "product": [16, 55], "effici": [16, 42, 110, 112, 118, 121, 125, 126], "trivial": [16, 107, 116, 117], "thei": [16, 30, 37, 38, 39, 45, 86, 96, 130], "matric": 16, "pulaiter": 16, "noise_std": 16, "x_bar": 16, "y_bar": 16, "u_adjoint": [16, 112], "pow": 16, "randn_lik": [16, 18, 19, 55], "sigma2_nois": 16, "lhood": 16, "lprior": 16, "montecarlo": [16, 133, 135, 136], "care": [16, 52, 56, 67, 69, 76, 77, 78, 79, 81, 82, 132], "procedur": [16, 32, 83], "calcul": [16, 87, 91, 96, 97, 99], "varianc": [16, 17, 18, 20, 44, 133, 134, 135, 136], "thin": [16, 133, 134, 135, 136], "burnin": [16, 133], "conveni": 16, "interfac": [16, 41], "user": [16, 41, 43, 45, 51, 70, 72, 73, 75, 79, 80, 100, 113, 120, 144, 145], "1e3": [16, 134], "burnin_ratio": [16, 133, 134, 135, 136], "clip": [16, 19, 49, 123, 133, 134, 135, 136, 151], "score": [16, 19, 20, 98], "distribut": [16, 17, 20, 25, 40, 44, 98, 113, 117, 130, 131, 132, 133, 134, 135, 136], "scoreprior": [16, 20, 44, 134, 135, 136], "p_": [16, 20, 44, 98], "sigma_d": 16, "approx": [16, 19, 20, 40, 55], "left": [16, 18, 20, 23, 25, 44, 45, 62, 63, 64, 89, 98, 118, 121, 132, 136, 142], "right": [16, 18, 20, 23, 25, 44, 45, 62, 63, 64, 89, 98, 118, 121, 132, 136, 142], "median": [16, 76], "hyperparamet": [16, 19, 20, 29, 30, 40, 62, 84, 85, 112, 118, 130, 131, 132], "control": [16, 18, 20, 37, 40, 62, 83, 131, 136], "strength": [16, 20], "medianfilt": 16, "1e2": 16, "pula": 16, "posterior": [16, 17, 19, 20, 44, 130, 131, 132, 134, 135, 136], "compar": [16, 17, 20, 142], "signific": [16, 35], "evid": 16, "easi": [16, 47], "wherea": [16, 18, 19, 110, 125, 129], "ula_mean": 16, "ula_var": 16, "pula_mean": 16, "pula_var": 16, "486": 16, "86it": [16, 22, 29, 30, 31], "mont": [16, 20, 38, 62, 63, 64, 74, 133, 134, 135, 136], "carlo": [16, 20, 38, 62, 63, 64, 74, 133, 134, 135, 136], "446": 16, "46it": [16, 22, 23, 28, 29, 30], "89": [16, 19, 22, 28, 29], "304": [16, 21, 48], "demo_custom_kernel": [16, 21, 48], "arxiv": [17, 53, 54, 55, 58, 66, 73, 74, 110, 114, 130, 131, 132, 135, 136], "pdf": [17, 53, 66], "2209": [17, 131], "11888": 17, "known": [17, 90], "variou": [17, 25, 38, 44], "linspac": [17, 18, 19, 126, 130], "diff": 17, "etab": [17, 130], "ab": [17, 18, 20, 54, 55, 58, 73, 74, 88, 110, 114, 130, 131, 132, 135, 136], "sum": [17, 19, 20, 30, 41, 43, 93, 125, 146], "09it": [17, 29, 30, 32], "84it": [17, 29, 31], "give": [17, 87, 92], "diffusionsampl": [17, 44], "fulli": [17, 22, 23, 24, 25, 67, 83], "fledg": 17, "var": [17, 20, 134], "std": [17, 20], "dev": [17, 20], "flatten": [17, 20, 146], "66it": [17, 18, 29, 30, 31], "67it": [17, 25, 29, 31], "90": [17, 18, 19, 22, 28, 29, 31, 32, 38, 74], "76": [17, 19, 22, 29, 30, 32], "32e": 17, "55e": 17, "679": [17, 21, 48], "demo_ddrm": [17, 21, 48], "tutori": [18, 19, 45, 142], "revisit": 18, "zhou": 18, "tqdm": [18, 19, 49], "butterfli": [18, 19], "best": [18, 19, 24, 25], "256x256": [18, 19], "x_true": [18, 19], "sigma_nois": 18, "revers": [18, 19], "decreas": [18, 19, 86, 130, 131, 132], "equat": [18, 19, 32, 41, 43, 45, 86, 101, 102, 103, 104, 105, 106, 131, 132, 142], "mathbf": [18, 19, 131, 132], "_t": [18, 19, 131, 132], "overlin": [18, 19, 131, 132], "widehat": [18, 19, 131, 132], "cdot": [18, 19, 41, 43, 44, 45, 84, 85, 86, 87, 89, 95, 98, 131, 132], "rho_t": [18, 132], "varepsilon": [18, 19, 131, 132], "zeta": [18, 132], "amount": [18, 40, 136], "refer": [18, 38, 40, 43, 53, 147], "poissonlikelihood": 18, "leq": [18, 89, 102, 106], "sequenc": [18, 72, 125, 131, 132], "posit": [18, 25, 41, 63, 64, 80, 95, 123, 138], "detail": [18, 19, 32, 38, 43, 45, 49, 54, 55, 59, 63, 64, 70, 72, 73, 75, 79, 80, 81, 82, 84, 86, 100, 137, 140, 142, 144, 145], "later": [18, 19], "let": [18, 19, 74], "section": [18, 43], "condit": [18, 23, 72, 132], "author": [18, 19, 38, 72, 80], "ho": [18, 38, 72], "diffunet": [18, 19, 38], "large_model": [18, 19, 72], "befor": [18, 19, 32, 55, 71, 80, 88, 100, 123, 144, 145, 153], "being": 18, "abl": [18, 19], "timestep": [18, 19, 72, 131, 132], "dure": [18, 19, 31, 49, 83, 86, 127], "get_alpha": 18, "beta_start": [18, 19, 72, 132], "beta_end": [18, 19, 72, 132], "num_train_timestep": [18, 19, 72, 132], "beta": [18, 19, 22, 28, 29, 30, 31, 32, 33, 41, 93, 95, 101, 102, 103, 116, 131, 132], "float32": [18, 19, 22, 28, 29, 30, 32, 33, 72, 110, 125, 126], "from_numpi": [18, 19], "alphas_cumprod": 18, "cumprod": [18, 19], "axi": 18, "demo_diffpir": [18, 21, 48], "120": [18, 19, 29], "sigma_t": [18, 19], "find_nearest": [18, 72, 132], "arrai": [18, 72, 130, 132], "asarrai": 18, "idx": 18, "argmin": [18, 72, 89, 90, 92, 132], "arbitrari": [18, 19], "x_noisi": 18, "den": 18, "librari": [18, 28, 29, 30, 31, 33, 35, 49, 68], "simpli": [18, 19, 30, 39, 42], "meaning": 18, "y_denois": 18, "carefulli": 18, "simplic": [18, 28, 33], "x_prox": [18, 42], "last": [18, 88, 117], "firstli": 18, "effect": [18, 140], "residu": [18, 19, 67, 80, 83, 86, 134], "assum": [18, 19, 53, 72, 89, 109, 135, 136], "usual": [18, 19, 43], "why": [18, 19], "rescal": [18, 19, 151], "x_prox_scal": 18, "y_scale": 18, "t_i": 18, "ep": [18, 23, 24, 25, 52], "notic": [18, 89], "secondli": 18, "combin": [18, 38, 39, 132], "realiz": [18, 49, 119], "white": [18, 19, 108, 109, 114, 118], "x_sampled_sc": 18, "x_sampl": 18, "appropri": [18, 74, 92], "suggest": [18, 19, 47, 89], "diffusion_step": 18, "lambda_": [18, 132], "seq": [18, 19], "figsiz": 18, "rcparam": 18, "font": 18, "121": [18, 19], "xlabel": 18, "ylabel": 18, "122": [18, 19], "suptitl": 18, "regularis": [18, 32, 41, 43, 55, 86, 88, 100, 144, 145], "eventu": 18, "no_grad": [18, 53], "len": 18, "curr_sigma": 18, "x0": [18, 19, 31, 118], "normal": [18, 19, 29, 30, 65, 73, 80, 92, 95, 98, 118, 123, 147], "next_sigma": 18, "t_im1": 18, "73it": [18, 29, 30, 31], "76it": [18, 23, 28, 29, 30, 31], "72it": [18, 23, 24, 25, 29, 31, 32], "74it": [18, 23, 31], "37": [18, 19, 22, 28, 31], "53": [18, 19, 22, 24, 28, 32], "73": [18, 19, 22, 28, 33], "93": [18, 19, 22, 29, 31], "97": [18, 19, 20, 22], "readili": [18, 19], "298": [18, 21, 48], "introduc": [19, 68, 69, 73, 79, 80, 135], "chung": 19, "visual": [19, 28, 29, 30, 31, 33, 49, 137], "progress": [19, 49, 71, 130, 131, 132, 133, 134, 135, 136, 137], "addition": [19, 140], "addit": [19, 41, 42, 43, 54, 70, 75, 86, 92, 100, 144, 145], "awgn": 19, "pixelwis": [19, 117], "groundtruth": 19, "pre": [19, 45], "wa": [19, 68, 69, 73, 79, 80, 135], "name": [19, 32, 84, 100, 144, 145], "ffhq": [19, 38, 72], "human": 19, "face": 19, "veri": 19, "nevertheless": 19, "suffici": [19, 23, 86], "diffusion_ffhq_10m": 19, "pt": [19, 22], "357m": 19, "181mb": 19, "9m": [19, 32], "3m": [19, 22, 33], "256mb": 19, "5m": 19, "264mb": 19, "280mb": 19, "155m": 19, "289mb": 19, "185m": 19, "296mb": 19, "215m": [19, 22], "301mb": 19, "245m": 19, "306mb": 19, "274m": 19, "307mb": 19, "85": [19, 22, 28, 31, 130], "305m": 19, "310mb": 19, "335m": 19, "312mb": 19, "294mb": 19, "beta_t": 19, "beta_": 19, "rm": 19, "alpha_t": 19, "bar": [19, 49, 132], "prod_": 19, "alpha_j": 19, "alwai": [19, 125], "sim": [19, 20, 53, 62, 63, 64, 74, 110, 115, 122, 127, 128, 136], "hereaft": 19, "_0": 19, "reparametr": 19, "trick": 19, "get_beta": 19, "retriev": 19, "compute_alpha": 19, "index_select": 19, "nabla_": [19, 92, 131], "a_t": [19, 131], "b_t": [19, 131], "tild": [19, 108, 110, 112, 114, 118, 120, 121, 123, 126, 131], "constant": [19, 28, 37, 62, 63, 64, 116, 118, 131, 134, 135, 136], "q": [19, 88], "sigmat": 19, "xt": 19, "x0_t": 19, "bay": 19, "rule": [19, 86], "former": [19, 39, 52, 56, 67, 69, 76, 77, 78, 79, 81, 82], "tweedi": [19, 20, 44, 98], "formula": [19, 20, 44, 87, 96, 98, 110, 114, 118, 121, 126], "latter": [19, 51, 52, 56, 67, 69, 76, 77, 78, 79, 81, 82], "intract": 19, "propos": [19, 30, 54, 55, 74], "theorem": [19, 45, 142], "remark": 19, "hat": [19, 23, 53, 58, 65], "sigma_i": [19, 129], "differenti": [19, 41, 43, 53, 87, 95, 96, 97, 102, 131, 135, 136], "enable_grad": 19, "turn": [19, 38, 45, 74, 133, 142, 143], "ll": 19, "grad_ll": 19, "autograd": 19, "grad": [19, 87, 92, 96, 97, 99], "visit": 19, "compon": 19, "readi": 19, "everi": [19, 49, 52, 56, 67, 69, 71, 76, 77, 78, 79, 81, 82], "backpropag": [19, 54, 55, 68], "ddpm": 19, "im": 19, "There": [19, 25], "caveat": 19, "origin": [19, 29, 38, 62, 71, 73, 130, 132, 140], "ancestr": 19, "ddim": [19, 131], "sampler": [19, 44, 133, 134, 135, 136], "One": 19, "freeli": 19, "nfe": 19, "advis": 19, "actual": [19, 93], "static": 19, "ell_2": [19, 32, 65, 89, 90, 92, 118], "simeq": 19, "With": 19, "mind": 19, "num_step": 19, "skip": [19, 83], "seq_next": 19, "time_pair": 19, "x_t": [19, 132], "x0_pred": 19, "next_t": 19, "at_next": 19, "call": [19, 42, 43, 44, 45, 49, 52, 56, 67, 69, 76, 77, 78, 79, 81, 82, 88, 93, 137], "instead": [19, 39, 52, 54, 56, 66, 67, 69, 76, 77, 78, 79, 81, 82, 105], "aux_x": 19, "option": [19, 41, 83, 86, 88, 95, 107, 108, 114, 120, 125, 137, 142, 149], "l2_loss": 19, "norm_grad": 19, "sigma_tild": 19, "c2": 19, "xt_next": 19, "append": [19, 146], "19it": [19, 29, 30, 32], "23it": [19, 22, 29, 30], "41": [19, 22, 28, 32], "42": [19, 22, 25, 28, 29, 33], "49": [19, 22, 28, 33], "51": [19, 20, 22, 29, 55], "30it": [19, 22, 29, 30, 33], "74": [19, 22, 23, 29, 33], "79": [19, 22, 24, 25, 33], "82": [19, 22, 23, 29, 32, 33], "84": [19, 22, 28, 29, 30, 33], "91": [19, 22, 23], "92": [19, 22, 29, 30, 33], "99": [19, 22, 23, 29, 31], "101": 19, "102": [19, 29], "103": 19, "104": [19, 28, 33], "107": 19, "108": [19, 29], "109": [19, 33], "113": [19, 28], "115": 19, "116": 19, "117": [19, 28, 29], "118": 19, "119": [19, 22], "123": [19, 29], "124": [19, 28], "125": 19, "126": [19, 26, 28, 29], "127": [19, 28], "129": [19, 29], "130": [19, 33], "131": 19, "132": [19, 29], "134": [19, 28, 32], "137": 19, "139": 19, "140": 19, "141": [19, 29], "142": 19, "143": 19, "144": [19, 29], "145": [19, 28], "146": 19, "147": [19, 29], "148": 19, "149": [19, 28], "150": [19, 22, 28, 29], "151": 19, "152": [19, 28], "153": [19, 29], "154": [19, 28, 33], "155": [19, 28], "156": [19, 29], "157": [19, 28], "158": [19, 81, 82], "159": [19, 28, 29], "160": 19, "161": 19, "162": [19, 29], "163": [19, 28], "164": [19, 28], "165": [19, 29], "166": [19, 28], "167": 19, "168": [19, 28, 29], "169": 19, "170": [19, 28], "171": [19, 29, 33], "172": 19, "173": [19, 33], "174": [19, 29], "175": 19, "176": [19, 28], "177": [19, 29], "178": [19, 28], "179": [19, 33], "180": [19, 29, 80, 126], "181": [19, 28], "182": 19, "183": [19, 28, 29], "184": 19, "185": 19, "186": [19, 29], "187": 19, "188": [19, 33], "189": [19, 29], "190": 19, "191": [19, 28], "192": [19, 29], "193": [19, 22], "195": [19, 29], "196": 19, "197": 19, "198": [19, 29], "199": [19, 28], "330": [19, 21, 48], "demo_dp": [19, 21, 48], "quantifi": 20, "bayesian": 20, "neg": [20, 44, 95, 123, 134, 135, 136], "propto": [20, 44, 98], "point": [20, 28, 35, 39, 41, 43, 45, 54, 86, 87, 88, 89, 92, 93, 118, 142], "role": 20, "fnejacobianspectralnorm": 20, "make": [20, 35, 38, 49], "firmli": 20, "expans": 20, "nonexpans": [20, 38, 54], "help": [20, 35], "stabil": 20, "download_lipschitz": [20, 73], "dncnn_sigma2_lipschitz_color": 20, "56m": 20, "5e3": 20, "633": [20, 21, 48], "demo_sampl": [20, 21, 48], "244": 21, "present": [22, 23, 24], "beyond": 22, "subset": [22, 24, 25, 117], "coil": [22, 119], "fastmri": 22, "973": 22, "320x320": 22, "faster": 22, "fastmri_knee_singlecoil": 22, "399m": 22, "76m": 22, "6mib": [22, 33], "8mib": [22, 32, 33], "4m": 22, "7m": [22, 33], "9mib": [22, 33], "2mib": [22, 33], "6m": [22, 33], "107m": 22, "115m": 22, "3mib": [22, 33], "123m": 22, "132m": 22, "140m": 22, "148m": 22, "165m": 22, "173m": 22, "182m": 22, "190m": 22, "5mib": [22, 32], "198m": 22, "206m": 22, "223m": 22, "231m": 22, "240m": 22, "248m": 22, "256m": 22, "265m": 22, "273m": 22, "281m": 22, "289m": 22, "298m": 22, "306m": 22, "314m": 22, "322m": 22, "331m": 22, "339m": 22, "347m": 22, "356m": 22, "364m": 22, "372m": 22, "381m": 22, "389m": 22, "397m": 22, "mri_mask_128x128": 22, "900": 22, "demo_equivariant_imag": [22, 26, 48], "tabl": [22, 29, 30, 40], "wrap": [22, 28, 29, 30, 33, 38, 68], "scheme": [22, 23], "mc": [22, 23, 74], "ei": [22, 53], "group": [22, 38, 53, 74], "rotat": [22, 23, 38, 53, 74, 129], "acquisit": [22, 42, 86, 118, 121, 125, 134, 135, 136], "translat": [22, 53, 141], "scratch": [22, 23, 24, 25], "mcloss": [22, 23], "eiloss": 22, "new_demo_ei_ckp_150_v3": 22, "17m": 22, "176k": 22, "57mb": 22, "336k": 22, "14mb": 22, "688k": 22, "03mb": 22, "72mb": 22, "ckp_interv": [22, 23, 49], "187019": 22, "loss_mc": [22, 23], "08e": 22, "loss_ei": 22, "000125": 22, "000146": 22, "51e": 22, "22e": 22, "000107": 22, "28e": 22, "62e": 22, "000109": 22, "48e": 22, "000123": 22, "34e": 22, "7e": 22, "00011": 22, "baseunfold": [22, 29, 30, 31, 32, 33, 45, 142, 144, 145], "fixed_point": [22, 28, 29, 30, 31, 32, 33], "fixedpoint": [22, 28, 29, 30, 31, 32, 33, 41, 43, 45, 86, 93, 142], "hqsiter": [22, 28], "fstephq": [22, 28], "gstephq": [22, 28], "init_params_algo": [22, 28, 29, 30, 31, 32, 33], "parameterdict": [22, 28, 29, 30, 31, 32, 33], "type": [22, 28, 29, 30, 31, 32, 33, 74, 75, 110, 126, 150, 154, 155, 156], "parameterlist": [22, 28, 29, 30, 32, 33], "modulelist": [22, 28, 29, 30, 31, 32, 33], "in_conv": [22, 28, 31, 33], "conv_list": [22, 28, 31, 33], "out_conv": [22, 28, 31, 33], "nl_list": [22, 28, 31, 33], "equivariant_imag": 22, "08it": [22, 29, 30, 32], "20it": [22, 29, 30, 32], "59it": [22, 31, 32], "49it": [22, 28, 29, 30, 31], "62it": [22, 29, 31], "88it": [22, 29, 30, 31], "13it": [22, 29, 30, 32], "34it": [22, 23, 29, 32, 33], "41it": [22, 30, 31], "44it": [22, 23, 28], "33it": [22, 29, 30], "42it": [22, 28, 29, 30], "43it": [22, 28], "31it": [22, 23, 29], "48it": [22, 28, 31, 33], "06it": [22, 29, 32], "14it": [22, 29, 30, 32], "380233163702975": 22, "5844099870603792": 22, "388851845101133": 22, "4114611134712227": 22, "589": [22, 26, 48], "y_i": [23, 58], "a_": [23, 58, 110], "g_i": [23, 58], "dot": [23, 58, 84], "approach": [23, 39, 66], "unsupervis": [23, 49], "sum_": [23, 74], "mnist": [23, 24, 25, 29, 30, 36, 51], "train_base_dataset": [23, 28, 29, 30, 32, 33], "root": [23, 24, 25, 29, 30, 35, 36], "test_base_dataset": [23, 28, 29, 30, 32, 33], "receiv": 23, "whole": [23, 24, 25, 83, 134], "number_of_oper": 23, "demo_multioperator_imag": [23, 26, 48], "test_datapoint": [23, 24, 25, 29, 30, 51], "419": 23, "985": 23, "531": 23, "87it": [23, 29, 30, 31], "1021": 23, "533": 23, "1012": 23, "989": 23, "542": 23, "996": 23, "534": 23, "78it": [23, 29, 31], "1011": 23, "16it": [23, 29, 30, 32, 33], "518": [23, 33], "1009": 23, "1027": 23, "525": 23, "93it": [23, 29, 31, 32], "1023": 23, "529": 23, "1016": 23, "artifact": [23, 49, 66, 80, 137], "remov": [23, 43, 49, 66, 117, 137], "phi": [23, 66], "multi": [23, 39, 58], "moi": [23, 58], "necessari": [23, 35, 49, 72, 131, 132], "moiloss": 23, "demo_moi_ckp_10": 23, "200mb": 23, "215mb": 23, "2069441": 23, "00131": 23, "loss_moi": 23, "000454": 23, "00177": [23, 31], "000946": 23, "00427": 23, "00522": 23, "00169": [23, 31], "00903": 23, "0029": 23, "00811": 23, "00475": 23, "00865": 23, "0134": 23, "00557": 23, "00878": 23, "00631": 23, "00939": 23, "00659": 23, "00987": 23, "0165": 23, "00657": 23, "00961": 23, "0162": [23, 32], "00642": 23, "00891": 23, "0153": 23, "91it": [23, 29, 30, 31, 32], "00593": 23, "00565": 23, "00912": 23, "00537": 23, "00886": 23, "0142": 23, "00527": 23, "00864": 23, "0139": 23, "00507": 23, "0086": [23, 120], "0137": 23, "00487": 23, "00872": 23, "0136": 23, "0048": 23, "00474": 23, "00861": 23, "00465": 23, "00836": 23, "00456": 23, "00813": 23, "0127": 23, "94it": [23, 29, 31], "00442": 23, "00842": 23, "00431": 23, "00825": 23, "0126": 23, "00426": 23, "0124": 23, "00417": [23, 31], "00794": 23, "0121": [23, 32], "00423": 23, "00774": 23, "0043": 23, "00771": 23, "00433": 23, "00762": 23, "00432": 23, "00748": 23, "00736": 23, "00409": 23, "00714": [23, 31], "00401": 23, "00392": 23, "00738": 23, "00383": 23, "00375": 23, "00728": 23, "00369": 23, "00725": 23, "00372": 23, "00367": 23, "00699": 23, "00364": 23, "00698": 23, "00358": [23, 31], "00689": 23, "00353": 23, "00673": 23, "0035": 23, "00667": 23, "0102": [23, 32], "00349": 23, "00344": [23, 31], "00653": 23, "00997": 23, "0034": 23, "00643": 23, "00983": 23, "00335": 23, "00635": 23, "0097": [23, 32], "0033": [23, 31], "00973": 23, "00326": 23, "00969": 23, "00321": 23, "00956": 23, "00315": 23, "00625": 23, "0094": 23, "batchnorm2d": [23, 24, 25, 83], "momentum": [23, 24, 25, 86, 88, 142], "affin": [23, 24, 25], "track_running_stat": [23, 24, 25], "multioperator_imag": 23, "00it": [23, 29, 31, 32], "95it": [23, 29, 31], "46658115386963": 23, "8617128902874014": 23, "103665447235107": 23, "7379694923885824": 23, "626": [23, 26, 48], "correl": 24, "neighbor": [24, 59], "map": [24, 31, 40, 42, 44, 59, 72, 81, 82, 98, 113, 118, 121, 131, 132], "propag": [24, 53, 59], "corrupt": [24, 25], "demo_n2n": 24, "440": 24, "90it": [24, 31, 32], "919": 24, "ckp_50_demo_n2n": 24, "14m": [24, 25], "104mb": 24, "444737": [24, 25], "0745": 24, "0695": [24, 29], "0678": [24, 29], "826131057739257": 24, "5348207475459481": 24, "346026992797853": [24, 25], "7863419781551304": [24, 25], "709": [24, 26, 48], "demo_n2n_denois": [24, 26, 48], "knowledg": 25, "about": [25, 37, 38], "unbias": [25, 62, 63, 64], "odot": [25, 63, 64, 116], "bernoulli": [25, 63, 64, 117], "elementwis": [25, 63, 64], "yann": [25, 29], "lecun": [25, 29], "exdb": [25, 29], "idx3": [25, 29], "ubyt": [25, 29], "gz": [25, 29], "raw": [25, 29], "9912422": [25, 29], "185927075": 25, "extract": [25, 29], "idx1": [25, 29], "28881": [25, 29], "203589401": 25, "t10k": [25, 29], "1648877": [25, 29], "62033720": 25, "80it": [25, 31, 32], "4542": [25, 29], "41234910": 25, "demo_sur": 25, "364": 25, "781": 25, "surepoissonloss": 25, "suregaussianloss": 25, "surepgloss": 25, "ckp_10_demo_sur": 25, "107mb": 25, "00219": 25, "0011": 25, "0022": 25, "000707": 25, "000629": 25, "420438003540038": 25, "5207505328858359": 25, "203": [25, 26, 33, 48], "demo_sure_denois": [25, 26, 48], "000": 27, "toi": 28, "larger": [28, 33, 51, 72, 110, 118, 126, 135, 136], "wandb": [28, 31, 33, 49, 137], "gd": [28, 104, 142], "deq_build": [28, 45], "cbsd500": [28, 31, 33], "replac": [28, 31, 33, 43, 45], "demo_deq": [28, 34, 48], "generated_datasets_path": [28, 29, 30, 33], "89it": [28, 29, 31], "helper": [28, 33, 100, 144, 145], "anderson_acceleration_forward": 28, "anderson": [28, 86, 88, 142], "pass": [28, 35, 39, 41, 45, 49, 52, 56, 67, 69, 76, 77, 78, 79, 81, 82, 100, 114, 127, 138, 142, 143, 144, 145], "anderson_acceleration_backward": [28, 142], "anderson_history_s": 28, "histori": [28, 86, 88, 142], "anderson_acceler": [28, 86, 88], "history_size_backward": [28, 142], "history_s": [28, 86, 88], "188166": 28, "808": 28, "923": 28, "952": 28, "264": 28, "841": 28, "462": 28, "0736": 28, "745": 28, "0963": 28, "285": 28, "58e": 28, "88e": 28, "41e": 28, "12e": 28, "09e": 28, "01e": 28, "13e": 28, "97e": 28, "9e": 28, "69e": 28, "64e": 28, "66e": 28, "39e": 28, "71e": 28, "19e": 28, "81e": 28, "25e": 28, "55it": [28, 30, 31], "288": 28, "227": 28, "343": 28, "basedeq": [28, 45, 144], "deq_hq": 28, "216714859008789": 28, "904853820800781": 28, "783": [28, 34, 48], "nutshel": 29, "involv": [29, 81, 82], "learnabl": [29, 30, 32, 43, 45, 80, 83, 143], "mnist_train": [29, 30], "train_test_transform": [29, 30], "138271367": 29, "174295962": 29, "66047420": 29, "38177412": 29, "highli": [29, 30], "10x": [29, 30], "under": [29, 30, 43], "demo_lista": [29, 34, 48], "726": 29, "min_x": [29, 30, 86, 88], "wx": 29, "_1": [29, 86, 88, 90, 91], "pgditer": [29, 30, 86, 88], "text": [29, 30, 62, 64, 74, 86, 89, 90, 92, 110, 112, 117, 127, 147], "ax_k": [29, 30], "waveletdict": 29, "both": [29, 30, 31, 38, 125, 126], "These": [29, 30, 37, 96, 143], "yield": [29, 30], "sigma_denoiser_init": 29, "loader": [29, 30, 137], "0996": 29, "0808": [29, 30], "0857": 29, "0853": 29, "0881": 29, "0804": [29, 30], "0771": 29, "0781": [29, 30], "0795": 29, "0791": 29, "0784": [29, 30], "0867": 29, "17it": [29, 30, 31, 32], "0844": 29, "084": [29, 30], "0819": [29, 111], "0826": [29, 30], "0822": [29, 30], "0806": [29, 30], "0797": [29, 30], "82it": [29, 31], "0789": [29, 30], "0812": [29, 30], "92it": [29, 31], "0807": [29, 30], "0792": [29, 30], "0782": 29, "0775": 29, "0768": 29, "0766": 29, "0765": 29, "0758": 29, "0764": 29, "0772": [29, 30], "04it": [29, 30, 32], "076": [29, 30], "0762": 29, "12it": [29, 30, 32], "0769": 29, "0767": [29, 30], "0763": [29, 30], "0755": 29, "0752": [29, 30], "0746": 29, "0735": 29, "0731": 29, "0729": 29, "0727": 29, "0721": 29, "0714": 29, "0703": 29, "0708": 29, "0706": 29, "0705": 29, "0704": 29, "0702": 29, "0699": 29, "0693": 29, "0687": 29, "0692": [29, 30], "52it": [29, 31], "0696": 29, "0694": 29, "0686": 29, "0685": 29, "02it": [29, 31], "0682": 29, "0679": [29, 32], "18it": [29, 30, 32, 33], "0677": 29, "068": 29, "0676": 29, "0674": 29, "0672": 29, "067": 29, "0669": 29, "0668": 29, "0667": 29, "0666": 29, "0665": 29, "0664": 29, "0663": 29, "0662": 29, "0658": 29, "0657": 29, "0656": 29, "0655": 29, "0933": 29, "0633": 29, "0593": 29, "0506": 29, "0445": 29, "0466": 29, "11it": [29, 32], "0483": 29, "0479": [29, 110], "0504": 29, "0502": 29, "0508": 29, "0511": 29, "0521": [29, 32], "053": 29, "0525": 29, "0533": 29, "0554": 29, "0579": 29, "0572": 29, "0575": 29, "0573": 29, "0568": 29, "0576": [29, 32], "0577": 29, "0585": 29, "057": 29, "0571": 29, "0567": 29, "0563": 29, "0566": 29, "0574": 29, "0578": [29, 32], "0584": 29, "0586": 29, "0581": 29, "058": 29, "0569": 29, "0562": 29, "0561": 29, "0558": 29, "0557": 29, "0556": 29, "0553": 29, "0552": 29, "0551": 29, "0549": 29, "0548": 29, "0547": 29, "0546": [29, 32], "0543": 29, "0542": 29, "0541": 29, "054": 29, "0539": 29, "0537": 29, "0536": 29, "0534": 29, "98it": [29, 32], "07it": [29, 32], "0531": 29, "0532": 29, "0529": 29, "0528": 29, "0741": 29, "052": 29, "0523": 29, "0527": 29, "0522": [29, 32], "051": 29, "0492": 29, "0495": 29, "0505": 29, "0501": 29, "0498": 29, "0503": 29, "0509": 29, "0517": 29, "0515": 29, "0513": 29, "0507": 29, "0493": 29, "0491": 29, "049": 29, "0494": 29, "0489": 29, "0486": 29, "0487": 29, "0497": 29, "0499": 29, "0496": 29, "0379": 29, "0478": 29, "0473": 29, "0435": 29, "0453": [29, 32], "0459": 29, "0454": 29, "0488": 29, "0485": 29, "0476": 29, "0463": 29, "047": 29, "048": 29, "0468": 29, "0465": 29, "0464": 29, "0467": 29, "0462": 29, "0474": 29, "0477": 29, "0475": 29, "0482": 29, "0469": 29, "0398": [29, 114], "0418": [29, 119], "0438": 29, "0405": 29, "042": [29, 34], "0428": 29, "0426": 29, "041": 29, "0416": 29, "0419": 29, "0437": 29, "0436": 29, "0431": 29, "0458": 29, "046": 29, "0457": 29, "0456": [29, 32], "0455": 29, "fsteppgd": [29, 30], "gsteppgd": [29, 30], "2x3": 29, "dwt": [29, 32], "dwtforward": [29, 32], "iwt": [29, 32], "dwtinvers": [29, 32], "column": [29, 30, 117, 151], "back": [29, 30, 126], "project": [29, 30, 35, 38, 89, 90, 126, 134, 135, 136], "domain": [29, 30, 68], "unfolded_pgd": [29, 30], "098645210266113": 29, "267927169799805": 29, "plot_paramet": [29, 30, 33], "init_param": [29, 30, 33, 153], "643": [29, 34, 48], "demo_licp": 30, "755": 30, "minimis": [30, 86, 101, 102, 103, 104, 105, 106], "tv": [30, 65, 81], "smooth": [30, 95], "c": [30, 32, 42, 63, 71, 72, 80, 89, 108, 109, 110, 112, 117, 125, 147, 151], "finit": 30, "dx": [30, 81, 82], "tv_smooth": 30, "mse_loss": 30, "reduct": [30, 80], "meth": [30, 32], "share": 30, "0757": 30, "0873": 30, "0817": 30, "0849": 30, "083": 30, "0851": 30, "081": 30, "082": 30, "0815": 30, "0827": 30, "0831": 30, "0829": 30, "0832": 30, "0847": 30, "0843": 30, "0845": [30, 117], "0842": 30, "0848": 30, "0852": 30, "0841": 30, "0862": 30, "0868": 30, "0874": 30, "0876": 30, "0888": 30, "088": 30, "0871": 30, "0864": 30, "0837": 30, "0834": 30, "0835": 30, "0824": 30, "0839": 30, "0823": 30, "0818": 30, "0811": 30, "0776": 30, "0798": 30, "0785": 30, "0814": 30, "0821": 30, "0816": 30, "0803": 30, "0805": 30, "0809": 30, "077": 30, "0711": 30, "0754": 30, "0743": 30, "0787": 30, "0788": 30, "160669326782227": 30, "280359268188477": 30, "were": 30, "check": [30, 32, 35, 49, 86, 88, 118], "929": [30, 34, 48], "demo_custom_prior_unfold": [30, 34, 48], "adler": 31, "jona": 31, "ozan": 31, "\u00f6ktem": 31, "transact": [31, 68], "medic": 31, "1322": 31, "1332": 31, "fly": 31, "odl": 31, "odlgroup": 31, "randomphantomdataset": 31, "shepplogandataset": 31, "cpiter": [31, 32], "fstep": [31, 41, 43], "gstep": [31, 41, 43], "pdnet_primalblock": 31, "pdnet_dualblock": 31, "pditer": 31, "directli": [31, 47, 72, 80, 100, 144, 145], "redefin": 31, "respect": [31, 45, 74, 93], "afterward": [31, 52, 56, 67, 69, 76, 77, 78, 79, 81, 82], "pdnetiter": 31, "gsteppdnet": 31, "fsteppdnet": 31, "Their": 31, "pdnetprior": 31, "pdnetdatafid": 31, "n_iter_train": 31, "1e5": 31, "n_data": 31, "n_primal": 31, "extend": [31, 39], "n_dual": 31, "repeat": 31, "u0": 31, "cosineannealinglr": 31, "t_max": 31, "clean": [31, 33, 107, 108, 110, 112, 114, 120, 121, 126], "random_phantom": 31, "online_measur": [31, 49, 137], "75594": 31, "0084": 31, "00646": 31, "00648": 31, "63it": 31, "00599": 31, "00564": 31, "00521": 31, "00488": 31, "00477": 31, "00455": 31, "00436": 31, "00403": 31, "00388": 31, "00374": 31, "00363": 31, "00351": 31, "00254": 31, "00274": 31, "00277": 31, "00253": 31, "00249": 31, "00245": 31, "00259": 31, "81it": 31, "00251": 31, "00255": 31, "00248": 31, "00244": 31, "0024": 31, "00238": 31, "00236": 31, "00229": 31, "00227": 31, "00224": 31, "00132": 31, "96it": 31, "00204": 31, "00179": 31, "002": 31, "00193": 31, "00188": 31, "00194": 31, "00196": 31, "00197": 31, "00195": 31, "00192": 31, "00231": 31, "00185": 31, "0019": 31, "00189": 31, "00187": 31, "00186": 31, "00184": 31, "00181": 31, "00191": 31, "0018": 31, "00183": 31, "00182": 31, "00136": 31, "00161": 31, "00167": 31, "00164": 31, "00171": 31, "00175": 31, "00174": 31, "00201": 31, "0017": 31, "00178": 31, "00176": 31, "00154": 31, "00166": 31, "0016": 31, "00173": 31, "00151": 31, "00147": 31, "00168": 31, "00157": 31, "00172": 31, "00149": 31, "00199": 31, "00205": 31, "00198": 31, "prelu": 31, "num_paramet": 31, "932941436767578": 31, "803513526916504": 31, "370": [31, 34, 48], "demo_learned_primal_du": [31, 34, 48], "reformul": 32, "underset": [32, 41, 43, 81, 82, 84, 85, 86, 89, 90, 92, 102, 118], "iota_": [32, 89], "regnam": [32, 41, 43, 86, 102], "ball": [32, 89, 90], "center": [32, 89, 90, 108, 109, 114, 118], "recal": [32, 45, 74, 143], "convex": [32, 41, 81, 82, 87, 89, 96], "infti": [32, 89], "fashion": [32, 45, 46, 110, 117, 125, 146], "28m": 32, "stepsize_du": [32, 41], "document": [32, 35, 39, 40, 43, 56, 62, 63, 64, 102, 116, 124], "0756": 32, "0598": 32, "059": 32, "0604": 32, "0612": 32, "0623": 32, "0616": 32, "069": 32, "0519": 32, "0399": 32, "0333": 32, "032": 32, "0293": 32, "0277": 32, "0278": 32, "0276": 32, "0257": [32, 120], "00329": 32, "00493": 32, "0088": 32, "0186": 32, "0163": 32, "014": 32, "0144": 32, "0168": 32, "0161": 32, "0155": 32, "0197": 32, "0175": 32, "00429": 32, "00949": 32, "00972": 32, "00854": 32, "00758": 32, "00726": 32, "00967": 32, "00906": 32, "00933": 32, "00954": 32, "00925": 32, "00942": 32, "00919": 32, "00985": 32, "fstepcp": 32, "gstepcp": 32, "3x3": [32, 110, 111, 113, 117, 119, 126], "vialis": 32, "correctli": 32, "model_spec": 32, "eval": 32, "603": [32, 34, 48], "demo_unfolded_constrained_lista": [32, 34, 48], "jointli": 33, "gauss": 33, "demo_unfolded_sr": 33, "83m": 33, "dr": [33, 41, 100, 103, 144, 145], "dougla": [33, 100, 103, 144, 145], "rachford": [33, 100, 103, 144, 145], "resp": [33, 43], "lenght": 33, "element": [33, 38, 40, 56, 67, 107, 110, 116, 120], "relax": [33, 41, 43, 75, 81, 82, 93, 101, 102, 103], "188179": 33, "260": 33, "997": 33, "0833": 33, "243": 33, "drsiter": 33, "fstepdr": 33, "gstepdr": 33, "unfolded_dr": 33, "686464786529541": 33, "9960274696350098": 33, "715": [33, 34, 48], "demo_vanilla_unfold": [33, 34, 48], "driven": 35, "welcom": 35, "ultim": 35, "aim": [35, 43, 45], "comprehens": 35, "acknowledg": 35, "contributor": 35, "taken": 35, "decid": 35, "authorship": 35, "futur": 35, "public": 35, "prefer": 35, "fork": 35, "repositori": [35, 47, 59, 70, 72, 73, 75, 79, 80], "submit": 35, "pull": 35, "pr": 35, "prepar": 35, "pleas": [35, 47], "compliant": 35, "black": [35, 108, 109, 114, 118], "style": 35, "directori": [35, 36, 49, 137, 153], "desir": [35, 51], "chang": [35, 49, 86, 88], "machin": 35, "pytest": 35, "html": [35, 81, 82], "doc": [35, 49, 137], "familiar": 35, "workflow": 35, "open": [35, 47], "tracker": [35, 47], "ask": 35, "question": [35, 47], "discord": [35, 47], "server": [35, 47], "try": [35, 47], "address": 35, "soon": 35, "send": 35, "email": 35, "develop": 35, "idea": 35, "subpackag": 36, "celeba": [36, 51], "transform_data": 36, "data_train": 36, "data_test": 36, "300": [36, 42], "format": [36, 51], "path": [36, 49, 50, 70, 72, 73, 75, 79, 80, 151, 152, 153], "dinv_dataset": [36, 51], "packag": [37, 38, 41, 42, 44, 45, 68], "popular": 37, "especi": 37, "design": [37, 62, 63, 64], "written": [37, 41, 86], "alon": [37, 53], "submodul": 37, "augment": [37, 51, 53, 58], "togeth": 37, "lipschitz": [37, 38, 95, 118, 135, 136], "quick": 38, "block": [38, 39, 70, 75, 80], "standalon": 38, "equivariantdenois": 38, "moment": 38, "vertic": [38, 65, 74, 119], "horizont": [38, 65, 74], "flip": [38, 74, 110], "either": [38, 39, 41, 43, 45, 51, 72, 74, 80, 84, 85, 86, 100, 144, 145, 151], "uniformli": [38, 126, 127], "exact": [38, 108, 110, 112, 114, 118, 120, 126], "briefli": 38, "summar": [38, 40], "relev": [38, 86, 100, 144, 145], "host": 38, "monoton": 38, "constraint": [38, 134, 135, 136], "firm": [38, 54], "scunet": 38, "synthet": 38, "realist": 38, "artefact": 38, "swinir": 38, "page": 38, "hidden": [38, 72, 80], "dhariw": 38, "nichol": 38, "imagenet128": [38, 72], "compat": 39, "dataparallel": 39, "distributeddataparallel": 39, "gpu_numb": 39, "device_id": 39, "seamlessli": [39, 146], "loop": [39, 46, 88], "drawback": 39, "within": [39, 52, 56, 67, 69, 76, 77, 78, 79, 81, 82], "reader": [39, 43], "unifi": 40, "xset": [40, 41, 42, 43, 86, 87, 118, 121], "underli": [40, 72], "yset": [40, 41, 42, 43, 86, 87, 118, 121], "observ": [40, 58, 87, 93, 101, 103, 118, 121], "often": 40, "forw": [40, 42, 43, 53, 57, 58], "determinist": [40, 42, 118, 121], "captur": [40, 42, 118, 121], "system": [40, 88], "colon": 40, "stochast": [40, 42, 79, 80, 118, 121, 131, 135], "mapsto": [40, 41, 42, 43, 86, 118, 121], "datafid": [40, 41, 43, 45, 86, 87, 90, 92, 95], "distanc": [40, 41, 86, 87, 90, 92, 95, 96], "enforc": [40, 41, 43, 57, 76, 86], "choic": [40, 41, 62, 63, 64], "below": 40, "discrep": [40, 41, 86], "reg": [40, 41, 43, 44, 45, 86], "promot": 40, "plausibl": 40, "collect": [41, 42, 45, 47], "routin": [41, 45], "eq": [41, 43, 74, 86], "min_prob": [41, 43, 86], "tag": [41, 80, 86], "quad": [41, 43, 62, 64, 86], "datafidnam": [41, 43, 86, 87, 92, 95], "mathbb": [41, 43, 54, 55, 86, 110, 112, 117], "precis": [41, 43, 74, 86, 91, 118], "abov": [41, 86, 102], "qquad": [41, 43, 86, 88, 93], "baseoptim": [41, 43, 100, 143], "predefin": [41, 47, 118, 121], "serv": [41, 85], "come": [41, 96, 118], "distancenam": [41, 87, 92, 95, 102], "circ": [41, 56, 118, 121], "tikhonov": [41, 43], "overwritten": [41, 43, 96, 110, 118, 121, 126], "store": [41, 86, 88, 93, 110, 125, 134], "whose": [41, 116, 126, 153], "typic": [41, 44, 98], "enough": 41, "theori": [41, 43, 81, 82], "_g": [41, 43, 45, 93, 143], "appear": 42, "applic": [42, 81, 82], "character": [42, 118, 121], "affect": [42, 51, 89, 118, 121], "x_adj": 42, "x_dagger": [42, 118], "bilinear": [42, 114, 120], "optimis": 43, "read": 43, "denoisernam": [43, 74], "On": 43, "hand": 43, "assumpt": [43, 102, 131], "g_": 43, "parametr": 43, "consequ": 43, "encompass": [43, 143], "aris": 43, "includ": [44, 49, 51, 73], "leverag": [44, 45, 55, 112, 142], "convolv": [44, 98], "valid": [44, 87, 96, 107, 108, 114, 120], "posteriori": [44, 98], "yosida": [44, 98], "envelop": [44, 98, 105], "inf_z": [44, 98], "sota": 44, "produc": [44, 118, 121], "statist": [44, 134, 135, 136], "mcmc": 44, "_f": [45, 93, 143], "sometim": 45, "builder": 45, "virtual": [45, 53, 142], "infinit": [45, 142], "look": 45, "partial": [45, 90, 142], "star": [45, 142], "incom": [45, 142], "trainer": [46, 138], "overriden": 46, "alia": [46, 138], "wrapper": 46, "repres": [46, 86, 107, 120, 146], "better": 46, "scalar": [46, 49, 65, 116], "similar": [46, 110, 117, 125, 146], "quickli": 46, "framework": 47, "state": 47, "art": 47, "latest": 47, "version": [47, 74, 81, 82, 139, 141, 146], "pick": 47, "join": 47, "convers": 47, "touch": 47, "julian": 47, "tachella": 47, "dongdong": 47, "chen": 47, "samuel": 47, "matthieu": 47, "terri": 47, "616": 48, "grad_clip": 49, "lrschedul": 49, "eval_interv": 49, "img_interv": [49, 137], "bool": [49, 50, 51, 53, 54, 55, 58, 60, 66, 70, 71, 72, 73, 74, 75, 79, 80, 81, 82, 83, 86, 88, 93, 100, 110, 117, 118, 123, 125, 126, 130, 131, 132, 133, 134, 135, 136, 137, 142, 144, 145, 147, 149, 151, 152, 153], "wandb_setup": [49, 137], "factori": 49, "plot_measur": [49, 137], "check_grad": 49, "ckpt_pretrain": 49, "fact_loss": 49, "freq_plot": 49, "x_net": [49, 53, 57, 58, 61, 62, 63, 64, 65], "inversef": [49, 60], "inpu": 49, "consol": [49, 137], "bias": [49, 73, 83, 137], "ai": [49, 137], "setup": [49, 137], "quickstart": [49, 137], "onlin": [49, 70, 72, 73, 75, 79, 80, 137], "manner": [49, 112, 137], "wider": 49, "reset": [49, 119, 134], "backward_pass": 49, "batch_eval_metr": 49, "check_clip_grad": 49, "epoch_ev": 49, "epoch_wandb_vi": 49, "physics_cur": 49, "setup_train": 49, "train_batch": 49, "progress_bar": 49, "hd5": 51, "hd5dataset": 51, "assign": [51, 120], "evenli": 51, "datapoint": 51, "filenam": 51, "worker": 51, "charbonni": 52, "overridden": [52, 56, 67, 69, 76, 77, 78, 79, 81, 82], "although": [52, 56, 67, 69, 76, 77, 78, 79, 81, 82, 96], "recip": [52, 56, 67, 69, 76, 77, 78, 79, 81, 82], "regist": [52, 56, 67, 69, 76, 77, 78, 79, 81, 82], "hook": [52, 56, 67, 69, 76, 77, 78, 79, 81, 82], "silent": [52, 56, 67, 69, 76, 77, 78, 79, 81, 82], "mseloss": [53, 57, 58, 59, 60, 61], "apply_nois": [53, 58], "invari": [53, 89], "2103": [53, 136], "14756": 53, "t_g": [53, 74], "ell_1": [53, 57, 58, 59, 60, 61, 81, 84, 85, 90, 91], "sensor": [53, 58, 108, 110, 112, 114, 118, 120, 121, 126], "doe": [53, 54, 55, 68, 73, 89, 105, 118, 121, 143], "tol": [54, 55, 118, 121], "eval_mod": [54, 55], "jacobian": [54, 55, 81], "spectral": [54, 55, 118], "id": [54, 97], "denot": [54, 56, 89, 105, 107, 108, 109, 116], "du": [54, 55], "2012": [54, 55], "13247v2": [54, 55], "jacobianspectralnorm": 54, "toler": [54, 55, 118, 121], "whether": [54, 55, 80, 81, 82, 86, 100, 133, 142, 144, 145, 149, 153], "y_in": 54, "x_in": 54, "args_model": 54, "kwargs_model": 54, "fne": 54, "argument": [54, 86, 88, 100, 138, 143, 144, 145], "kargs_model": 54, "keyword": [54, 88, 138, 143], "df": 55, "usag": [55, 151], "reg_l2": 55, "diag": [55, 110, 112, 117], "largest": [55, 85, 86], "eigenvalu": 55, "regval": 55, "onesid": 56, "ell_p": 56, "_p": 56, "side": 56, "ieeexplor": [56, 62, 63, 64, 116, 124], "abstract": [56, 62, 63, 64, 116, 124], "6418031": 56, "wise": [56, 116], "physics_list": 58, "a_g": 58, "x_i": 58, "2201": [58, 130], "12151": 58, "taohuang2018": 59, "split_ratio": 60, "regular_mask": 60, "m_1": 60, "m_2": 60, "pubm": 60, "ncbi": 60, "nlm": 60, "nih": 60, "gov": 60, "32614100": 60, "increas": [60, 83], "target": 61, "b_i": 62, "geq": [62, 72, 95, 134, 135, 136], "diverg": [62, 63, 64], "4099398": 62, "truli": [62, 63, 64], "noiseless": [62, 63, 64, 72], "sensit": [62, 63, 64], "proport": [62, 63, 64, 85], "tau1": 63, "tau2": 63, "tau_1": 63, "tau_2": 63, "2a": 63, "6714502": [63, 64], "variat": [65, 81, 82, 118], "pinv": 66, "ckpt_path": 66, "inspir": [66, 132], "fbpconvnet": 66, "1611": 66, "03679": 66, "dagger": [66, 112], "dim_input": 67, "dim_mid": 67, "dim_hid": 67, "connect": [67, 80, 83], "debug": 67, "prototyp": 67, "featur": 67, "latent": 67, "3d": 68, "collabor": 68, "davob": 68, "2007": 68, "unlik": [68, 73, 133], "furthermor": 68, "support": [68, 107], "un": 69, "suit": 69, "tupl": [69, 71, 76, 80, 86, 88, 107, 109, 110, 114, 116, 117, 119, 120, 125, 129, 133, 134, 135, 136, 137, 149], "scale_out": 69, "nc": [70, 75], "512": [70, 75], "nb": [70, 75], "act_mod": [70, 75], "downsample_mod": [70, 75], "strideconv": [70, 75], "upsample_mod": [70, 75], "convtranspos": [70, 75], "like": [70, 81], "encod": 70, "nf": [70, 73, 77, 78], "activ": [70, 73, 75], "leakyrelu": [70, 75, 123], "elu": [70, 75], "softplu": [70, 75], "avgpool": [70, 75], "pool": [70, 75, 76], "pixelsuffl": [70, 75], "upconv": [70, 75], "neighbour": [70, 75], "final": [70, 72, 73, 75, 79, 80], "2500": [71, 108], "re_init": 71, "minimiza": 71, "slow": [71, 114], "use_fp16": 72, "attent": [72, 80], "embed": [72, 80], "jychoi118": 72, "ilvr_adm": 72, "handl": [72, 130, 131], "n_1": 72, "n_2": 72, "gb": 72, "357": 72, "convert_to_fp16": 72, "torso": 72, "float16": 72, "convert_to_fp32": 72, "find": [72, 124, 132, 142], "type_t": 72, "noise_level": 72, "tradit": 72, "forward_denois": 72, "width": [72, 119, 126, 141, 151], "height": [72, 119, 126, 141, 151], "divis": 72, "forward_diffus": 72, "get_alpha_prod": [72, 132], "0001": [72, 86, 88, 132, 142], "pure": [72, 132], "1608": 73, "03981": 73, "seri": 73, "epub": 73, "siam": [73, 81], "doi": 73, "1137": 73, "20m1387961": 73, "geometr": 74, "commut": 74, "action": 74, "Then": 74, "2312": 74, "01831": 74, "callabl": [74, 87, 94, 96, 97, 100, 112, 118, 121, 133, 144, 145], "rotoflip": 74, "overrid": [76, 80], "boolean": [76, 134], "ax_cur": 77, "atu": 78, "in_nc": 79, "config": 79, "drop_path_r": [79, 80], "input_resolut": 79, "swin": [79, 80], "conv": [79, 80], "practic": [79, 118], "blind": [79, 83, 107], "synthesi": 79, "stage": 79, "drop": 79, "patch_siz": 80, "in_chan": 80, "embed_dim": 80, "num_head": 80, "window_s": 80, "mlp_ratio": 80, "qkv_bia": 80, "qk_scale": 80, "drop_rat": 80, "attn_drop_r": 80, "norm_lay": 80, "layernorm": 80, "ap": 80, "patch_norm": 80, "use_checkpoint": 80, "upscal": 80, "img_rang": 80, "resi_connect": 80, "1conv": 80, "pretrained_noise_level": 80, "offici": 80, "patch": 80, "head": 80, "window": 80, "mlp": 80, "queri": 80, "qk": 80, "head_dim": 80, "dropout": 80, "absolut": [80, 118, 121], "memori": [80, 148], "sr": 80, "pixelshuffl": 80, "pixelshuffledirect": 80, "3conv": 80, "jingyunliang": 80, "releas": 80, "v0": 80, "n_it_max": [81, 82], "u2": [81, 82], "r2": 81, "2nd": 81, "generalis": 81, "bredi": 81, "kunisch": 81, "sci": 81, "492": 81, "526": 81, "2010": 81, "uniqu": [81, 82], "auxiliari": [81, 86, 88], "field": [81, 82], "lambda_1": 81, "lambda_2": 81, "behav": 81, "frobeniu": 81, "hessian": 81, "lipschitzian": [81, 82], "composit": [81, 82], "vol": [81, 82], "460": [81, 82], "479": [81, 82], "2013": [81, 82], "descript": [81, 82], "laurent": [81, 82], "matlab": [81, 82], "lcondat": [81, 82], "softwar": [81, 82], "daniil": [81, 82], "smolyakov": [81, 82], "criterion": [81, 82, 86, 88, 89, 90, 118], "primari": [81, 82], "th": [81, 82, 84, 85, 91, 99, 136], "isotrop": [82, 129, 140], "circular_pad": 83, "free": [83, 148], "bfbatchnorm2d": 83, "biasfre": 83, "nan": 83, "encount": 83, "caus": 83, "fail": 83, "circular": [83, 107, 108, 109, 114, 120, 141], "batchnorm": 83, "robust": [83, 126], "And": 83, "interpret": [83, 85], "mohan": 83, "list_wv": 84, "db4": 84, "non_linear": [84, 85], "overcomplet": [84, 110, 118, 126], "psi": [84, 85], "_n": [84, 85], "psi_1": 84, "psi_2": 84, "psi_l": 84, "ell_0": [84, 85], "hard": [84, 85], "variant": [84, 85], "topk": [84, 85], "kept": [84, 85], "mother": [84, 85], "orthonorm": [85, 112], "subband": 85, "cheap": 85, "pywavelet": 85, "convent": [85, 111], "equal": [85, 98, 116, 117, 120, 125, 126], "hard_threshold_topk": 85, "prox_l0": 85, "prox_l1": 85, "gamma_backtrack": 86, "eta_backtrack": 86, "custom_metr": 86, "beta_anderson_acc": [86, 88], "eps_anderson_acc": [86, 88], "achiev": 86, "leftarrow": 86, "hold": 86, "float64": [86, 88], "a_forward": [86, 87, 88, 92], "optimalgo": 86, "claim": 86, "strategi": 86, "aux": 86, "ty": 86, "check_conv_fn": [86, 88], "check_iteration_fn": [86, 88], "init_iterate_fn": [86, 88], "x_0": [86, 102], "u_0": [86, 102], "f_0": 86, "init_metrics_fn": [86, 88], "metric_nam": 86, "update_data_fidelity_fn": [86, 88], "update_metrics_fn": [86, 88], "update_params_fn": [86, 88], "update_prior_fn": [86, 88], "nonlinear": 87, "f_x": 87, "0000": [87, 92, 108, 112, 117], "5000": [87, 92], "6000": [87, 92], "nabla_x": [87, 96, 97], "grad_d": [87, 90, 92, 95], "nabla_u": [87, 95], "stepsize_int": [87, 95, 96], "max_iter_int": [87, 95, 96], "tol_int": [87, 95, 96], "prox_conjug": [87, 96], "front": [87, 89, 96], "prox_d": [87, 89, 90, 92, 95], "hspace": 88, "2cm": 88, "prox_g": 88, "sign": [88, 90, 91, 110], "initialis": [88, 118], "sol": 88, "proce": 88, "anderson_acceleration_step": 88, "tx_prev": 88, "x_hist": 88, "t_hist": 88, "evlauaton": 88, "hp": 88, "f_k": 88, "commonli": 88, "init_anderson_acceler": 88, "insid": [89, 126, 134], "1e16": 89, "au": [89, 90, 92], "proj": 89, "l1": 91, "normalis": 92, "grad_da": 92, "prox_da": 92, "abus": 93, "terminologi": 93, "pd": [93, 102], "relaxation_step": 93, "bkg": 95, "densiti": 95, "absenc": 95, "overwrit": 96, "forget": 96, "rais": 96, "warn": 96, "mmse": 98, "string": [100, 144, 145], "direct": 101, "invert": [101, 102, 103], "kx": 102, "hal": 102, "scienc": 102, "00490826": 102, "satisfi": [102, 106], "intiliaz": 102, "three": 102, "z_0": 102, "v_": 104, "1f": 105, "lip": 106, "unknown": [107, 116], "replic": [107, 108, 114, 120], "reflect": [107, 108, 114, 120, 140], "listtensor": [107, 116], "blurri": 107, "delta": 107, "16x16": [108, 109], "middl": [108, 109, 114, 118], "2x2": [108, 109, 118], "without": [108, 110, 112, 114, 120, 121, 126], "fft": 109, "allow": [109, 117, 125, 146], "1801": 109, "0360": 109, "0072": 109, "prod": 110, "iid": [110, 125], "orthogon": [110, 135], "sor": 110, "1506": 110, "03521": 110, "dst": 110, "bigger": [110, 125, 151], "o": [110, 116, 125], "mn": [110, 125], "tend": 110, "due": [110, 126], "marcenko": 110, "pastur": 110, "law": 110, "discret": [110, 119], "sine": 110, "independ": [110, 125], "randn": [110, 111, 112, 113, 117, 118, 119, 120, 125, 126], "8522": 110, "2133": 110, "9897": [110, 126], "8714": 110, "8953": 110, "5284": 110, "4422": 110, "4238": 110, "7754": 110, "en": [110, 118, 126], "wiki": [110, 118, 126], "conjugate_gradient_method": [110, 118, 126], "pseudoinvers": [110, 112, 118, 121, 126], "rec601": 111, "1343": 111, "1329": 111, "1517": 111, "0790": 111, "6711": 111, "1414": 111, "1716": 111, "9021": 111, "parent": [112, 118, 121], "express": 112, "recreat": 112, "mask_svd": 112, "5410": [112, 117], "1788": [112, 117], "5684": 112, "3986": [112, 117], "4033": [112, 117], "7193": [112, 117], "incorpor": [112, 118, 121], "just": 113, "7302": 113, "2064": 113, "0712": 113, "1985": 113, "4322": 113, "8064": 113, "2139": 113, "3624": 113, "3223": 113, "nonetyp": [114, 120], "0146": 114, "use_fft": 114, "1510": 114, "00143": 114, "offset": 116, "5567108": 116, "exp": 116, "medium": 116, "transmiss": 116, "atmospher": 116, "light": 116, "hazi": 116, "match": [117, 124, 146], "simultan": 117, "empti": 117, "8380": 117, "sensor_model": [118, 121], "verifi": [118, 134, 136], "quantiz": [118, 121], "satur": [118, 121], "closer": [118, 130, 132], "orgin": 118, "__add__": [118, 121, 146], "retain": 118, "__mul__": [118, 121, 146], "inde": 118, "quantiti": 118, "theoret": 118, "doubl": 118, "rel": 118, "image_s": 119, "320": 119, "acceleration_factor": 119, "magnet": 119, "reson": 119, "slice": 119, "sfx": 119, "4x": 119, "5305": 119, "3326": 119, "1730": 119, "7072": 119, "sample_mask": 119, "noise_color": 120, "noise_grai": 120, "0009": 120, "0251": 120, "0411": 120, "1576": 120, "1098": 120, "0340": 120, "9084": 120, "2966": 120, "4015": 120, "guess": [121, 131, 132], "mul": 121, "concanten": 121, "clip_posit": 123, "divid": [123, 146], "9127841": 124, "review": 124, "grid": [124, 140, 151], "histogram": 124, "accord": 125, "item": 125, "round": 125, "integr": 126, "plane": 126, "rx": 126, "dimension": 126, "ramp": 126, "360": [126, 139], "inscrib": 126, "4x4": 126, "1650": 126, "2640": 126, "6995": 126, "4860": 126, "2674": 126, "9971": 126, "9002": 126, "3856": 126, "9360": 126, "4882": 126, "1068": 126, "5720": 126, "9493": 126, "7137": 126, "6536": 126, "8457": 126, "1666": 126, "7340": 126, "9793": 126, "sigma_min": 127, "sigma_max": 127, "sigma_": 127, "uniform": [127, 128, 154], "minimum": 127, "amplitud": 128, "sigma_x": 129, "anisotrop": 129, "11793": 130, "plain": [130, 132], "save_iter": 131, "14687": 131, "compute_alpha_beta": 131, "2305": 132, "08995": 132, "varepsilon_t": 132, "tun": 132, "sigma_n": 132, "get_alpha_beta": 132, "get_noise_schedul": 132, "g_statist": [133, 134, 135, 136], "save_chain": [133, 134, 135, 136], "chain": [133, 134, 135, 136], "thresh_conv": [134, 135, 136], "mykernel": 134, "iterator_param": 134, "new_x": 134, "mysampl": 134, "welford": 134, "integ": [134, 135, 136, 141], "percentag": [134, 135, 136], "burn": [134, 135, 136], "period": [134, 135, 136, 140], "discard": [134, 135, 136], "function_handl": [134, 135, 136], "get_chain": 134, "mean_has_converg": 134, "var_has_converg": 134, "inner_it": 135, "rung": 135, "kutta": 135, "chebyshev": 135, "stabilis": 135, "varga": 135, "pereyra": 135, "zygalaki": 135, "1908": 135, "08845": 135, "tip": [135, 136], "damp": 135, "inner": 135, "outer": 135, "04715": 136, "pi_": 136, "interv": 136, "linear_std_psnr": 137, "constructor": 138, "n_tran": [139, 141], "n_transf": [139, 141], "padding_mod": 140, "resampl": 140, "shift_max": 141, "fraction": 141, "max_iter_backward": 142, "beta_anderson_acc_backward": 142, "eps_anderson_acc_backward": 142, "child": [142, 143], "baseiter": 143, "__neg__": 146, "negat": 146, "__sub__": 146, "substract": 146, "__truediv__": 146, "max_pixel": 147, "log_": 147, "max_i": 147, "2_2": 147, "chw": 147, "most": 148, "crop": 149, "img_list": 151, "tight": 151, "max_img": 151, "rescale_mod": 151, "min_max": 151, "return_fig": 151, "row": 151, "img1": 151, "img2": 151, "img3": 151, "layout": 151, "linearli": 151}, "objects": {"deepinv": [[49, 0, 1, "", "Trainer"], [137, 2, 1, "", "test"], [138, 2, 1, "", "train"]], "deepinv.Trainer": [[49, 1, 1, "", "backward_pass"], [49, 1, 1, "", "batch_eval_metric"], [49, 1, 1, "", "check_clip_grad"], [49, 1, 1, "", "epoch_eval"], [49, 1, 1, "", "epoch_wandb_vis"], [49, 1, 1, "", "setup_train"], [49, 1, 1, "", "train"], [49, 1, 1, "", "train_batch"]], "deepinv.datasets": [[50, 0, 1, "", "HDF5Dataset"], [51, 0, 1, "", "generate_dataset"]], "deepinv.loss": [[52, 0, 1, "", "CharbonnierLoss"], [53, 0, 1, "", "EILoss"], [54, 0, 1, "", "FNEJacobianSpectralNorm"], [55, 0, 1, "", "JacobianSpectralNorm"], [56, 0, 1, "", "LpNorm"], [57, 0, 1, "", "MCLoss"], [58, 0, 1, "", "MOILoss"], [59, 0, 1, "", "Neighbor2Neighbor"], [60, 0, 1, "", "SplittingLoss"], [61, 0, 1, "", "SupLoss"], [62, 0, 1, "", "SureGaussianLoss"], [63, 0, 1, "", "SurePGLoss"], [64, 0, 1, "", "SurePoissonLoss"], [65, 0, 1, "", "TVLoss"]], "deepinv.loss.CharbonnierLoss": [[52, 1, 1, "", "forward"]], "deepinv.loss.EILoss": [[53, 1, 1, "", "forward"]], "deepinv.loss.FNEJacobianSpectralNorm": [[54, 1, 1, "", "forward"]], "deepinv.loss.JacobianSpectralNorm": [[55, 1, 1, "", "forward"]], "deepinv.loss.LpNorm": [[56, 1, 1, "", "forward"]], "deepinv.loss.MCLoss": [[57, 1, 1, "", "forward"]], "deepinv.loss.MOILoss": [[58, 1, 1, "", "forward"]], "deepinv.loss.Neighbor2Neighbor": [[59, 1, 1, "", "forward"]], "deepinv.loss.SplittingLoss": [[60, 1, 1, "", "forward"]], "deepinv.loss.SupLoss": [[61, 1, 1, "", "forward"]], "deepinv.loss.SureGaussianLoss": [[62, 1, 1, "", "forward"]], "deepinv.loss.SurePGLoss": [[63, 1, 1, "", "forward"]], "deepinv.loss.SurePoissonLoss": [[64, 1, 1, "", "forward"]], "deepinv.loss.TVLoss": [[65, 1, 1, "", "forward"]], "deepinv.models": [[66, 0, 1, "", "ArtifactRemoval"], [67, 0, 1, "", "AutoEncoder"], [68, 0, 1, "", "BM3D"], [69, 0, 1, "", "ConvDecoder"], [70, 0, 1, "", "DRUNet"], [71, 0, 1, "", "DeepImagePrior"], [72, 0, 1, "", "DiffUNet"], [73, 0, 1, "", "DnCNN"], [74, 0, 1, "", "EquivariantDenoiser"], [75, 0, 1, "", "GSDRUNet"], [76, 0, 1, "", "MedianFilter"], [77, 0, 1, "", "PDNet_DualBlock"], [78, 0, 1, "", "PDNet_PrimalBlock"], [79, 0, 1, "", "SCUNet"], [80, 0, 1, "", "SwinIR"], [81, 0, 1, "", "TGV"], [82, 0, 1, "", "TV"], [83, 0, 1, "", "UNet"], [84, 0, 1, "", "WaveletDict"], [85, 0, 1, "", "WaveletPrior"]], "deepinv.models.ArtifactRemoval": [[66, 1, 1, "", "forward"]], "deepinv.models.AutoEncoder": [[67, 1, 1, "", "forward"]], "deepinv.models.BM3D": [[68, 1, 1, "", "forward"]], "deepinv.models.ConvDecoder": [[69, 1, 1, "", "forward"]], "deepinv.models.DRUNet": [[70, 1, 1, "", "forward"]], "deepinv.models.DeepImagePrior": [[71, 1, 1, "", "forward"]], "deepinv.models.DiffUNet": [[72, 1, 1, "", "convert_to_fp16"], [72, 1, 1, "", "convert_to_fp32"], [72, 1, 1, "", "find_nearest"], [72, 1, 1, "", "forward"], [72, 1, 1, "", "forward_denoise"], [72, 1, 1, "", "forward_diffusion"], [72, 1, 1, "", "get_alpha_prod"]], "deepinv.models.DnCNN": [[73, 1, 1, "", "forward"]], "deepinv.models.EquivariantDenoiser": [[74, 1, 1, "", "forward"]], "deepinv.models.MedianFilter": [[76, 1, 1, "", "forward"]], "deepinv.models.PDNet_DualBlock": [[77, 1, 1, "", "forward"]], "deepinv.models.PDNet_PrimalBlock": [[78, 1, 1, "", "forward"]], "deepinv.models.SCUNet": [[79, 1, 1, "", "forward"]], "deepinv.models.SwinIR": [[80, 1, 1, "", "forward"]], "deepinv.models.TGV": [[81, 1, 1, "", "forward"]], "deepinv.models.TV": [[82, 1, 1, "", "forward"]], "deepinv.models.UNet": [[83, 1, 1, "", "forward"]], "deepinv.models.WaveletDict": [[84, 1, 1, "", "forward"]], "deepinv.models.WaveletPrior": [[85, 1, 1, "", "forward"], [85, 1, 1, "", "hard_threshold_topk"], [85, 1, 1, "", "prox_l0"], [85, 1, 1, "", "prox_l1"]], "deepinv.optim": [[86, 0, 1, "", "BaseOptim"], [87, 0, 1, "", "DataFidelity"], [88, 0, 1, "", "FixedPoint"], [89, 0, 1, "", "IndicatorL2"], [90, 0, 1, "", "L1"], [91, 0, 1, "", "L1Prior"], [92, 0, 1, "", "L2"], [93, 0, 1, "", "OptimIterator"], [94, 0, 1, "", "PnP"], [95, 0, 1, "", "PoissonLikelihood"], [96, 0, 1, "", "Prior"], [97, 0, 1, "", "RED"], [98, 0, 1, "", "ScorePrior"], [99, 0, 1, "", "Tikhonov"], [100, 2, 1, "", "optim_builder"]], "deepinv.optim.BaseOptim": [[86, 1, 1, "", "check_conv_fn"], [86, 1, 1, "", "check_iteration_fn"], [86, 1, 1, "", "forward"], [86, 1, 1, "", "init_iterate_fn"], [86, 1, 1, "", "init_metrics_fn"], [86, 1, 1, "", "update_data_fidelity_fn"], [86, 1, 1, "", "update_metrics_fn"], [86, 1, 1, "", "update_params_fn"], [86, 1, 1, "", "update_prior_fn"]], "deepinv.optim.DataFidelity": [[87, 1, 1, "", "d"], [87, 1, 1, "", "forward"], [87, 1, 1, "", "grad"], [87, 1, 1, "", "grad_d"], [87, 1, 1, "", "prox"], [87, 1, 1, "", "prox_conjugate"], [87, 1, 1, "", "prox_d"], [87, 1, 1, "", "prox_d_conjugate"]], "deepinv.optim.FixedPoint": [[88, 1, 1, "", "anderson_acceleration_step"], [88, 1, 1, "", "forward"], [88, 1, 1, "", "init_anderson_acceleration"]], "deepinv.optim.IndicatorL2": [[89, 1, 1, "", "d"], [89, 1, 1, "", "prox"], [89, 1, 1, "", "prox_d"]], "deepinv.optim.L1": [[90, 1, 1, "", "d"], [90, 1, 1, "", "grad_d"], [90, 1, 1, "", "prox"], [90, 1, 1, "", "prox_d"]], "deepinv.optim.L1Prior": [[91, 1, 1, "", "g"], [91, 1, 1, "", "prox"]], "deepinv.optim.L2": [[92, 1, 1, "", "d"], [92, 1, 1, "", "grad_d"], [92, 1, 1, "", "prox"], [92, 1, 1, "", "prox_d"]], "deepinv.optim.OptimIterator": [[93, 1, 1, "", "forward"], [93, 1, 1, "", "relaxation_step"]], "deepinv.optim.PnP": [[94, 1, 1, "", "prox"]], "deepinv.optim.PoissonLikelihood": [[95, 1, 1, "", "d"], [95, 1, 1, "", "grad_d"], [95, 1, 1, "", "prox_d"]], "deepinv.optim.Prior": [[96, 1, 1, "", "forward"], [96, 1, 1, "", "g"], [96, 1, 1, "", "grad"], [96, 1, 1, "", "prox"], [96, 1, 1, "", "prox_conjugate"]], "deepinv.optim.RED": [[97, 1, 1, "", "grad"]], "deepinv.optim.ScorePrior": [[98, 1, 1, "", "forward"]], "deepinv.optim.Tikhonov": [[99, 1, 1, "", "g"], [99, 1, 1, "", "grad"], [99, 1, 1, "", "prox"]], "deepinv.optim.optim_iterators": [[101, 0, 1, "", "ADMMIteration"], [102, 0, 1, "", "CPIteration"], [103, 0, 1, "", "DRSIteration"], [104, 0, 1, "", "GDIteration"], [105, 0, 1, "", "HQSIteration"], [106, 0, 1, "", "PGDIteration"]], "deepinv.optim.optim_iterators.ADMMIteration": [[101, 1, 1, "", "forward"]], "deepinv.optim.optim_iterators.CPIteration": [[102, 1, 1, "", "forward"]], "deepinv.optim.optim_iterators.DRSIteration": [[103, 1, 1, "", "forward"]], "deepinv.optim.optim_iterators.GDIteration": [[104, 1, 1, "", "forward"]], "deepinv.physics": [[107, 0, 1, "", "BlindBlur"], [108, 0, 1, "", "Blur"], [109, 0, 1, "", "BlurFFT"], [110, 0, 1, "", "CompressedSensing"], [111, 0, 1, "", "Decolorize"], [112, 0, 1, "", "DecomposablePhysics"], [113, 0, 1, "", "Denoising"], [114, 0, 1, "", "Downsampling"], [115, 0, 1, "", "GaussianNoise"], [116, 0, 1, "", "Haze"], [117, 0, 1, "", "Inpainting"], [118, 0, 1, "", "LinearPhysics"], [119, 0, 1, "", "MRI"], [120, 0, 1, "", "Pansharpen"], [121, 0, 1, "", "Physics"], [122, 0, 1, "", "PoissonGaussianNoise"], [123, 0, 1, "", "PoissonNoise"], [124, 0, 1, "", "SinglePhotonLidar"], [125, 0, 1, "", "SinglePixelCamera"], [126, 0, 1, "", "Tomography"], [127, 0, 1, "", "UniformGaussianNoise"], [128, 0, 1, "", "UniformNoise"]], "deepinv.physics.BlindBlur": [[107, 1, 1, "", "A"], [107, 1, 1, "", "A_dagger"]], "deepinv.physics.Blur": [[108, 1, 1, "", "A"], [108, 1, 1, "", "A_adjoint"]], "deepinv.physics.CompressedSensing": [[110, 1, 1, "", "A"], [110, 1, 1, "", "A_adjoint"], [110, 1, 1, "", "A_dagger"]], "deepinv.physics.DecomposablePhysics": [[112, 1, 1, "", "A"], [112, 1, 1, "", "A_adjoint"], [112, 1, 1, "", "A_dagger"], [112, 1, 1, "", "noise"], [112, 1, 1, "", "prox_l2"]], "deepinv.physics.Downsampling": [[114, 1, 1, "", "A"], [114, 1, 1, "", "A_adjoint"], [114, 1, 1, "", "prox_l2"]], "deepinv.physics.GaussianNoise": [[115, 1, 1, "", "forward"]], "deepinv.physics.Haze": [[116, 1, 1, "", "A"], [116, 1, 1, "", "A_dagger"]], "deepinv.physics.LinearPhysics": [[118, 1, 1, "", "A_adjoint"], [118, 1, 1, "", "A_dagger"], [118, 1, 1, "", "__add__"], [118, 1, 1, "", "__mul__"], [118, 1, 1, "", "adjointness_test"], [118, 1, 1, "", "compute_norm"], [118, 1, 1, "", "prox_l2"]], "deepinv.physics.MRI": [[119, 1, 1, "", "reset"], [119, 1, 1, "", "sample_mask"]], "deepinv.physics.Pansharpen": [[120, 1, 1, "", "A"], [120, 1, 1, "", "A_adjoint"], [120, 1, 1, "", "forward"]], "deepinv.physics.Physics": [[121, 1, 1, "", "A"], [121, 1, 1, "", "A_dagger"], [121, 1, 1, "", "__add__"], [121, 1, 1, "", "__mul__"], [121, 1, 1, "", "forward"], [121, 1, 1, "", "noise"], [121, 1, 1, "", "sensor"]], "deepinv.physics.PoissonGaussianNoise": [[122, 1, 1, "", "forward"]], "deepinv.physics.PoissonNoise": [[123, 1, 1, "", "forward"]], "deepinv.physics.SinglePhotonLidar": [[124, 1, 1, "", "A"], [124, 1, 1, "", "A_dagger"]], "deepinv.physics.Tomography": [[126, 1, 1, "", "A"], [126, 1, 1, "", "A_adjoint"], [126, 1, 1, "", "A_dagger"]], "deepinv.physics.UniformGaussianNoise": [[127, 1, 1, "", "forward"]], "deepinv.physics.UniformNoise": [[128, 1, 1, "", "forward"]], "deepinv.physics.blur": [[129, 2, 1, "", "gaussian_blur"]], "deepinv.sampling": [[130, 0, 1, "", "DDRM"], [131, 0, 1, "", "DPS"], [132, 0, 1, "", "DiffPIR"], [133, 0, 1, "", "DiffusionSampler"], [134, 0, 1, "", "MonteCarlo"], [135, 0, 1, "", "SKRock"], [136, 0, 1, "", "ULA"]], "deepinv.sampling.DDRM": [[130, 1, 1, "", "forward"]], "deepinv.sampling.DPS": [[131, 1, 1, "", "compute_alpha_betas"], [131, 1, 1, "", "forward"]], "deepinv.sampling.DiffPIR": [[132, 1, 1, "", "find_nearest"], [132, 1, 1, "", "forward"], [132, 1, 1, "", "get_alpha_beta"], [132, 1, 1, "", "get_alpha_prod"], [132, 1, 1, "", "get_noise_schedule"]], "deepinv.sampling.MonteCarlo": [[134, 1, 1, "", "forward"], [134, 1, 1, "", "get_chain"], [134, 1, 1, "", "mean_has_converged"], [134, 1, 1, "", "reset"], [134, 1, 1, "", "var_has_converged"]], "deepinv.transform": [[139, 0, 1, "", "Rotate"], [140, 0, 1, "", "Scale"], [141, 0, 1, "", "Shift"]], "deepinv.transform.Rotate": [[139, 1, 1, "", "forward"]], "deepinv.transform.Scale": [[140, 1, 1, "", "forward"]], "deepinv.transform.Shift": [[141, 1, 1, "", "forward"]], "deepinv.unfolded": [[142, 0, 1, "", "BaseDEQ"], [143, 0, 1, "", "BaseUnfold"], [144, 2, 1, "", "DEQ_builder"], [145, 2, 1, "", "unfolded_builder"]], "deepinv.unfolded.BaseDEQ": [[142, 1, 1, "", "forward"]], "deepinv.utils": [[146, 0, 1, "", "TensorList"], [147, 2, 1, "", "cal_psnr"], [148, 2, 1, "", "get_freer_gpu"], [149, 2, 1, "", "load_url_image"], [150, 2, 1, "", "ones_like"], [151, 2, 1, "", "plot"], [152, 2, 1, "", "plot_curves"], [153, 2, 1, "", "plot_parameters"], [154, 2, 1, "", "rand_like"], [155, 2, 1, "", "randn_like"], [156, 2, 1, "", "zeros_like"]], "deepinv.utils.TensorList": [[146, 1, 1, "", "__add__"], [146, 1, 1, "", "__mul__"], [146, 1, 1, "", "__neg__"], [146, 1, 1, "", "__sub__"], [146, 1, 1, "", "__truediv__"], [146, 1, 1, "", "append"], [146, 1, 1, "", "flatten"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"]}, "titleterms": {"imag": [0, 1, 2, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 47], "deblur": [0, 11, 28], "custom": [0, 6, 12, 13, 16, 30, 31], "deep": [0, 2, 28, 45, 47], "explicit": 0, "prior": [0, 2, 13, 16, 20, 30, 31, 41, 43, 96], "setup": [0, 1, 4, 8, 11, 12, 13, 14, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33], "path": [0, 1, 4, 8, 11, 12, 13, 14, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33], "data": [0, 1, 4, 8, 11, 12, 13, 14, 18, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 41], "load": [0, 1, 2, 4, 7, 8, 11, 12, 13, 14, 16, 17, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33], "result": [0, 1, 2, 3, 4, 8, 11, 12, 13, 14, 16, 17, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33], "base": [0, 1, 8, 11, 12, 13, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33], "dataset": [0, 1, 8, 11, 12, 13, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 36], "degrad": [0, 1, 8, 11, 12, 13, 22, 23, 28, 29, 30, 31, 32, 33], "oper": [0, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 20, 22, 23, 28, 29, 30, 31, 32, 33, 42], "defin": [0, 2, 4, 8, 12, 16, 17, 19, 20, 28, 29, 30, 31, 32, 33], "physic": [0, 42, 121], "gener": [0, 1, 2, 3, 5, 6, 8, 11, 16, 17, 18, 20, 22, 23, 24, 25, 28, 29, 30, 32, 33, 41], "blur": [0, 7, 11, 108], "set": [0, 8, 11, 12, 14, 22, 23, 24, 25, 32], "up": [0, 8, 11, 12, 14, 22, 23, 24, 25, 32], "optim": [0, 12, 41], "algorithm": [0, 2, 11, 12, 13, 14, 16, 17, 18, 19, 20, 28, 29, 30, 31, 33, 43, 44, 45], "solv": [0, 11, 12, 14], "invers": [0, 11, 12, 14, 18, 19], "problem": [0, 11, 12, 13, 14, 18, 19], "evalu": [0, 11, 12, 13, 14], "reconstruct": [0, 2, 8, 17, 22, 23, 32], "creat": [1, 3, 6, 16, 17, 20], "your": [1, 16, 18, 19], "own": 1, "dataload": 1, "an": [2, 18], "us": [2, 6, 18, 19, 39, 50, 51, 53, 54, 57, 58, 59, 61, 62, 63, 64, 66, 69, 70, 71, 72, 73, 75, 76, 77, 78, 83, 84, 85, 86, 87, 89, 92, 93, 94, 95, 96, 97, 98, 100, 102, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153], "from": [2, 7, 16, 17, 20, 23], "internet": [2, 7, 16, 17, 20], "forward": [2, 3, 4, 5, 6, 7, 8, 12, 14, 16, 17, 20, 32], "nois": [2, 16, 17, 20, 42], "model": [2, 3, 4, 8, 11, 12, 13, 14, 16, 17, 19, 20, 31, 32, 38], "measur": [2, 3, 16, 17, 20, 23, 29, 30], "run": [2, 16, 17, 20], "dip": 2, "plot": [2, 3, 12, 14, 16, 17, 20, 29, 30, 33, 46, 151], "singl": [3, 7], "photon": 3, "lidar": 3, "depth": 3, "rang": 3, "toi": [3, 5, 6], "signal": 3, "appli": 3, "match": 3, "filter": 3, "recov": 3, "save": [4, 32], "stack": 5, "concaten": 5, "verifi": [5, 6], "our": 6, "linear": [6, 42], "decompos": 6, "benefit": 6, "A": 7, "tour": 7, "sens": [7, 29], "denois": [7, 13, 17, 18, 19, 24, 25, 38, 43, 113], "inpaint": [7, 32, 117], "compress": [7, 29, 30], "comput": [7, 9, 14, 15, 21, 26, 27, 34, 48], "tomographi": [7, 14, 126], "mri": [7, 22, 119], "decolor": [7, 111], "pan": 7, "sharpen": 7, "pixel": 7, "camera": 7, "super": [7, 13, 33], "resolut": [7, 13, 28, 33], "train": [8, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 46, 138], "network": [8, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 37], "test": [8, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 46, 137], "time": [9, 15, 21, 26, 27, 34, 48], "exampl": [10, 17, 50, 51, 53, 54, 57, 58, 59, 61, 62, 63, 64, 66, 69, 70, 71, 72, 73, 75, 76, 77, 78, 83, 84, 85, 86, 87, 89, 92, 93, 94, 95, 96, 97, 98, 100, 102, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153], "basic": 10, "plug": 10, "plai": 10, "sampl": [10, 16, 17, 18, 20], "self": [10, 22, 23, 24, 25, 37], "supervis": [10, 22, 23, 24, 25, 37], "learn": [10, 22, 23, 29, 30, 31, 37, 47], "unfold": [10, 29, 30, 32, 33, 38, 45], "dpir": 11, "method": 11, "pnp": [11, 12, 13, 14, 20, 33, 43, 94], "condat": 12, "vu": 12, "primal": [12, 31], "dual": [12, 31], "fstep": 12, "gstep": 12, "modul": 12, "regular": [13, 37], "red": [13, 43, 97], "thi": 13, "involv": 13, "particular": 13, "definit": 13, "class": [13, 16], "vanilla": [14, 33], "ct": [14, 31], "paramet": [14, 22, 23, 24, 25, 28, 29, 30, 31, 33, 41], "build": 16, "iter": [16, 29, 30, 31, 41, 43], "sampler": [16, 17, 20], "precondit": 16, "standard": 16, "ula": [16, 20, 136], "diffus": [17, 19, 44], "mmse": 17, "mont": [17, 44], "carlo": [17, 44], "implement": [18, 19], "diffpir": [18, 132], "The": [18, 19], "step": [18, 19], "fidel": [18, 31, 41], "put": 18, "all": 18, "togeth": 18, "dp": [19, 131], "schedul": 19, "approxim": 19, "uncertainti": 20, "quantif": 20, "likelihood": 20, "mcmc": 20, "equivari": [22, 38], "knee": 22, "incomplet": 23, "multipl": [23, 39], "subsampl": 23, "neighbor2neighbor": [24, 59], "loss": [24, 25, 37], "noisi": [24, 25], "sure": 25, "equilibrium": [28, 45], "deq": 28, "low": [28, 33], "soft": 29, "threshold": 29, "lista": 29, "proxim": [29, 30], "gradient": [29, 30], "weight": [30, 38], "scan": 31, "pdnet": 31, "trainabl": 31, "term": 31, "random": 31, "phantom": 31, "chambol": 32, "pock": 32, "constrain": 32, "how": 35, "contribut": 35, "hd5dataset": 36, "transform": 37, "metric": 37, "classic": 38, "learnabl": 38, "architectur": 38, "pretrain": 38, "summari": 38, "gpu": 39, "math": 40, "notat": 40, "list": 40, "mathemat": 40, "symbol": 40, "non": 42, "distribut": 42, "util": [42, 46], "markov": 44, "chain": 44, "langevin": 44, "tensorlist": [46, 146], "other": 46, "deepinvers": 47, "pytorch": 47, "librari": 47, "featur": 47, "instal": 47, "get": 47, "start": 47, "find": 47, "help": 47, "lead": 47, "develop": 47, "trainer": 49, "hdf5dataset": 50, "generate_dataset": 51, "charbonnierloss": 52, "eiloss": 53, "fnejacobianspectralnorm": 54, "jacobianspectralnorm": 55, "lpnorm": 56, "mcloss": 57, "moiloss": 58, "splittingloss": 60, "suploss": 61, "suregaussianloss": 62, "surepgloss": 63, "surepoissonloss": 64, "tvloss": 65, "artifactremov": 66, "autoencod": 67, "bm3d": 68, "convdecod": 69, "drunet": 70, "deepimageprior": 71, "diffunet": 72, "dncnn": 73, "equivariantdenois": 74, "gsdrunet": 75, "medianfilt": 76, "pdnet_dualblock": 77, "pdnet_primalblock": 78, "scunet": 79, "swinir": 80, "tgv": 81, "tv": 82, "unet": 83, "waveletdict": 84, "waveletprior": 85, "baseoptim": 86, "datafidel": 87, "fixedpoint": 88, "indicatorl2": 89, "l1": 90, "l1prior": 91, "l2": 92, "optimiter": 93, "poissonlikelihood": 95, "scoreprior": 98, "tikhonov": 99, "optim_build": 100, "admmiter": 101, "cpiter": 102, "drsiter": 103, "gditer": 104, "hqsiter": 105, "pgditer": 106, "blindblur": 107, "blurfft": 109, "compressedsens": 110, "decomposablephys": 112, "downsampl": 114, "gaussiannois": 115, "haze": 116, "linearphys": 118, "pansharpen": 120, "poissongaussiannois": 122, "poissonnois": 123, "singlephotonlidar": 124, "singlepixelcamera": 125, "uniformgaussiannois": 127, "uniformnois": 128, "gaussian_blur": 129, "ddrm": 130, "diffusionsampl": 133, "montecarlo": 134, "skrock": 135, "rotat": 139, "scale": 140, "shift": 141, "basedeq": 142, "baseunfold": 143, "deq_build": 144, "unfolded_build": 145, "cal_psnr": 147, "get_freer_gpu": 148, "load_url_imag": 149, "ones_lik": 150, "plot_curv": 152, "plot_paramet": 153, "rand_lik": 154, "randn_lik": 155, "zeros_lik": 156}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"Image deblurring with custom deep explicit prior.": [[0, "image-deblurring-with-custom-deep-explicit-prior"]], "Setup paths for data loading and results.": [[0, "setup-paths-for-data-loading-and-results"], [1, "setup-paths-for-data-loading-and-results"], [4, "setup-paths-for-data-loading-and-results"], [8, "setup-paths-for-data-loading-and-results"], [11, "setup-paths-for-data-loading-and-results"], [12, "setup-paths-for-data-loading-and-results"], [13, "setup-paths-for-data-loading-and-results"], [14, "setup-paths-for-data-loading-and-results"], [22, "setup-paths-for-data-loading-and-results"], [23, "setup-paths-for-data-loading-and-results"], [24, "setup-paths-for-data-loading-and-results"], [25, "setup-paths-for-data-loading-and-results"], [28, "setup-paths-for-data-loading-and-results"], [29, "setup-paths-for-data-loading-and-results"], [30, "setup-paths-for-data-loading-and-results"], [31, "setup-paths-for-data-loading-and-results"], [32, "setup-paths-for-data-loading-and-results"], [33, "setup-paths-for-data-loading-and-results"]], "Load base image datasets and degradation operators.": [[0, "load-base-image-datasets-and-degradation-operators"], [8, "load-base-image-datasets-and-degradation-operators"], [11, "load-base-image-datasets-and-degradation-operators"], [12, "load-base-image-datasets-and-degradation-operators"], [13, "load-base-image-datasets-and-degradation-operators"], [22, "load-base-image-datasets-and-degradation-operators"], [23, "load-base-image-datasets-and-degradation-operators"], [28, "load-base-image-datasets-and-degradation-operators"], [29, "load-base-image-datasets-and-degradation-operators"], [30, "load-base-image-datasets-and-degradation-operators"], [31, "load-base-image-datasets-and-degradation-operators"], [32, "load-base-image-datasets-and-degradation-operators"], [33, "load-base-image-datasets-and-degradation-operators"]], "Define physics operator": [[0, "define-physics-operator"]], "Generate a dataset of blurred images": [[0, "generate-a-dataset-of-blurred-images"]], "Set up the optimization algorithm to solve the inverse problem.": [[0, "set-up-the-optimization-algorithm-to-solve-the-inverse-problem"]], "Evaluate the reconstruction algorithm on the problem.": [[0, "evaluate-the-reconstruction-algorithm-on-the-problem"]], "Creating your own dataset": [[1, "creating-your-own-dataset"]], "Load base image datasets": [[1, "load-base-image-datasets"], [24, "load-base-image-datasets"], [25, "load-base-image-datasets"]], "Generate a dataset of degraded images and load it.": [[1, "generate-a-dataset-of-degraded-images-and-load-it"]], "Create a dataloader": [[1, "create-a-dataloader"]], "Reconstructing an image using the deep image prior.": [[2, "reconstructing-an-image-using-the-deep-image-prior"]], "Load image from the internet": [[2, "load-image-from-the-internet"], [7, "load-image-from-the-internet"], [16, "load-image-from-the-internet"], [20, "load-image-from-the-internet"]], "Define forward operator and noise model": [[2, "define-forward-operator-and-noise-model"], [16, "define-forward-operator-and-noise-model"], [17, "define-forward-operator-and-noise-model"], [20, "define-forward-operator-and-noise-model"]], "Generate the measurement": [[2, "generate-the-measurement"], [16, "generate-the-measurement"], [17, "generate-the-measurement"], [20, "generate-the-measurement"]], "Define the deep image prior": [[2, "define-the-deep-image-prior"]], "Run DIP algorithm and plot results": [[2, "run-dip-algorithm-and-plot-results"]], "Single photon lidar operator for depth ranging.": [[3, "single-photon-lidar-operator-for-depth-ranging"]], "Create forward model": [[3, "create-forward-model"]], "Generate toy signal and measurement": [[3, "generate-toy-signal-and-measurement"]], "Apply matched filtering to recover the signal and plot the results": [[3, "apply-matched-filtering-to-recover-the-signal-and-plot-the-results"]], "Saving and loading models": [[4, "saving-and-loading-models"]], "Define a forward operator": [[4, "define-a-forward-operator"]], "Define a model": [[4, "define-a-model"]], "Stacking and concatenating forward operators.": [[5, "stacking-and-concatenating-forward-operators"]], "Stacking forward operators.": [[5, "stacking-forward-operators"]], "Generate toy image": [[5, "generate-toy-image"], [6, "generate-toy-image"]], "Verifying the stacked operator": [[5, "verifying-the-stacked-operator"]], "Concatenating forward operators.": [[5, "concatenating-forward-operators"]], "Verifying the concatenated operator": [[5, "verifying-the-concatenated-operator"]], "Creating a forward operator.": [[6, "creating-a-forward-operator"]], "Creating a custom forward operator.": [[6, "creating-a-custom-forward-operator"]], "Verifying our linear operator": [[6, "verifying-our-linear-operator"]], "Creating a decomposable forward operator.": [[6, "creating-a-decomposable-forward-operator"]], "Benefits of using a decomposable forward operator.": [[6, "benefits-of-using-a-decomposable-forward-operator"]], "A tour of forward sensing operators": [[7, "a-tour-of-forward-sensing-operators"]], "Denoising": [[7, "denoising"], [113, "denoising"]], "Inpainting": [[7, "inpainting"], [117, "inpainting"]], "Compressed Sensing": [[7, "compressed-sensing"]], "Computed Tomography": [[7, "computed-tomography"]], "MRI": [[7, "mri"], [119, "mri"]], "Decolorize": [[7, "decolorize"], [111, "decolorize"]], "Pan-sharpening": [[7, "pan-sharpening"]], "Single-Pixel Camera": [[7, "single-pixel-camera"]], "Blur": [[7, "blur"], [108, "blur"]], "Super-Resolution": [[7, "super-resolution"]], "Training a reconstruction network.": [[8, "training-a-reconstruction-network"]], "Define forward operator and generate dataset": [[8, "define-forward-operator-and-generate-dataset"], [32, "define-forward-operator-and-generate-dataset"]], "Set up the reconstruction network": [[8, "set-up-the-reconstruction-network"], [22, "set-up-the-reconstruction-network"], [23, "set-up-the-reconstruction-network"], [32, "set-up-the-reconstruction-network"]], "Train the model": [[8, "train-the-model"], [32, "train-the-model"]], "Test the network": [[8, "test-the-network"], [22, "test-the-network"], [23, "test-the-network"], [24, "test-the-network"], [25, "test-the-network"], [28, "test-the-network"], [31, "test-the-network"], [32, "test-the-network"], [33, "test-the-network"]], "Computation times": [[9, "computation-times"], [15, "computation-times"], [21, "computation-times"], [26, "computation-times"], [27, "computation-times"], [34, "computation-times"], [48, "computation-times"]], "Examples": [[10, "examples"]], "Basics": [[10, "basics"]], "Plug-and-Play": [[10, "plug-and-play"]], "Sampling": [[10, "sampling"]], "Self-Supervised Learning": [[10, "self-supervised-learning"], [37, "self-supervised-learning"]], "Unfolded": [[10, "unfolded"], [45, "id1"]], "DPIR method for PnP image deblurring.": [[11, "dpir-method-for-pnp-image-deblurring"]], "Generate a dataset of blurred images and load it.": [[11, "generate-a-dataset-of-blurred-images-and-load-it"]], "Set up the DPIR algorithm to solve the inverse problem.": [[11, "set-up-the-dpir-algorithm-to-solve-the-inverse-problem"]], "Evaluate the model on the problem.": [[11, "evaluate-the-model-on-the-problem"], [13, "evaluate-the-model-on-the-problem"]], "PnP with custom optimization algorithm (Condat-Vu Primal-Dual)": [[12, "pnp-with-custom-optimization-algorithm-condat-vu-primal-dual"]], "Define a custom optimization algorithm": [[12, "define-a-custom-optimization-algorithm"]], "Define the custom fStep and gStep modules": [[12, "define-the-custom-fstep-and-gstep-modules"]], "Set the forward operator": [[12, "set-the-forward-operator"], [14, "set-the-forward-operator"]], "Set up the PnP algorithm to solve the inverse problem.": [[12, "set-up-the-pnp-algorithm-to-solve-the-inverse-problem"], [14, "set-up-the-pnp-algorithm-to-solve-the-inverse-problem"]], "Evaluate the model on the problem and plot the results.": [[12, "evaluate-the-model-on-the-problem-and-plot-the-results"], [14, "evaluate-the-model-on-the-problem-and-plot-the-results"]], "Regularization by Denoising (RED) for Super-Resolution.": [[13, "regularization-by-denoising-red-for-super-resolution"]], "Setup the PnP algorithm. This involves in particular the definition of a custom prior class.": [[13, "setup-the-pnp-algorithm-this-involves-in-particular-the-definition-of-a-custom-prior-class"]], "Vanilla PnP for computed tomography (CT).": [[14, "vanilla-pnp-for-computed-tomography-ct"]], "Load image and parameters": [[14, "load-image-and-parameters"]], "Building your custom sampling algorithm.": [[16, "building-your-custom-sampling-algorithm"]], "Define the sampling iteration": [[16, "define-the-sampling-iteration"]], "Build Sampler class": [[16, "build-sampler-class"]], "Define the prior": [[16, "define-the-prior"], [20, "define-the-prior"]], "Create the preconditioned and standard ULA samplers": [[16, "create-the-preconditioned-and-standard-ula-samplers"]], "Run sampling algorithms and plot results": [[16, "run-sampling-algorithms-and-plot-results"]], "Image reconstruction with a diffusion model": [[17, "image-reconstruction-with-a-diffusion-model"]], "Load example image from the internet": [[17, "load-example-image-from-the-internet"]], "Define the MMSE denoiser": [[17, "define-the-mmse-denoiser"]], "Create the Monte Carlo sampler": [[17, "create-the-monte-carlo-sampler"]], "Run the diffusion algorithm and plot results": [[17, "run-the-diffusion-algorithm-and-plot-results"]], "Create a Monte Carlo sampler": [[17, "create-a-monte-carlo-sampler"]], "Run sampling algorithm and plot results": [[17, "run-sampling-algorithm-and-plot-results"], [20, "run-sampling-algorithm-and-plot-results"]], "Implementing DiffPIR": [[18, "implementing-diffpir"]], "Generate an inverse problem": [[18, "generate-an-inverse-problem"]], "The DiffPIR algorithm": [[18, "the-diffpir-algorithm"]], "Denoising step": [[18, "denoising-step"], [19, "denoising-step"]], "Data fidelity step": [[18, "data-fidelity-step"]], "Sampling step": [[18, "sampling-step"]], "Putting it all together: the DiffPIR algorithm": [[18, "putting-it-all-together-the-diffpir-algorithm"]], "Using the DiffPIR algorithm in your inverse problem": [[18, "using-the-diffpir-algorithm-in-your-inverse-problem"]], "Implementing DPS": [[19, "implementing-dps"]], "Diffusion model loading": [[19, "diffusion-model-loading"]], "Define diffusion schedule": [[19, "define-diffusion-schedule"]], "The DPS algorithm": [[19, "the-dps-algorithm"]], "DPS approximation": [[19, "dps-approximation"]], "DPS Algorithm": [[19, "dps-algorithm"]], "Using DPS in your inverse problem": [[19, "using-dps-in-your-inverse-problem"]], "Uncertainty quantification with PnP-ULA.": [[20, "uncertainty-quantification-with-pnp-ula"]], "Define the likelihood": [[20, "define-the-likelihood"]], "Create the MCMC sampler": [[20, "create-the-mcmc-sampler"]], "Self-supervised learning with Equivariant Imaging for MRI.": [[22, "self-supervised-learning-with-equivariant-imaging-for-mri"]], "Generate a dataset of knee images and load it.": [[22, "generate-a-dataset-of-knee-images-and-load-it"]], "Set up the training parameters": [[22, "set-up-the-training-parameters"], [23, "set-up-the-training-parameters"], [24, "set-up-the-training-parameters"], [25, "set-up-the-training-parameters"]], "Train the network": [[22, "train-the-network"], [23, "train-the-network"], [24, "train-the-network"], [25, "train-the-network"], [28, "train-the-network"], [31, "train-the-network"], [33, "train-the-network"]], "Self-supervised learning from incomplete measurements of multiple operators.": [[23, "self-supervised-learning-from-incomplete-measurements-of-multiple-operators"]], "Generate a dataset of subsampled images and load it.": [[23, "generate-a-dataset-of-subsampled-images-and-load-it"]], "Self-supervised denoising with the Neighbor2Neighbor loss.": [[24, "self-supervised-denoising-with-the-neighbor2neighbor-loss"]], "Generate a dataset of noisy images": [[24, "generate-a-dataset-of-noisy-images"], [25, "generate-a-dataset-of-noisy-images"]], "Set up the denoiser network": [[24, "set-up-the-denoiser-network"], [25, "set-up-the-denoiser-network"]], "Self-supervised denoising with the SURE loss.": [[25, "self-supervised-denoising-with-the-sure-loss"]], "Deep Equilibrium (DEQ) algorithms for image deblurring": [[28, "deep-equilibrium-deq-algorithms-for-image-deblurring"]], "Generate a dataset of low resolution images and load it.": [[28, "generate-a-dataset-of-low-resolution-images-and-load-it"], [33, "generate-a-dataset-of-low-resolution-images-and-load-it"]], "Define the  DEQ algorithm.": [[28, "define-the-deq-algorithm"]], "Define the training parameters.": [[28, "define-the-training-parameters"], [29, "define-the-training-parameters"], [30, "define-the-training-parameters"], [31, "define-the-training-parameters"], [33, "define-the-training-parameters"]], "Learned Iterative Soft-Thresholding Algorithm (LISTA) for compressed sensing": [[29, "learned-iterative-soft-thresholding-algorithm-lista-for-compressed-sensing"]], "Generate a dataset of compressed measurements and load it.": [[29, "generate-a-dataset-of-compressed-measurements-and-load-it"], [30, "generate-a-dataset-of-compressed-measurements-and-load-it"]], "Define the unfolded Proximal Gradient algorithm.": [[29, "define-the-unfolded-proximal-gradient-algorithm"], [30, "define-the-unfolded-proximal-gradient-algorithm"]], "Train the network.": [[29, "train-the-network"], [30, "train-the-network"]], "Test the network.": [[29, "test-the-network"], [30, "test-the-network"]], "Plotting the learned parameters.": [[29, "plotting-the-learned-parameters"]], "Learned iterative custom prior": [[30, "learned-iterative-custom-prior"]], "Plotting the weights of the network.": [[30, "plotting-the-weights-of-the-network"]], "Learned Primal-Dual algorithm for CT scan.": [[31, "learned-primal-dual-algorithm-for-ct-scan"]], "Define a custom iterator for the PDNet learned primal-dual algorithm.": [[31, "define-a-custom-iterator-for-the-pdnet-learned-primal-dual-algorithm"]], "Define the trainable prior and data fidelity terms.": [[31, "define-the-trainable-prior-and-data-fidelity-terms"]], "Define the model.": [[31, "define-the-model"]], "Training dataset of random phantoms.": [[31, "training-dataset-of-random-phantoms"]], "Unfolded Chambolle-Pock for constrained image inpainting": [[32, "unfolded-chambolle-pock-for-constrained-image-inpainting"]], "Saving the model": [[32, "saving-the-model"]], "Loading the model": [[32, "loading-the-model"]], "Vanilla Unfolded algorithm for super-resolution": [[33, "vanilla-unfolded-algorithm-for-super-resolution"]], "Define the unfolded PnP algorithm.": [[33, "define-the-unfolded-pnp-algorithm"]], "Plotting the trained parameters.": [[33, "plotting-the-trained-parameters"]], "How to Contribute": [[35, "how-to-contribute"]], "Datasets": [[36, "datasets"]], "HD5Dataset": [[36, "hd5dataset"]], "Loss": [[37, "loss"]], "Supervised Learning": [[37, "supervised-learning"]], "Transforms": [[37, "transforms"]], "Network Regularization": [[37, "network-regularization"]], "Metrics": [[37, "metrics"]], "Models": [[38, "models"]], "Denoisers": [[38, "denoisers"]], "Classical Denoisers": [[38, "classical-denoisers"]], "Learnable Denoisers": [[38, "learnable-denoisers"]], "Equivariant denoisers": [[38, "equivariant-denoisers"]], "Unfolded architectures": [[38, "unfolded-architectures"]], "Pretrained weights": [[38, "pretrained-weights"]], "Summary of pretrained weights": [[38, "id13"]], "Using multiple GPUs": [[39, "using-multiple-gpus"]], "Math Notation": [[40, "math-notation"]], "List of mathematical symbols": [[40, "id1"]], "Optim": [[41, "optim"]], "Data Fidelity": [[41, "data-fidelity"]], "Priors": [[41, "priors"]], "Parameters": [[41, "parameters"]], "Iterators": [[41, "iterators"], [43, "iterators"]], "Generic Optimizers": [[41, "generic-optimizers"]], "Physics": [[42, "physics"], [121, "physics"]], "Linear operators": [[42, "linear-operators"]], "Non-linear operators": [[42, "non-linear-operators"]], "Noise distributions": [[42, "noise-distributions"]], "Utils": [[42, "utils"], [46, "utils"]], "PnP and RED algorithms": [[43, "pnp-and-red-algorithms"]], "Priors and denoisers": [[43, "priors-and-denoisers"]], "Diffusion algorithms": [[44, "diffusion-algorithms"]], "Diffusion": [[44, "diffusion"]], "Markov Chain Monte Carlo Langevin": [[44, "markov-chain-monte-carlo-langevin"]], "Unfolded algorithms": [[45, "unfolded-algorithms"]], "Deep Equilibrium": [[45, "deep-equilibrium"]], "Training and Testing": [[46, "training-and-testing"]], "Plotting": [[46, "plotting"]], "TensorList": [[46, "tensorlist"], [146, "tensorlist"]], "Other": [[46, "other"]], "DeepInverse: a Pytorch library for imaging with deep learning": [[47, "deepinverse-a-pytorch-library-for-imaging-with-deep-learning"]], "Featuring": [[47, "featuring"]], "Installation": [[47, "installation"]], "Getting Started": [[47, "getting-started"]], "Finding Help": [[47, "finding-help"]], "Lead Developers": [[47, "lead-developers"]], "Trainer": [[49, "trainer"]], "HDF5Dataset": [[50, "hdf5dataset"]], "Examples using HDF5Dataset:": [[50, "examples-using-hdf5dataset"]], "generate_dataset": [[51, "generate-dataset"]], "Examples using generate_dataset:": [[51, "examples-using-generate-dataset"]], "CharbonnierLoss": [[52, "charbonnierloss"]], "EILoss": [[53, "eiloss"]], "Examples using EILoss:": [[53, "examples-using-eiloss"]], "FNEJacobianSpectralNorm": [[54, "fnejacobianspectralnorm"]], "Examples using FNEJacobianSpectralNorm:": [[54, "examples-using-fnejacobianspectralnorm"]], "JacobianSpectralNorm": [[55, "jacobianspectralnorm"]], "LpNorm": [[56, "lpnorm"]], "MCLoss": [[57, "mcloss"]], "Examples using MCLoss:": [[57, "examples-using-mcloss"]], "MOILoss": [[58, "moiloss"]], "Examples using MOILoss:": [[58, "examples-using-moiloss"]], "Neighbor2Neighbor": [[59, "neighbor2neighbor"]], "Examples using Neighbor2Neighbor:": [[59, "examples-using-neighbor2neighbor"]], "SplittingLoss": [[60, "splittingloss"]], "SupLoss": [[61, "suploss"]], "Examples using SupLoss:": [[61, "examples-using-suploss"]], "SureGaussianLoss": [[62, "suregaussianloss"]], "Examples using SureGaussianLoss:": [[62, "examples-using-suregaussianloss"]], "SurePGLoss": [[63, "surepgloss"]], "Examples using SurePGLoss:": [[63, "examples-using-surepgloss"]], "SurePoissonLoss": [[64, "surepoissonloss"]], "Examples using SurePoissonLoss:": [[64, "examples-using-surepoissonloss"]], "TVLoss": [[65, "tvloss"]], "ArtifactRemoval": [[66, "artifactremoval"]], "Examples using ArtifactRemoval:": [[66, "examples-using-artifactremoval"]], "AutoEncoder": [[67, "autoencoder"]], "BM3D": [[68, "bm3d"]], "ConvDecoder": [[69, "convdecoder"]], "Examples using ConvDecoder:": [[69, "examples-using-convdecoder"]], "DRUNet": [[70, "drunet"]], "Examples using DRUNet:": [[70, "examples-using-drunet"]], "DeepImagePrior": [[71, "deepimageprior"]], "Examples using DeepImagePrior:": [[71, "examples-using-deepimageprior"]], "DiffUNet": [[72, "diffunet"]], "Examples using DiffUNet:": [[72, "examples-using-diffunet"]], "DnCNN": [[73, "dncnn"]], "Examples using DnCNN:": [[73, "examples-using-dncnn"]], "EquivariantDenoiser": [[74, "equivariantdenoiser"]], "GSDRUNet": [[75, "gsdrunet"]], "Examples using GSDRUNet:": [[75, "examples-using-gsdrunet"]], "MedianFilter": [[76, "medianfilter"]], "Examples using MedianFilter:": [[76, "examples-using-medianfilter"]], "PDNet_DualBlock": [[77, "pdnet-dualblock"]], "Examples using PDNet_DualBlock:": [[77, "examples-using-pdnet-dualblock"]], "PDNet_PrimalBlock": [[78, "pdnet-primalblock"]], "Examples using PDNet_PrimalBlock:": [[78, "examples-using-pdnet-primalblock"]], "SCUNet": [[79, "scunet"]], "SwinIR": [[80, "swinir"]], "TGV": [[81, "tgv"]], "TV": [[82, "tv"]], "UNet": [[83, "unet"]], "Examples using UNet:": [[83, "examples-using-unet"]], "WaveletDict": [[84, "waveletdict"]], "Examples using WaveletDict:": [[84, "examples-using-waveletdict"]], "WaveletPrior": [[85, "waveletprior"]], "Examples using WaveletPrior:": [[85, "examples-using-waveletprior"]], "BaseOptim": [[86, "baseoptim"]], "Examples using BaseOptim:": [[86, "examples-using-baseoptim"]], "DataFidelity": [[87, "datafidelity"]], "Examples using DataFidelity:": [[87, "examples-using-datafidelity"]], "FixedPoint": [[88, "fixedpoint"]], "IndicatorL2": [[89, "indicatorl2"]], "Examples using IndicatorL2:": [[89, "examples-using-indicatorl2"]], "L1": [[90, "l1"]], "L1Prior": [[91, "l1prior"]], "L2": [[92, "l2"]], "Examples using L2:": [[92, "examples-using-l2"]], "OptimIterator": [[93, "optimiterator"]], "Examples using OptimIterator:": [[93, "examples-using-optimiterator"]], "PnP": [[94, "pnp"]], "Examples using PnP:": [[94, "examples-using-pnp"]], "PoissonLikelihood": [[95, "poissonlikelihood"]], "Examples using PoissonLikelihood:": [[95, "examples-using-poissonlikelihood"]], "Prior": [[96, "prior"]], "Examples using Prior:": [[96, "examples-using-prior"]], "RED": [[97, "red"]], "Examples using RED:": [[97, "examples-using-red"]], "ScorePrior": [[98, "scoreprior"]], "Examples using ScorePrior:": [[98, "examples-using-scoreprior"]], "Tikhonov": [[99, "tikhonov"]], "optim_builder": [[100, "optim-builder"]], "Examples using optim_builder:": [[100, "examples-using-optim-builder"]], "ADMMIteration": [[101, "admmiteration"]], "CPIteration": [[102, "cpiteration"]], "Examples using CPIteration:": [[102, "examples-using-cpiteration"]], "DRSIteration": [[103, "drsiteration"]], "GDIteration": [[104, "gditeration"]], "HQSIteration": [[105, "hqsiteration"]], "PGDIteration": [[106, "pgditeration"]], "Examples using PGDIteration:": [[106, "examples-using-pgditeration"]], "BlindBlur": [[107, "blindblur"]], "Examples using Blur:": [[108, "examples-using-blur"]], "BlurFFT": [[109, "blurfft"]], "Examples using BlurFFT:": [[109, "examples-using-blurfft"]], "CompressedSensing": [[110, "compressedsensing"]], "Examples using CompressedSensing:": [[110, "examples-using-compressedsensing"]], "Examples using Decolorize:": [[111, "examples-using-decolorize"]], "DecomposablePhysics": [[112, "decomposablephysics"]], "Examples using DecomposablePhysics:": [[112, "examples-using-decomposablephysics"]], "Examples using Denoising:": [[113, "examples-using-denoising"]], "Downsampling": [[114, "downsampling"]], "Examples using Downsampling:": [[114, "examples-using-downsampling"]], "GaussianNoise": [[115, "gaussiannoise"]], "Examples using GaussianNoise:": [[115, "examples-using-gaussiannoise"]], "Haze": [[116, "haze"]], "Examples using Inpainting:": [[117, "examples-using-inpainting"]], "LinearPhysics": [[118, "linearphysics"]], "Examples using LinearPhysics:": [[118, "examples-using-linearphysics"]], "Examples using MRI:": [[119, "examples-using-mri"]], "Pansharpen": [[120, "pansharpen"]], "Examples using Pansharpen:": [[120, "examples-using-pansharpen"]], "Examples using Physics:": [[121, "examples-using-physics"]], "PoissonGaussianNoise": [[122, "poissongaussiannoise"]], "Examples using PoissonGaussianNoise:": [[122, "examples-using-poissongaussiannoise"]], "PoissonNoise": [[123, "poissonnoise"]], "Examples using PoissonNoise:": [[123, "examples-using-poissonnoise"]], "SinglePhotonLidar": [[124, "singlephotonlidar"]], "Examples using SinglePhotonLidar:": [[124, "examples-using-singlephotonlidar"]], "SinglePixelCamera": [[125, "singlepixelcamera"]], "Examples using SinglePixelCamera:": [[125, "examples-using-singlepixelcamera"]], "Tomography": [[126, "tomography"]], "Examples using Tomography:": [[126, "examples-using-tomography"]], "UniformGaussianNoise": [[127, "uniformgaussiannoise"]], "UniformNoise": [[128, "uniformnoise"]], "gaussian_blur": [[129, "gaussian-blur"]], "Examples using gaussian_blur:": [[129, "examples-using-gaussian-blur"]], "DDRM": [[130, "ddrm"]], "Examples using DDRM:": [[130, "examples-using-ddrm"]], "DPS": [[131, "dps"]], "Examples using DPS:": [[131, "examples-using-dps"]], "DiffPIR": [[132, "diffpir"]], "Examples using DiffPIR:": [[132, "examples-using-diffpir"]], "DiffusionSampler": [[133, "diffusionsampler"]], "Examples using DiffusionSampler:": [[133, "examples-using-diffusionsampler"]], "MonteCarlo": [[134, "montecarlo"]], "Examples using MonteCarlo:": [[134, "examples-using-montecarlo"]], "SKRock": [[135, "skrock"]], "ULA": [[136, "ula"]], "Examples using ULA:": [[136, "examples-using-ula"]], "test": [[137, "test"]], "Examples using test:": [[137, "examples-using-test"]], "train": [[138, "train"]], "Examples using train:": [[138, "examples-using-train"]], "Rotate": [[139, "rotate"]], "Examples using Rotate:": [[139, "examples-using-rotate"]], "Scale": [[140, "scale"]], "Shift": [[141, "shift"]], "BaseDEQ": [[142, "basedeq"]], "Examples using BaseDEQ:": [[142, "examples-using-basedeq"]], "BaseUnfold": [[143, "baseunfold"]], "Examples using BaseUnfold:": [[143, "examples-using-baseunfold"]], "DEQ_builder": [[144, "deq-builder"]], "Examples using DEQ_builder:": [[144, "examples-using-deq-builder"]], "unfolded_builder": [[145, "unfolded-builder"]], "Examples using unfolded_builder:": [[145, "examples-using-unfolded-builder"]], "Examples using TensorList:": [[146, "examples-using-tensorlist"]], "cal_psnr": [[147, "cal-psnr"]], "Examples using cal_psnr:": [[147, "examples-using-cal-psnr"]], "get_freer_gpu": [[148, "get-freer-gpu"]], "Examples using get_freer_gpu:": [[148, "examples-using-get-freer-gpu"]], "load_url_image": [[149, "load-url-image"]], "Examples using load_url_image:": [[149, "examples-using-load-url-image"]], "ones_like": [[150, "ones-like"]], "plot": [[151, "plot"]], "Examples using plot:": [[151, "examples-using-plot"]], "plot_curves": [[152, "plot-curves"]], "Examples using plot_curves:": [[152, "examples-using-plot-curves"]], "plot_parameters": [[153, "plot-parameters"]], "Examples using plot_parameters:": [[153, "examples-using-plot-parameters"]], "rand_like": [[154, "rand-like"]], "randn_like": [[155, "randn-like"]], "zeros_like": [[156, "zeros-like"]]}, "indexentries": {"trainer (class in deepinv)": [[49, "deepinv.Trainer"]], "backward_pass() (deepinv.trainer method)": [[49, "deepinv.Trainer.backward_pass"]], "batch_eval_metric() (deepinv.trainer method)": [[49, "deepinv.Trainer.batch_eval_metric"]], "check_clip_grad() (deepinv.trainer method)": [[49, "deepinv.Trainer.check_clip_grad"]], "epoch_eval() (deepinv.trainer method)": [[49, "deepinv.Trainer.epoch_eval"]], "epoch_wandb_vis() (deepinv.trainer method)": [[49, "deepinv.Trainer.epoch_wandb_vis"]], "setup_train() (deepinv.trainer method)": [[49, "deepinv.Trainer.setup_train"]], "train() (deepinv.trainer method)": [[49, "deepinv.Trainer.train"]], "train_batch() (deepinv.trainer method)": [[49, "deepinv.Trainer.train_batch"]], "hdf5dataset (class in deepinv.datasets)": [[50, "deepinv.datasets.HDF5Dataset"]], "generate_dataset (class in deepinv.datasets)": [[51, "deepinv.datasets.generate_dataset"]], "charbonnierloss (class in deepinv.loss)": [[52, "deepinv.loss.CharbonnierLoss"]], "forward() (deepinv.loss.charbonnierloss method)": [[52, "deepinv.loss.CharbonnierLoss.forward"]], "eiloss (class in deepinv.loss)": [[53, "deepinv.loss.EILoss"]], "forward() (deepinv.loss.eiloss method)": [[53, "deepinv.loss.EILoss.forward"]], "fnejacobianspectralnorm (class in deepinv.loss)": [[54, "deepinv.loss.FNEJacobianSpectralNorm"]], "forward() (deepinv.loss.fnejacobianspectralnorm method)": [[54, "deepinv.loss.FNEJacobianSpectralNorm.forward"]], "jacobianspectralnorm (class in deepinv.loss)": [[55, "deepinv.loss.JacobianSpectralNorm"]], "forward() (deepinv.loss.jacobianspectralnorm method)": [[55, "deepinv.loss.JacobianSpectralNorm.forward"]], "lpnorm (class in deepinv.loss)": [[56, "deepinv.loss.LpNorm"]], "forward() (deepinv.loss.lpnorm method)": [[56, "deepinv.loss.LpNorm.forward"]], "mcloss (class in deepinv.loss)": [[57, "deepinv.loss.MCLoss"]], "forward() (deepinv.loss.mcloss method)": [[57, "deepinv.loss.MCLoss.forward"]], "moiloss (class in deepinv.loss)": [[58, "deepinv.loss.MOILoss"]], "forward() (deepinv.loss.moiloss method)": [[58, "deepinv.loss.MOILoss.forward"]], "neighbor2neighbor (class in deepinv.loss)": [[59, "deepinv.loss.Neighbor2Neighbor"]], "forward() (deepinv.loss.neighbor2neighbor method)": [[59, "deepinv.loss.Neighbor2Neighbor.forward"]], "splittingloss (class in deepinv.loss)": [[60, "deepinv.loss.SplittingLoss"]], "forward() (deepinv.loss.splittingloss method)": [[60, "deepinv.loss.SplittingLoss.forward"]], "suploss (class in deepinv.loss)": [[61, "deepinv.loss.SupLoss"]], "forward() (deepinv.loss.suploss method)": [[61, "deepinv.loss.SupLoss.forward"]], "suregaussianloss (class in deepinv.loss)": [[62, "deepinv.loss.SureGaussianLoss"]], "forward() (deepinv.loss.suregaussianloss method)": [[62, "deepinv.loss.SureGaussianLoss.forward"]], "surepgloss (class in deepinv.loss)": [[63, "deepinv.loss.SurePGLoss"]], "forward() (deepinv.loss.surepgloss method)": [[63, "deepinv.loss.SurePGLoss.forward"]], "surepoissonloss (class in deepinv.loss)": [[64, "deepinv.loss.SurePoissonLoss"]], "forward() (deepinv.loss.surepoissonloss method)": [[64, "deepinv.loss.SurePoissonLoss.forward"]], "tvloss (class in deepinv.loss)": [[65, "deepinv.loss.TVLoss"]], "forward() (deepinv.loss.tvloss method)": [[65, "deepinv.loss.TVLoss.forward"]], "artifactremoval (class in deepinv.models)": [[66, "deepinv.models.ArtifactRemoval"]], "forward() (deepinv.models.artifactremoval method)": [[66, "deepinv.models.ArtifactRemoval.forward"]], "autoencoder (class in deepinv.models)": [[67, "deepinv.models.AutoEncoder"]], "forward() (deepinv.models.autoencoder method)": [[67, "deepinv.models.AutoEncoder.forward"]], "bm3d (class in deepinv.models)": [[68, "deepinv.models.BM3D"]], "forward() (deepinv.models.bm3d method)": [[68, "deepinv.models.BM3D.forward"]], "convdecoder (class in deepinv.models)": [[69, "deepinv.models.ConvDecoder"]], "forward() (deepinv.models.convdecoder method)": [[69, "deepinv.models.ConvDecoder.forward"]], "drunet (class in deepinv.models)": [[70, "deepinv.models.DRUNet"]], "forward() (deepinv.models.drunet method)": [[70, "deepinv.models.DRUNet.forward"]], "deepimageprior (class in deepinv.models)": [[71, "deepinv.models.DeepImagePrior"]], "forward() (deepinv.models.deepimageprior method)": [[71, "deepinv.models.DeepImagePrior.forward"]], "diffunet (class in deepinv.models)": [[72, "deepinv.models.DiffUNet"]], "convert_to_fp16() (deepinv.models.diffunet method)": [[72, "deepinv.models.DiffUNet.convert_to_fp16"]], "convert_to_fp32() (deepinv.models.diffunet method)": [[72, "deepinv.models.DiffUNet.convert_to_fp32"]], "find_nearest() (deepinv.models.diffunet method)": [[72, "deepinv.models.DiffUNet.find_nearest"]], "forward() (deepinv.models.diffunet method)": [[72, "deepinv.models.DiffUNet.forward"]], "forward_denoise() (deepinv.models.diffunet method)": [[72, "deepinv.models.DiffUNet.forward_denoise"]], "forward_diffusion() (deepinv.models.diffunet method)": [[72, "deepinv.models.DiffUNet.forward_diffusion"]], "get_alpha_prod() (deepinv.models.diffunet method)": [[72, "deepinv.models.DiffUNet.get_alpha_prod"]], "dncnn (class in deepinv.models)": [[73, "deepinv.models.DnCNN"]], "forward() (deepinv.models.dncnn method)": [[73, "deepinv.models.DnCNN.forward"]], "equivariantdenoiser (class in deepinv.models)": [[74, "deepinv.models.EquivariantDenoiser"]], "forward() (deepinv.models.equivariantdenoiser method)": [[74, "deepinv.models.EquivariantDenoiser.forward"]], "gsdrunet (class in deepinv.models)": [[75, "deepinv.models.GSDRUNet"]], "medianfilter (class in deepinv.models)": [[76, "deepinv.models.MedianFilter"]], "forward() (deepinv.models.medianfilter method)": [[76, "deepinv.models.MedianFilter.forward"]], "pdnet_dualblock (class in deepinv.models)": [[77, "deepinv.models.PDNet_DualBlock"]], "forward() (deepinv.models.pdnet_dualblock method)": [[77, "deepinv.models.PDNet_DualBlock.forward"]], "pdnet_primalblock (class in deepinv.models)": [[78, "deepinv.models.PDNet_PrimalBlock"]], "forward() (deepinv.models.pdnet_primalblock method)": [[78, "deepinv.models.PDNet_PrimalBlock.forward"]], "scunet (class in deepinv.models)": [[79, "deepinv.models.SCUNet"]], "forward() (deepinv.models.scunet method)": [[79, "deepinv.models.SCUNet.forward"]], "swinir (class in deepinv.models)": [[80, "deepinv.models.SwinIR"]], "forward() (deepinv.models.swinir method)": [[80, "deepinv.models.SwinIR.forward"]], "tgv (class in deepinv.models)": [[81, "deepinv.models.TGV"]], "forward() (deepinv.models.tgv method)": [[81, "deepinv.models.TGV.forward"]], "tv (class in deepinv.models)": [[82, "deepinv.models.TV"]], "forward() (deepinv.models.tv method)": [[82, "deepinv.models.TV.forward"]], "unet (class in deepinv.models)": [[83, "deepinv.models.UNet"]], "forward() (deepinv.models.unet method)": [[83, "deepinv.models.UNet.forward"]], "waveletdict (class in deepinv.models)": [[84, "deepinv.models.WaveletDict"]], "forward() (deepinv.models.waveletdict method)": [[84, "deepinv.models.WaveletDict.forward"]], "waveletprior (class in deepinv.models)": [[85, "deepinv.models.WaveletPrior"]], "forward() (deepinv.models.waveletprior method)": [[85, "deepinv.models.WaveletPrior.forward"]], "hard_threshold_topk() (deepinv.models.waveletprior method)": [[85, "deepinv.models.WaveletPrior.hard_threshold_topk"]], "prox_l0() (deepinv.models.waveletprior method)": [[85, "deepinv.models.WaveletPrior.prox_l0"]], "prox_l1() (deepinv.models.waveletprior method)": [[85, "deepinv.models.WaveletPrior.prox_l1"]], "baseoptim (class in deepinv.optim)": [[86, "deepinv.optim.BaseOptim"]], "check_conv_fn() (deepinv.optim.baseoptim method)": [[86, "deepinv.optim.BaseOptim.check_conv_fn"]], "check_iteration_fn() (deepinv.optim.baseoptim method)": [[86, "deepinv.optim.BaseOptim.check_iteration_fn"]], "forward() (deepinv.optim.baseoptim method)": [[86, "deepinv.optim.BaseOptim.forward"]], "init_iterate_fn() (deepinv.optim.baseoptim method)": [[86, "deepinv.optim.BaseOptim.init_iterate_fn"]], "init_metrics_fn() (deepinv.optim.baseoptim method)": [[86, "deepinv.optim.BaseOptim.init_metrics_fn"]], "update_data_fidelity_fn() (deepinv.optim.baseoptim method)": [[86, "deepinv.optim.BaseOptim.update_data_fidelity_fn"]], "update_metrics_fn() (deepinv.optim.baseoptim method)": [[86, "deepinv.optim.BaseOptim.update_metrics_fn"]], "update_params_fn() (deepinv.optim.baseoptim method)": [[86, "deepinv.optim.BaseOptim.update_params_fn"]], "update_prior_fn() (deepinv.optim.baseoptim method)": [[86, "deepinv.optim.BaseOptim.update_prior_fn"]], "datafidelity (class in deepinv.optim)": [[87, "deepinv.optim.DataFidelity"]], "d() (deepinv.optim.datafidelity method)": [[87, "deepinv.optim.DataFidelity.d"]], "forward() (deepinv.optim.datafidelity method)": [[87, "deepinv.optim.DataFidelity.forward"]], "grad() (deepinv.optim.datafidelity method)": [[87, "deepinv.optim.DataFidelity.grad"]], "grad_d() (deepinv.optim.datafidelity method)": [[87, "deepinv.optim.DataFidelity.grad_d"]], "prox() (deepinv.optim.datafidelity method)": [[87, "deepinv.optim.DataFidelity.prox"]], "prox_conjugate() (deepinv.optim.datafidelity method)": [[87, "deepinv.optim.DataFidelity.prox_conjugate"]], "prox_d() (deepinv.optim.datafidelity method)": [[87, "deepinv.optim.DataFidelity.prox_d"]], "prox_d_conjugate() (deepinv.optim.datafidelity method)": [[87, "deepinv.optim.DataFidelity.prox_d_conjugate"]], "fixedpoint (class in deepinv.optim)": [[88, "deepinv.optim.FixedPoint"]], "anderson_acceleration_step() (deepinv.optim.fixedpoint method)": [[88, "deepinv.optim.FixedPoint.anderson_acceleration_step"]], "forward() (deepinv.optim.fixedpoint method)": [[88, "deepinv.optim.FixedPoint.forward"]], "init_anderson_acceleration() (deepinv.optim.fixedpoint method)": [[88, "deepinv.optim.FixedPoint.init_anderson_acceleration"]], "indicatorl2 (class in deepinv.optim)": [[89, "deepinv.optim.IndicatorL2"]], "d() (deepinv.optim.indicatorl2 method)": [[89, "deepinv.optim.IndicatorL2.d"]], "prox() (deepinv.optim.indicatorl2 method)": [[89, "deepinv.optim.IndicatorL2.prox"]], "prox_d() (deepinv.optim.indicatorl2 method)": [[89, "deepinv.optim.IndicatorL2.prox_d"]], "l1 (class in deepinv.optim)": [[90, "deepinv.optim.L1"]], "d() (deepinv.optim.l1 method)": [[90, "deepinv.optim.L1.d"]], "grad_d() (deepinv.optim.l1 method)": [[90, "deepinv.optim.L1.grad_d"]], "prox() (deepinv.optim.l1 method)": [[90, "deepinv.optim.L1.prox"]], "prox_d() (deepinv.optim.l1 method)": [[90, "deepinv.optim.L1.prox_d"]], "l1prior (class in deepinv.optim)": [[91, "deepinv.optim.L1Prior"]], "g() (deepinv.optim.l1prior method)": [[91, "deepinv.optim.L1Prior.g"]], "prox() (deepinv.optim.l1prior method)": [[91, "deepinv.optim.L1Prior.prox"]], "l2 (class in deepinv.optim)": [[92, "deepinv.optim.L2"]], "d() (deepinv.optim.l2 method)": [[92, "deepinv.optim.L2.d"]], "grad_d() (deepinv.optim.l2 method)": [[92, "deepinv.optim.L2.grad_d"]], "prox() (deepinv.optim.l2 method)": [[92, "deepinv.optim.L2.prox"]], "prox_d() (deepinv.optim.l2 method)": [[92, "deepinv.optim.L2.prox_d"]], "optimiterator (class in deepinv.optim)": [[93, "deepinv.optim.OptimIterator"]], "forward() (deepinv.optim.optimiterator method)": [[93, "deepinv.optim.OptimIterator.forward"]], "relaxation_step() (deepinv.optim.optimiterator method)": [[93, "deepinv.optim.OptimIterator.relaxation_step"]], "pnp (class in deepinv.optim)": [[94, "deepinv.optim.PnP"]], "prox() (deepinv.optim.pnp method)": [[94, "deepinv.optim.PnP.prox"]], "poissonlikelihood (class in deepinv.optim)": [[95, "deepinv.optim.PoissonLikelihood"]], "d() (deepinv.optim.poissonlikelihood method)": [[95, "deepinv.optim.PoissonLikelihood.d"]], "grad_d() (deepinv.optim.poissonlikelihood method)": [[95, "deepinv.optim.PoissonLikelihood.grad_d"]], "prox_d() (deepinv.optim.poissonlikelihood method)": [[95, "deepinv.optim.PoissonLikelihood.prox_d"]], "prior (class in deepinv.optim)": [[96, "deepinv.optim.Prior"]], "forward() (deepinv.optim.prior method)": [[96, "deepinv.optim.Prior.forward"]], "g() (deepinv.optim.prior method)": [[96, "deepinv.optim.Prior.g"]], "grad() (deepinv.optim.prior method)": [[96, "deepinv.optim.Prior.grad"]], "prox() (deepinv.optim.prior method)": [[96, "deepinv.optim.Prior.prox"]], "prox_conjugate() (deepinv.optim.prior method)": [[96, "deepinv.optim.Prior.prox_conjugate"]], "red (class in deepinv.optim)": [[97, "deepinv.optim.RED"]], "grad() (deepinv.optim.red method)": [[97, "deepinv.optim.RED.grad"]], "scoreprior (class in deepinv.optim)": [[98, "deepinv.optim.ScorePrior"]], "forward() (deepinv.optim.scoreprior method)": [[98, "deepinv.optim.ScorePrior.forward"]], "tikhonov (class in deepinv.optim)": [[99, "deepinv.optim.Tikhonov"]], "g() (deepinv.optim.tikhonov method)": [[99, "deepinv.optim.Tikhonov.g"]], "grad() (deepinv.optim.tikhonov method)": [[99, "deepinv.optim.Tikhonov.grad"]], "prox() (deepinv.optim.tikhonov method)": [[99, "deepinv.optim.Tikhonov.prox"]], "optim_builder() (in module deepinv.optim)": [[100, "deepinv.optim.optim_builder"]], "admmiteration (class in deepinv.optim.optim_iterators)": [[101, "deepinv.optim.optim_iterators.ADMMIteration"]], "forward() (deepinv.optim.optim_iterators.admmiteration method)": [[101, "deepinv.optim.optim_iterators.ADMMIteration.forward"]], "cpiteration (class in deepinv.optim.optim_iterators)": [[102, "deepinv.optim.optim_iterators.CPIteration"]], "forward() (deepinv.optim.optim_iterators.cpiteration method)": [[102, "deepinv.optim.optim_iterators.CPIteration.forward"]], "drsiteration (class in deepinv.optim.optim_iterators)": [[103, "deepinv.optim.optim_iterators.DRSIteration"]], "forward() (deepinv.optim.optim_iterators.drsiteration method)": [[103, "deepinv.optim.optim_iterators.DRSIteration.forward"]], "gditeration (class in deepinv.optim.optim_iterators)": [[104, "deepinv.optim.optim_iterators.GDIteration"]], "forward() (deepinv.optim.optim_iterators.gditeration method)": [[104, "deepinv.optim.optim_iterators.GDIteration.forward"]], "hqsiteration (class in deepinv.optim.optim_iterators)": [[105, "deepinv.optim.optim_iterators.HQSIteration"]], "pgditeration (class in deepinv.optim.optim_iterators)": [[106, "deepinv.optim.optim_iterators.PGDIteration"]], "a() (deepinv.physics.blindblur method)": [[107, "deepinv.physics.BlindBlur.A"]], "a_dagger() (deepinv.physics.blindblur method)": [[107, "deepinv.physics.BlindBlur.A_dagger"]], "blindblur (class in deepinv.physics)": [[107, "deepinv.physics.BlindBlur"]], "a() (deepinv.physics.blur method)": [[108, "deepinv.physics.Blur.A"]], "a_adjoint() (deepinv.physics.blur method)": [[108, "deepinv.physics.Blur.A_adjoint"]], "blur (class in deepinv.physics)": [[108, "deepinv.physics.Blur"]], "blurfft (class in deepinv.physics)": [[109, "deepinv.physics.BlurFFT"]], "a() (deepinv.physics.compressedsensing method)": [[110, "deepinv.physics.CompressedSensing.A"]], "a_adjoint() (deepinv.physics.compressedsensing method)": [[110, "deepinv.physics.CompressedSensing.A_adjoint"]], "a_dagger() (deepinv.physics.compressedsensing method)": [[110, "deepinv.physics.CompressedSensing.A_dagger"]], "compressedsensing (class in deepinv.physics)": [[110, "deepinv.physics.CompressedSensing"]], "decolorize (class in deepinv.physics)": [[111, "deepinv.physics.Decolorize"]], "a() (deepinv.physics.decomposablephysics method)": [[112, "deepinv.physics.DecomposablePhysics.A"]], "a_adjoint() (deepinv.physics.decomposablephysics method)": [[112, "deepinv.physics.DecomposablePhysics.A_adjoint"]], "a_dagger() (deepinv.physics.decomposablephysics method)": [[112, "deepinv.physics.DecomposablePhysics.A_dagger"]], "decomposablephysics (class in deepinv.physics)": [[112, "deepinv.physics.DecomposablePhysics"]], "noise() (deepinv.physics.decomposablephysics method)": [[112, "deepinv.physics.DecomposablePhysics.noise"]], "prox_l2() (deepinv.physics.decomposablephysics method)": [[112, "deepinv.physics.DecomposablePhysics.prox_l2"]], "denoising (class in deepinv.physics)": [[113, "deepinv.physics.Denoising"]], "a() (deepinv.physics.downsampling method)": [[114, "deepinv.physics.Downsampling.A"]], "a_adjoint() (deepinv.physics.downsampling method)": [[114, "deepinv.physics.Downsampling.A_adjoint"]], "downsampling (class in deepinv.physics)": [[114, "deepinv.physics.Downsampling"]], "prox_l2() (deepinv.physics.downsampling method)": [[114, "deepinv.physics.Downsampling.prox_l2"]], "gaussiannoise (class in deepinv.physics)": [[115, "deepinv.physics.GaussianNoise"]], "forward() (deepinv.physics.gaussiannoise method)": [[115, "deepinv.physics.GaussianNoise.forward"]], "a() (deepinv.physics.haze method)": [[116, "deepinv.physics.Haze.A"]], "a_dagger() (deepinv.physics.haze method)": [[116, "deepinv.physics.Haze.A_dagger"]], "haze (class in deepinv.physics)": [[116, "deepinv.physics.Haze"]], "inpainting (class in deepinv.physics)": [[117, "deepinv.physics.Inpainting"]], "a_adjoint() (deepinv.physics.linearphysics method)": [[118, "deepinv.physics.LinearPhysics.A_adjoint"]], "a_dagger() (deepinv.physics.linearphysics method)": [[118, "deepinv.physics.LinearPhysics.A_dagger"]], "linearphysics (class in deepinv.physics)": [[118, "deepinv.physics.LinearPhysics"]], "__add__() (deepinv.physics.linearphysics method)": [[118, "deepinv.physics.LinearPhysics.__add__"]], "__mul__() (deepinv.physics.linearphysics method)": [[118, "deepinv.physics.LinearPhysics.__mul__"]], "adjointness_test() (deepinv.physics.linearphysics method)": [[118, "deepinv.physics.LinearPhysics.adjointness_test"]], "compute_norm() (deepinv.physics.linearphysics method)": [[118, "deepinv.physics.LinearPhysics.compute_norm"]], "prox_l2() (deepinv.physics.linearphysics method)": [[118, "deepinv.physics.LinearPhysics.prox_l2"]], "mri (class in deepinv.physics)": [[119, "deepinv.physics.MRI"]], "reset() (deepinv.physics.mri method)": [[119, "deepinv.physics.MRI.reset"]], "sample_mask() (deepinv.physics.mri method)": [[119, "deepinv.physics.MRI.sample_mask"]], "a() (deepinv.physics.pansharpen method)": [[120, "deepinv.physics.Pansharpen.A"]], "a_adjoint() (deepinv.physics.pansharpen method)": [[120, "deepinv.physics.Pansharpen.A_adjoint"]], "pansharpen (class in deepinv.physics)": [[120, "deepinv.physics.Pansharpen"]], "forward() (deepinv.physics.pansharpen method)": [[120, "deepinv.physics.Pansharpen.forward"]], "a() (deepinv.physics.physics method)": [[121, "deepinv.physics.Physics.A"]], "a_dagger() (deepinv.physics.physics method)": [[121, "deepinv.physics.Physics.A_dagger"]], "physics (class in deepinv.physics)": [[121, "deepinv.physics.Physics"]], "__add__() (deepinv.physics.physics method)": [[121, "deepinv.physics.Physics.__add__"]], "__mul__() (deepinv.physics.physics method)": [[121, "deepinv.physics.Physics.__mul__"]], "forward() (deepinv.physics.physics method)": [[121, "deepinv.physics.Physics.forward"]], "noise() (deepinv.physics.physics method)": [[121, "deepinv.physics.Physics.noise"]], "sensor() (deepinv.physics.physics method)": [[121, "deepinv.physics.Physics.sensor"]], "poissongaussiannoise (class in deepinv.physics)": [[122, "deepinv.physics.PoissonGaussianNoise"]], "forward() (deepinv.physics.poissongaussiannoise method)": [[122, "deepinv.physics.PoissonGaussianNoise.forward"]], "poissonnoise (class in deepinv.physics)": [[123, "deepinv.physics.PoissonNoise"]], "forward() (deepinv.physics.poissonnoise method)": [[123, "deepinv.physics.PoissonNoise.forward"]], "a() (deepinv.physics.singlephotonlidar method)": [[124, "deepinv.physics.SinglePhotonLidar.A"]], "a_dagger() (deepinv.physics.singlephotonlidar method)": [[124, "deepinv.physics.SinglePhotonLidar.A_dagger"]], "singlephotonlidar (class in deepinv.physics)": [[124, "deepinv.physics.SinglePhotonLidar"]], "singlepixelcamera (class in deepinv.physics)": [[125, "deepinv.physics.SinglePixelCamera"]], "a() (deepinv.physics.tomography method)": [[126, "deepinv.physics.Tomography.A"]], "a_adjoint() (deepinv.physics.tomography method)": [[126, "deepinv.physics.Tomography.A_adjoint"]], "a_dagger() (deepinv.physics.tomography method)": [[126, "deepinv.physics.Tomography.A_dagger"]], "tomography (class in deepinv.physics)": [[126, "deepinv.physics.Tomography"]], "uniformgaussiannoise (class in deepinv.physics)": [[127, "deepinv.physics.UniformGaussianNoise"]], "forward() (deepinv.physics.uniformgaussiannoise method)": [[127, "deepinv.physics.UniformGaussianNoise.forward"]], "uniformnoise (class in deepinv.physics)": [[128, "deepinv.physics.UniformNoise"]], "forward() (deepinv.physics.uniformnoise method)": [[128, "deepinv.physics.UniformNoise.forward"]], "gaussian_blur() (in module deepinv.physics.blur)": [[129, "deepinv.physics.blur.gaussian_blur"]], "ddrm (class in deepinv.sampling)": [[130, "deepinv.sampling.DDRM"]], "forward() (deepinv.sampling.ddrm method)": [[130, "deepinv.sampling.DDRM.forward"]], "dps (class in deepinv.sampling)": [[131, "deepinv.sampling.DPS"]], "compute_alpha_betas() (deepinv.sampling.dps method)": [[131, "deepinv.sampling.DPS.compute_alpha_betas"]], "forward() (deepinv.sampling.dps method)": [[131, "deepinv.sampling.DPS.forward"]], "diffpir (class in deepinv.sampling)": [[132, "deepinv.sampling.DiffPIR"]], "find_nearest() (deepinv.sampling.diffpir method)": [[132, "deepinv.sampling.DiffPIR.find_nearest"]], "forward() (deepinv.sampling.diffpir method)": [[132, "deepinv.sampling.DiffPIR.forward"]], "get_alpha_beta() (deepinv.sampling.diffpir method)": [[132, "deepinv.sampling.DiffPIR.get_alpha_beta"]], "get_alpha_prod() (deepinv.sampling.diffpir method)": [[132, "deepinv.sampling.DiffPIR.get_alpha_prod"]], "get_noise_schedule() (deepinv.sampling.diffpir method)": [[132, "deepinv.sampling.DiffPIR.get_noise_schedule"]], "diffusionsampler (class in deepinv.sampling)": [[133, "deepinv.sampling.DiffusionSampler"]], "montecarlo (class in deepinv.sampling)": [[134, "deepinv.sampling.MonteCarlo"]], "forward() (deepinv.sampling.montecarlo method)": [[134, "deepinv.sampling.MonteCarlo.forward"]], "get_chain() (deepinv.sampling.montecarlo method)": [[134, "deepinv.sampling.MonteCarlo.get_chain"]], "mean_has_converged() (deepinv.sampling.montecarlo method)": [[134, "deepinv.sampling.MonteCarlo.mean_has_converged"]], "reset() (deepinv.sampling.montecarlo method)": [[134, "deepinv.sampling.MonteCarlo.reset"]], "var_has_converged() (deepinv.sampling.montecarlo method)": [[134, "deepinv.sampling.MonteCarlo.var_has_converged"]], "skrock (class in deepinv.sampling)": [[135, "deepinv.sampling.SKRock"]], "ula (class in deepinv.sampling)": [[136, "deepinv.sampling.ULA"]], "test() (in module deepinv)": [[137, "deepinv.test"]], "train() (in module deepinv)": [[138, "deepinv.train"]], "rotate (class in deepinv.transform)": [[139, "deepinv.transform.Rotate"]], "forward() (deepinv.transform.rotate method)": [[139, "deepinv.transform.Rotate.forward"]], "scale (class in deepinv.transform)": [[140, "deepinv.transform.Scale"]], "forward() (deepinv.transform.scale method)": [[140, "deepinv.transform.Scale.forward"]], "shift (class in deepinv.transform)": [[141, "deepinv.transform.Shift"]], "forward() (deepinv.transform.shift method)": [[141, "deepinv.transform.Shift.forward"]], "basedeq (class in deepinv.unfolded)": [[142, "deepinv.unfolded.BaseDEQ"]], "forward() (deepinv.unfolded.basedeq method)": [[142, "deepinv.unfolded.BaseDEQ.forward"]], "baseunfold (class in deepinv.unfolded)": [[143, "deepinv.unfolded.BaseUnfold"]], "deq_builder() (in module deepinv.unfolded)": [[144, "deepinv.unfolded.DEQ_builder"]], "unfolded_builder() (in module deepinv.unfolded)": [[145, "deepinv.unfolded.unfolded_builder"]], "tensorlist (class in deepinv.utils)": [[146, "deepinv.utils.TensorList"]], "__add__() (deepinv.utils.tensorlist method)": [[146, "deepinv.utils.TensorList.__add__"]], "__mul__() (deepinv.utils.tensorlist method)": [[146, "deepinv.utils.TensorList.__mul__"]], "__neg__() (deepinv.utils.tensorlist method)": [[146, "deepinv.utils.TensorList.__neg__"]], "__sub__() (deepinv.utils.tensorlist method)": [[146, "deepinv.utils.TensorList.__sub__"]], "__truediv__() (deepinv.utils.tensorlist method)": [[146, "deepinv.utils.TensorList.__truediv__"]], "append() (deepinv.utils.tensorlist method)": [[146, "deepinv.utils.TensorList.append"]], "flatten() (deepinv.utils.tensorlist method)": [[146, "deepinv.utils.TensorList.flatten"]], "cal_psnr() (in module deepinv.utils)": [[147, "deepinv.utils.cal_psnr"]], "get_freer_gpu() (in module deepinv.utils)": [[148, "deepinv.utils.get_freer_gpu"]], "load_url_image() (in module deepinv.utils)": [[149, "deepinv.utils.load_url_image"]], "ones_like() (in module deepinv.utils)": [[150, "deepinv.utils.ones_like"]], "plot() (in module deepinv.utils)": [[151, "deepinv.utils.plot"]], "plot_curves() (in module deepinv.utils)": [[152, "deepinv.utils.plot_curves"]], "plot_parameters() (in module deepinv.utils)": [[153, "deepinv.utils.plot_parameters"]], "rand_like() (in module deepinv.utils)": [[154, "deepinv.utils.rand_like"]], "randn_like() (in module deepinv.utils)": [[155, "deepinv.utils.randn_like"]], "zeros_like() (in module deepinv.utils)": [[156, "deepinv.utils.zeros_like"]]}})